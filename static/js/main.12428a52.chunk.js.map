{"version":3,"sources":["icons.js","base/NavigationBar.js","img/logoSkeeellLight.svg","img/logoSkeeelledLight.svg","img/logoSkeeelledDark.svg","img/logoWeeeOpen.svg","img/logoSkeeellDark.svg","img/logoSkeeelledLightFooter.svg","img/logoSkeeelledDarkFooter.svg","base/Footer.js","base/List.js","base/MarkdownPreview.js","base/QuestionPreview.js","pages/AddQuestion.js","entities/CourseObj.js","api/API.js","pages/Answers.js","base/Suggestion.js","pages/CoursesList.js","pages/Exam.js","pages/Home.js","pages/LoginForm.js","pages/Profile.js","pages/Questions.js","pages/Replies.js","pages/UserSettings.js","pages/ListFullPage.js","pages/Bookmarks.js","pages/StartSimulation.js","pages/Simulation.js","pages/SimulationResult.js","pages/SimulationAccess.js","base/ListEntry.js","base/ListGroup.js","base/textInput/commands/insertTex.js","base/textInput/commands/saveImage.js","base/TextInput.js","base/Discussion.js","base/SearchBar.js","base/DebugPaths.js","base/MyPagination.js","App.js","reportWebVitals.js","index.js"],"names":["iconUser","xmlns","width","height","fill","className","viewBox","d","fillRule","iconLogout","stroke","strokeWidth","strokeLinecap","strokeLinejoin","iconAdmin","fakeQuestions","id","question","author","createdat","tags","excerpt","NavigationBar","props","useState","questions","Navbar","bg","dark","variant","to","Brand","Image","src","process","admin","Nav","Link","as","Collapse","NavDropdown","title","align","lg","Item","href","pathname","state","scope","rows","Divider","Form","Switch","label","defaultChecked","onChange","setdark","showhints","setshowhints","showdiscussion","setshowdiscussion","logged","onClick","logout","Footer","logoSkeeelledLightFooter","alt","logoWeeeOpen","logoSkeeellLight","HeaderColspan","ListDefault","rounded","toLowerCase","replace","colSpan","map","r","i","row","dotted","Table","striped","borderless","hover","ListQuestions","ListAnswers","Container","ListReplies","ListSuggestion","Stack","gap","ListSimulationResult","areAllAccordionItemsOpen","setAreAllAccordionItemsOpen","activeKeys","setActiveKeys","useEffect","index","length","Card","Header","Row","Col","Button","value","Accordion","defaultActiveKey","activeKey","onSelect","eventKeys","alwaysOpen","accordionKey","ListSelection","FloatingLabel","Select","List","MarkdownPreview","React","memo","markdown","remarkPlugins","remarkGfm","remarkMath","rehypePlugins","rehypeKatex","rehypeHighlight","QuestionPreview","showAdvice","setShowAdvice","course","timestamp","owner","Body","Title","content","hint","AddQuestion","courses","Label","size","Control","type","Check","CourseObj","code","name","cfu","prof","myCourse","this","json","Object","assign","prefix","getMyCourses","a","Promise","resolve","reject","fetch","then","res","status","myCourses","from","catch","err","getCourses","ok","getQuestions","courseId","getDiscussions","questionId","searchCourses","query","searchQuestion","searchDiscussion","API","Date","Answers","locationState","useLocation","discussions","setDiscussions","setQuestion","filter","console","log","childProps","textArea","placeholder","Suggestion","fluid","CoursesList","setCourses","Exam","body","Home","tests","lists","cols","tiled","LoginForm","username","setUsername","password","setPassword","errorMessage","setErrorMessage","Modal","Dialog","Alert","Group","controlId","ev","target","event","preventDefault","credentials","valid","checkPassword","login","Profile","xs","Questions","setQuestions","allQuestions","suggestions","suggestionType","isDesktop","matches","setMatches","media","window","matchMedia","listener","addEventListener","removeEventListener","useMediaQuery","sm","md","Answer","ans","answer","Replies","reply","replies","UserSettings","fake","ListFullPage","location","Bookmarks","StartSimulation","isMulti","setIsMulti","numQuestions","setNumQuestions","penaltyScore","setPenaltyScore","maxScore","setMaxScore","duration","setDuration","userInput","setUserInput","maxNumOfQuestion","InputGroup","Text","FormControl","e","Number","isNaN","num","penalty","max","Duration","h","Math","floor","parseInt","m","s","timeIn","setTimeIn","myInterval","setInterval","time","updateTime","clearInterval","toString","padStart","FinishModal","show","setShow","timeRecord","setTimeRecord","pointPerCorrectAns","timeElapsed","onHide","closeButton","Simulation","simulationRandomQuizType","pageNum","setPageNum","randomizer","random","quizType","setQuizType","PaginationRow","items","push","Pagination","active","numPage","Prev","Next","SimulationResult","numCorrect","numPenalty","numNotGiven","numQuiz","pointPerWrong","pointPerCorrect","mockCorrectAns","quizNum","score","isCorrect","mockUserAns","randomAns","examDuration","split","n","useAns","left","tot","timeUsedStr","abs","responsive","b","SimulationAccess","professor","enrolled","coursesEnrolled","date","simulationResult","courseSelected","setCourseSelected","courseSelectedTitle","setCourseSelectedTitle","DropdownButton","Dropdown","ListGroup","varient","ListEntryDefault","cell","ListEntryCourses","professors","ListEntryQuestions","t","ListEntryAnswers","rowspan","ListEntryReplies","ListEntryTest","c","ListEntrySuggestion","ListEntrySimulationResult","eventKey","ListEntrySelection","key","ListEntry","useless","slice","l","j","Array","keys","insertTex","icon","buttonProps","execute","state2","textApi","initialState","newSelectionRange","MarkdownUtil","selectWord","text","selection","state1","setSelectionRange","s1","selectedText","substring","replaceSelection","start","end","saveImage","context","l18n","Error","pasteOptions","multiple","accept","isPasteEvent","dataTransferToArray","clipboardData","isDragEvent","dataTransfer","fileListToArray","files","filteredItems","filterItems","blob","alert","getState","breaksBeforeCount","getBreaksNeededForEmptyLineBefore","breaksBefore","join","placeHolder","uploadingImage","readFileAsync","blobContents","savingImage","next","imageUrl","newState","realImageMarkdown","selectionDelta","file","reader","FileReader","onload","result","onerror","readAsDataURL","acceptedTypes","fileExtensions","Set","test","mimeTypes","anyTypes","f","has","item","kind","getAsFile","list","undefined","entryFiles","fullName","shortName","originalContent","TextInput","selectedTab","onTabChange","pythonQuestion","val","setVal","selTab","setSelTab","base64Imgs","setBase64Imgs","editorHeight","setEditorHeight","isFullScreen","setIsFullScreen","uploadImage","data","filename","mime","b64","buffer","Buffer","Jimp","read","image","getWidth","getHeight","scaleToFit","getBufferAsync","pop","processedBuffer","processedData","prev","generatePreviewMarkdown","re","RegExp","fn","setTimeout","replaceAll","match","loadingPreview","commands","toolbarCommands","getDefaultToolbarCommands","generateMarkdownPreview","previewMarkdown","paste","command","outputHeight","onCopy","newText","endsWith","exec","substr","lastIndex","projectFiles","backgroundColor","onFullScreen","fs","fakeAnswers","like","dislike","Discussion","showDiscussion","setShowDiscussion","in","SearchBar","apiCall","fakeSuggestions","setSuggestions","setValue","charChange","error","ref","useRef","isLoading","searchText","emptyLabel","promptText","options","filterBy","renderMenuItemChildren","option","onInputChange","inputText","onSearch","current","clear","styles","clearButton","DebugPaths","style","padding","onClose","dismissible","MyPagination","setActive","App","loggedIn","setLoggedIn","showHints","setShowHints","setAdmin","message","setMessage","setDark","doLogout","setlogged","noclose","msg","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","basename","PUBLIC_URL","splitArray","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.12428a52.chunk.js","sourcesContent":["const iconUser = (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"24\"\n    height=\"24\"\n    fill=\"currentColor\"\n    className=\"bi bi-person-circle\"\n    viewBox=\"0 0 16 16\"\n  >\n    <path d=\"M11 6a3 3 0 1 1-6 0 3 3 0 0 1 6 0z\" />\n    <path\n      fillRule=\"evenodd\"\n      d=\"M0 8a8 8 0 1 1 16 0A8 8 0 0 1 0 8zm8-7a7 7 0 0 0-5.468 11.37C3.242 11.226 4.805 10 8 10s4.757 1.225 5.468 2.37A7 7 0 0 0 8 1z\"\n    />\n  </svg>\n);\n\nconst iconLogo = (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"24\"\n    height=\"20\"\n    fill=\"currentColor\"\n    className=\"bi bi-book\"\n    viewBox=\"0 1 16 16\"\n  >\n    <path d=\"M1 2.828c.885-.37 2.154-.769 3.388-.893 1.33-.134 2.458.063 3.112.752v9.746c-.935-.53-2.12-.603-3.213-.493-1.18.12-2.37.461-3.287.811V2.828zm7.5-.141c.654-.689 1.782-.886 3.112-.752 1.234.124 2.503.523 3.388.893v9.923c-.918-.35-2.107-.692-3.287-.81-1.094-.111-2.278-.039-3.213.492V2.687zM8 1.783C7.015.936 5.587.81 4.287.94c-1.514.153-3.042.672-3.994 1.105A.5.5 0 0 0 0 2.5v11a.5.5 0 0 0 .707.455c.882-.4 2.303-.881 3.68-1.02 1.409-.142 2.59.087 3.223.877a.5.5 0 0 0 .78 0c.633-.79 1.814-1.019 3.222-.877 1.378.139 2.8.62 3.681 1.02A.5.5 0 0 0 16 13.5v-11a.5.5 0 0 0-.293-.455c-.952-.433-2.48-.952-3.994-1.105C10.413.809 8.985.936 8 1.783z\" />\n  </svg>\n);\n\nconst iconLogout = (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"24\"\n    height=\"24\"\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    stroke=\"currentColor\"\n    strokeWidth=\"2\"\n    strokeLinecap=\"round\"\n    strokeLinejoin=\"round\"\n  >\n    <path d=\"M10 3H6a2 2 0 0 0-2 2v14c0 1.1.9 2 2 2h4M16 17l5-5-5-5M19.8 12H9\" />\n  </svg>\n);\n\nconst iconAdmin = (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"16\"\n    height=\"24\"\n    fill=\"currentColor\"\n    className=\"bi bi-gear-fill\"\n    viewBox=\"0 2 16 16\"\n  >\n    <path d=\"M9.405 1.05c-.413-1.4-2.397-1.4-2.81 0l-.1.34a1.464 1.464 0 0 1-2.105.872l-.31-.17c-1.283-.698-2.686.705-1.987 1.987l.169.311c.446.82.023 1.841-.872 2.105l-.34.1c-1.4.413-1.4 2.397 0 2.81l.34.1a1.464 1.464 0 0 1 .872 2.105l-.17.31c-.698 1.283.705 2.686 1.987 1.987l.311-.169a1.464 1.464 0 0 1 2.105.872l.1.34c.413 1.4 2.397 1.4 2.81 0l.1-.34a1.464 1.464 0 0 1 2.105-.872l.31.17c1.283.698 2.686-.705 1.987-1.987l-.169-.311a1.464 1.464 0 0 1 .872-2.105l.34-.1c1.4-.413 1.4-2.397 0-2.81l-.34-.1a1.464 1.464 0 0 1-.872-2.105l.17-.31c.698-1.283-.705-2.686-1.987-1.987l-.311.169a1.464 1.464 0 0 1-2.105-.872l-.1-.34zM8 10.93a2.929 2.929 0 1 1 0-5.86 2.929 2.929 0 0 1 0 5.858z\" />\n  </svg>\n);\n\nconst iconMeeting = (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"16\"\n    height=\"16\"\n    viewBox=\"0 4 28 24\"\n    fill=\"none\"\n    stroke=\"#ffffff\"\n    strokeWidth=\"2\"\n    strokeLinecap=\"round\"\n    strokeLinejoin=\"round\"\n  >\n    <path d=\"M20 14.66V20a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h5.34\"></path>\n    <polygon points=\"18 2 22 6 12 16 8 16 8 12 18 2\"></polygon>\n  </svg>\n);\n\nconst iconAdd = (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"20\"\n    height=\"20\"\n    fill=\"currentColor\"\n    className=\"bi bi-plus-circle-fill\"\n    viewBox=\"0 0 16 18\"\n  >\n    <path d=\"M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zM8.5 4.5a.5.5 0 0 0-1 0v3h-3a.5.5 0 0 0 0 1h3v3a.5.5 0 0 0 1 0v-3h3a.5.5 0 0 0 0-1h-3v-3z\" />\n  </svg>\n);\n\nconst iconDelete = (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"24\"\n    height=\"24\"\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    stroke=\"#ffffff\"\n    strokeWidth=\"2\"\n    strokeLinecap=\"round\"\n    strokeLinejoin=\"round\"\n  >\n    <polyline points=\"3 6 5 6 21 6\"></polyline>\n    <path d=\"M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2\"></path>\n    <line x1=\"10\" y1=\"11\" x2=\"10\" y2=\"17\"></line>\n    <line x1=\"14\" y1=\"11\" x2=\"14\" y2=\"17\"></line>\n  </svg>\n);\n\nexport {\n  iconUser,\n  iconLogo,\n  iconLogout,\n  iconAdmin,\n  iconMeeting,\n  iconAdd,\n  iconDelete,\n};\n","import {\n  Navbar,\n  Nav,\n  NavDropdown,\n  Image,\n  Form,\n  OverlayTrigger,\n  Popover,\n} from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { iconUser, iconLogout, iconAdmin } from \"../icons.js\";\nimport \"./NavigationBar.css\";\nimport { useState } from \"react\";\n\nconst fakeQuestions = [\n  {\n    id: 1,\n    question: \"What is a vector?\",\n    author: \"Donato\",\n    createdat: \"15:20 12/01/2021\",\n    tags: [\"vectors\"],\n    excerpt: \"Cras justo odio...\",\n  },\n  {\n    id: 2,\n    question: \"Who is Maxwell?\",\n    author: \"Jim\",\n    createdat: \"17:30 13/02/2021\",\n    tags: [\"physics\"],\n    excerpt: \"Cras justo odio...\",\n  },\n  {\n    id: 3,\n    question: \"How many meters per second?\",\n    author: \"Derek\",\n    createdat: \"19:40 14/03/2021\",\n    tags: [\"physics\", \"kinematic\"],\n    excerpt: \"Cras justo odio...\",\n  },\n];\n\nfunction NavigationBar(props) {\n  const [questions, setQuestions] = useState(fakeQuestions /*[]*/);\n\n  return (\n    <Navbar\n      id={\"navbar\"}\n      bg={props.dark ? \"dark\" : \"light\"}\n      variant={props.dark ? \"dark\" : \"light\"}\n    >\n      <Link to={\"/\"}>\n        <Navbar.Brand>\n          <Image\n            id={\"navbar-logo-skeeelled\"}\n            src={\n              props.dark\n                ? process.env.PUBLIC_URL + \"/img/logoSkeeelledDark.svg\"\n                : process.env.PUBLIC_URL + \"/img/logoSkeeelledLight.svg\"\n            }\n            className=\"logo\"\n          />\n        </Navbar.Brand>\n      </Link>\n\n      {props.admin ? (\n        <Link to=\"/admin/list\">\n          <Navbar.Brand>{iconAdmin} Admin panel </Navbar.Brand>\n        </Link>\n      ) : null}\n\n      <Nav.Link\n        as={Link}\n        className={props.dark ? \"home-link-dark\" : \"home-link\"}\n        to=\"/\"\n      >\n        Home\n      </Nav.Link>\n\n      <Nav.Link\n        as={Link}\n        className={props.dark ? \"course-link-dark\" : \"course-link\"}\n        to=\"/courses\"\n      >\n        Courses\n      </Nav.Link>\n\n      <Nav.Link\n        as={Link}\n        className={props.dark ? \"simulation-link-dark\" : \"simulation-link\"}\n        to=\"/simulationview\"\n      >\n        Simulation\n      </Nav.Link>\n\n      <Nav.Link\n        as={Link}\n        className={props.dark ? \"add-question-link-dark\" : \"add-question-link\"}\n        to=\"/addquestion\"\n      >\n        Add question\n      </Nav.Link>\n\n      <Nav id={\"user-dropdown\"}>\n        <Navbar.Collapse className=\"mr-4 mt-0\">\n          <NavDropdown\n            id=\"dropdown-menu-align-responsive-2\"\n            title={iconUser}\n            align={{ lg: \"end\" }}\n          >\n            <Link to=\"/profile\" className=\"dropdown-link\">\n              <NavDropdown.Item href=\"#action/3.1\">Profile</NavDropdown.Item>\n            </Link>\n            <Link\n              className=\"dropdown-link\"\n              to={{ pathname: \"/bookmarks\" }}\n              state={{\n                scope: \"questions\",\n                title: \"Bookmarked Questions\",\n                rows: questions,\n              }}\n              className=\"dropdown-link\"\n            >\n              <NavDropdown.Item href=\"#action/3.2\">Bookmarks</NavDropdown.Item>\n            </Link>\n            <Link to=\"/settings\" className=\"dropdown-link\">\n              <NavDropdown.Item href=\"#action/3.3\">Settings</NavDropdown.Item>\n            </Link>\n            <NavDropdown.Divider />\n            <div className=\"dropdown-item\">\n              <Form.Switch\n                label=\"Dark\"\n                id=\"custom-switch-dark\"\n                defaultChecked={props.dark}\n                onChange={() => props.setdark(!props.dark)}\n              />\n            </div>\n            <div className=\"dropdown-item\">\n              <Form.Switch\n                label=\"Show hints\"\n                id=\"custom-switch-hint\"\n                defaultChecked={props.showhints}\n                onChange={() => props.setshowhints(!props.showhints)}\n              />\n            </div>\n            <div className=\"dropdown-item\">\n              <Form.Switch\n                label=\"Show discussion\"\n                id=\"custom-switch-disc\"\n                defaultChecked={props.showdiscussion}\n                onChange={() => props.setshowdiscussion(!props.showdiscussion)}\n              />\n            </div>\n            {props.logged && (\n              <>\n                <NavDropdown.Divider />\n                <NavDropdown.Item onClick={props.logout}>\n                  Logout {iconLogout}\n                </NavDropdown.Item>\n              </>\n            )}\n          </NavDropdown>\n        </Navbar.Collapse>\n      </Nav>\n\n      {/* <Form.Switch label=\"Check this switch\" type=\"switch\" id=\"custom-switch\"/> */}\n\n      {/* <OverlayTrigger\n\t\t\t\ttrigger=\"click\"\n\t\t\t\tkey=\"bottom\"\n\t\t\t\tplacement=\"bottom\"\n\t\t\t\toverlay={\n\t\t\t\t\t<Popover id=\"popover-positioned-bottom\">\n\t\t\t\t\t<Popover.Header as=\"h3\">Popover bottom</Popover.Header>\n\t\t\t\t\t<Popover.Body>\n\t\t\t\t\t\t<strong>Holy guacamole!</strong> Check this info.\n\t\t\t\t\t</Popover.Body>\n\t\t\t\t\t</Popover>\n\t\t\t\t}\n\t\t\t\t>\n\t\t\t\t<Button variant=\"secondary\">Popover on bottom</Button>\n\t\t\t\t</OverlayTrigger>\n\t\t\t*/}\n    </Navbar>\n  );\n}\n\nexport default NavigationBar;\n","export default __webpack_public_path__ + \"static/media/logoSkeeellLight.196ac81d.svg\";","export default __webpack_public_path__ + \"static/media/logoSkeeelledLight.89a46839.svg\";","export default __webpack_public_path__ + \"static/media/logoSkeeelledDark.8ee41200.svg\";","export default __webpack_public_path__ + \"static/media/logoWeeeOpen.a7c8f3ee.svg\";","export default __webpack_public_path__ + \"static/media/logoSkeeellDark.aa3ae18b.svg\";","export default __webpack_public_path__ + \"static/media/logoSkeeelledLightFooter.79648b4a.svg\";","export default __webpack_public_path__ + \"static/media/logoSkeeelledDarkFooter.e5149d82.svg\";","import { Image } from \"react-bootstrap\";\nimport {\n  logoSkeeelledLight,\n  logoSkeeellLight,\n  logoSkeeelledDark,\n  logoSkeeellDark,\n  logoWeeeOpen,\n} from \"../img/\";\nimport {\n  logoSkeeelledLightFooter,\n  logoSkeeellLightFooter,\n  logoSkeeelledDarkFooter,\n  logoSkeeellDarkFooter,\n} from \"../img/\";\nimport \"./Footer.css\";\n\nfunction Footer() {\n  return (\n    <div id={\"footer\"} className=\"mx-auto\">\n      <h5 id={\"skeeelled\"} className=\"mx-auto\">\n        <a\n          id={\"skeeelled-logo-link\"}\n          href={\"https://github.com/weee-open/skeeelled\"}\n        >\n          <Image\n            id={\"skeeelled-logo\"}\n            src={logoSkeeelledLightFooter}\n            alt={\"skeeelled\"}\n          />\n        </a>\n        is a tool realized by\n        <a href={\"https://weeeopen.polito.it\"}>\n          <Image id={\"weee-open-logo\"} src={logoWeeeOpen} alt={\"WEEE Open\"} />\n        </a>\n      </h5>\n      <h5 id={\"skeeell\"} className=\"mx-auto\">\n        See more about\n        <a href={\"https://weeeopen.polito.it/skeeell\"}>\n          <Image id={\"skeeell-logo\"} src={logoSkeeellLight} alt={\"skeeell\"} />\n        </a>\n      </h5>\n    </div>\n  );\n}\n\nexport default Footer;\n","import {\n  Accordion,\n  Col,\n  Container,\n  Row,\n  Table,\n  Form,\n  FloatingLabel,\n  Button,\n  Image,\n  Stack,\n  Card,\n} from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { ListEntry, MyPagination, SearchBar } from \"./\";\n// import \"./List.css\";\nimport \"./stylesheet/List.css\"; // scss file access\nimport { useEffect, useState } from \"react\";\n\nfunction HeaderColspan(scope) {\n  switch (scope) {\n    case \"courses\":\n      return \"4\";\n    case \"questions\":\n      return \"4\";\n    default:\n      return \"10\";\n  }\n}\n\nfunction ListDefault({ props }) {\n  let entryCount;\n  return (\n    <>\n      {props.rounded ? (\n        <div\n          className={\n            \"default-table-\" + props.title.toLowerCase().replace(/\\s/g, \"-\")\n          }\n        >\n          <table className=\"list roundedList\">\n            <thead>\n              <tr>\n                <th className=\"listTitle\" colSpan={HeaderColspan(props.scope)}>\n                  {props.title}\n                </th>\n              </tr>\n            </thead>\n            <tbody className=\"list-body\">\n              {props.rows.map((r, i) => {\n                entryCount = i;\n                return (\n                  <ListEntry\n                    key={i}\n                    row={r}\n                    scope={props.scope}\n                    dotted={props.dotted}\n                  />\n                );\n              })}\n            </tbody>\n          </table>\n        </div>\n      ) : (\n        <div\n          className={\n            \"default-table-\" + props.title.toLowerCase().replace(/\\s/g, \"-\")\n          }\n        >\n          <Table striped borderless hover className=\"list\">\n            <thead className=\"listTitle\">\n              <tr>\n                <th colSpan={HeaderColspan(props.scope)}>{props.title}</th>\n              </tr>\n            </thead>\n            <tbody>\n              {props.rows.map((r, i) => (\n                <ListEntry key={i} scope={props.scope} row={r} />\n              ))}\n            </tbody>\n          </Table>\n        </div>\n      )}\n\n      {/*/!*pagination for list longer that 10 item*!/*/}\n      {/*{*/}\n      {/*  entryCount > 10 ? <MyPagination*/}\n      {/*  />: <></>*/}\n      {/*}*/}\n    </>\n  );\n}\n\nfunction ListQuestions({ props }) {\n  return (\n    <>\n      <h3 className=\"listQuestionsTitle\">{props.title}</h3>\n      <SearchBar />\n      {props.rows.map((r, i) => (\n        <ListEntry key={i} scope={props.scope} row={r} />\n      ))}\n    </>\n  );\n}\n\nfunction ListAnswers({ props }) {\n  return (\n    <Container className=\"list listAnswers\">\n      <div>\n        {props.rows.map((r, i) => (\n          <ListEntry key={i} scope={props.scope} row={r} />\n        ))}\n      </div>\n    </Container>\n  );\n}\n\nfunction ListReplies({ props }) {\n  return (\n    <>\n      <h4>{props.title}</h4>\n      <hr />\n      {props.rows.map((r) => (\n        <ListEntry scope={props.scope} row={r} />\n      ))}\n    </>\n  );\n}\n\nfunction ListSuggestion({ props }) {\n  return (\n    <>\n      <Container>\n        <h3 className=\"list-suggestion-title\">{props.title}</h3>\n        <div className=\"listSuggestion-questions\">\n          <Stack gap={3}>\n            {props.rows.map((r, i) => (\n              <ListEntry key={i} scope={props.scope} row={r} />\n            ))}\n          </Stack>\n        </div>\n      </Container>\n    </>\n  );\n}\n\nfunction ListSimulationResult({ props }) {\n  const [areAllAccordionItemsOpen, setAreAllAccordionItemsOpen] =\n    useState(false);\n  const [activeKeys, setActiveKeys] = useState([]);\n\n  // when the boolean changes, either add all available activeKeys or remove them all\n  useEffect(() => {\n    if (areAllAccordionItemsOpen) {\n      setActiveKeys(props.rows.map((row, index) => index));\n    } else {\n      setActiveKeys([]);\n    }\n  }, [areAllAccordionItemsOpen, props.rows]);\n\n  // handle cases when user manually opens / closes all accordion items\n  useEffect(() => {\n    if (activeKeys.length === 0) {\n      setAreAllAccordionItemsOpen(false);\n    }\n    if (activeKeys.length === props.rows.length) {\n      setAreAllAccordionItemsOpen(true);\n    }\n  }, [activeKeys.length, props.rows.length]);\n\n  const updateActiveKeys = (eventKeys) => {\n    setActiveKeys(eventKeys);\n  };\n\n  return (\n    <>\n      <Container className=\"list-simulation-result\">\n        <Card className=\"accordion-header-card\">\n          <Card.Header>\n            <Row>\n              <Col>\n                <h4 className=\"listSimulationResultTitle\">Your Answers</h4>\n              </Col>\n              <Col className=\"col-md-2\">\n                <Button\n                  className=\"btn-outline-success-simulation-result\"\n                  variant=\"outline-success\"\n                  value=\"Show/Close\"\n                  onClick={() => {\n                    setAreAllAccordionItemsOpen(!areAllAccordionItemsOpen);\n                  }}\n                >\n                  {areAllAccordionItemsOpen ? \"Close All\" : \"Show All\"}\n                </Button>\n              </Col>\n            </Row>\n          </Card.Header>\n        </Card>\n        <Row>\n          <Accordion\n            className=\"listSimulationResults\"\n            defaultActiveKey={[]}\n            activeKey={activeKeys}\n            onSelect={updateActiveKeys}\n            alwaysOpen\n          >\n            {props.rows.map((row, index) => (\n              <ListEntry\n                key={index}\n                scope={props.scope}\n                row={row}\n                accordionKey={index}\n              />\n            ))}\n          </Accordion>\n        </Row>\n        <Card className=\"accordion-footer-card\" />\n      </Container>\n    </>\n  );\n}\n\nfunction ListSelection({ props }) {\n  return (\n    <FloatingLabel label={props.title}>\n      <Form.Select aria-label=\"Selection\" className=\"my-4\">\n        {props.rows.map((r, i) => (\n          <ListEntry scope={props.scope} row={r} key={i} />\n        ))}\n      </Form.Select>\n    </FloatingLabel>\n  );\n}\n\nfunction List(props) {\n  if (props.scope === \"questions\") return <ListQuestions props={props} />;\n  if (props.scope === \"answers\") return <ListAnswers props={props} />;\n  if (props.scope === \"replies\") return <ListReplies props={props} />;\n  if (props.scope === \"suggestion\") return <ListSuggestion props={props} />;\n  if (props.scope === \"simulationResult\")\n    return <ListSimulationResult props={props} />;\n  if (props.scope === \"selection\") return <ListSelection props={props} />;\n  return <ListDefault props={props} />;\n}\n\nexport default List;\n","import React from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport remarkGfm from \"remark-gfm\";\nimport remarkMath from \"remark-math\";\nimport rehypeKatex from \"rehype-katex\";\nimport rehypeHighlight from \"rehype-highlight\";\n\nimport \"./MarkdownPreview.css\";\n\nconst MarkdownPreview = React.memo(({ markdown }) => {\n  return (\n    <ReactMarkdown\n      className=\"markdown-preview\"\n      remarkPlugins={[remarkGfm, remarkMath]}\n      rehypePlugins={[rehypeKatex, rehypeHighlight]}\n    >\n      {markdown}\n    </ReactMarkdown>\n  );\n});\n\nexport default MarkdownPreview;\n","import React, { useState } from \"react\";\nimport MarkdownPreview from \"./MarkdownPreview\";\nimport \"./stylesheet/QuestionPreview.css\";\nimport remarkGfm from \"remark-gfm\";\nimport remarkMath from \"remark-math\";\nimport rehypeKatex from \"rehype-katex\";\nimport rehypeHighlight from \"rehype-highlight\";\n\nimport { Card, Button } from \"react-bootstrap\";\n\nimport \"katex/dist/katex.min.css\";\nimport \"highlight.js/styles/github.css\";\n\nfunction QuestionPreview({ question, showhints }) {\n  const [showAdvice, setShowAdvice] = useState(showhints || false);\n\n  return (\n    <Card>\n      <Card.Header>\n        <div className=\"d-flex justify-content-between\">\n          <div className=\"course-name\">{`${question.course} ${question.title}`}</div>\n          <div className=\"p2\">\n            <small className=\"question-create-date\">\n              {\"Posted on \" + question.timestamp\n                // question.date.toLocaleDateString(\"it-IT\", {\n                //   year: \"numeric\",\n                //   month: \"numeric\",\n                //   day: \"numeric\",\n                // })\n              }\n            </small>\n            <br />\n            <small className=\"question-source\">\n              by {question.owner} &nbsp;\n            </small>\n          </div>\n        </div>\n      </Card.Header>\n      <Card.Body>\n        <Card.Title>{question.title}</Card.Title>\n        <MarkdownPreview markdown={question.content} />\n        {question.hint && (\n          <Button\n            className=\"show-advice-button\"\n            onClick={() => {\n              setShowAdvice(!showAdvice);\n            }}\n          >\n            {showAdvice ? \"Hide advice\" : \"Show advice\"}\n          </Button>\n        )}\n        {showAdvice && <h6 className=\"question-advice-shown\">{question.hint}</h6>}\n      </Card.Body>\n    </Card>\n  );\n}\n\nexport default QuestionPreview;\n","import { useState } from \"react\";\nimport { Button, Form } from \"react-bootstrap\";\nimport { List, TextInput } from \"../base\";\nimport \"./AddQuestion.css\";\n\nfunction AddQuestion(props) {\n  const fakeCourses = [\"Analysis 1\", \"Physics 1\", \"Geometry\"];\n\n  const [courses, setCourses] = useState(fakeCourses /*[]*/);\n  return (\n    <>\n      <Form.Label size=\"lg\">Choose moodle XML file</Form.Label>\n      <Form.Control type=\"file\" size=\"lg\" />\n      <List scope=\"selection\" title=\"Select course\" rows={courses} />\n      <Form.Check type=\"checkbox\" label=\"This is an exam simulation\" />\n      {/* <TextInput/> */}\n      <Button type=\"submit\" className=\"submit-button my-4\" onClick={() => {}}>\n        Upload\n      </Button>\n    </>\n  );\n}\n\nexport default AddQuestion;\n","class CourseObj {\n  constructor(id, code, name, cfu, prof, myCourse) {\n    this.id = id;\n    this.code = code;\n    this.name = name;\n    this.cfu = cfu;\n    this.prof = prof;\n    myCourse ? (this.myCourse = 1) : (this.myCourse = 0);\n  }\n\n  static from(json) {\n    return Object.assign(new CourseObj(), json);\n  }\n}\n\nexport default CourseObj;\n","import CourseObj from \"../entities/CourseObj\";\n\nconst prefix = \"http://localhost:8000/v1\";\n\n// header API\nconst postLogout = async () => {\n  return new Promise((resolve, reject) => {\n    fetch(prefix + \"/logout\", { method: \"POST\" })\n      .then((res) => {\n        if (res.ok) {\n          resolve(null);\n        } else {\n          reject(\"Generic Error\");\n        }\n      })\n      .catch((err) => {\n        reject(\"Server Error\");\n      });\n  });\n};\n\n// Courses related APIs\nconst getMyCourses = async () => {\n  return new Promise((resolve, reject) => {\n    fetch(prefix + \"/mycourses\")\n      .then((res) => {\n        if (res.status === 404) {\n          resolve([]);\n        }\n        res\n          .json()\n          .then((json) =>\n            resolve(json.map((myCourses) => CourseObj.from(myCourses)))\n          )\n          .catch((err) => reject(\"Generic Error\"));\n      })\n      .catch((err) => reject(\"Unavailable\"));\n  });\n};\n\nconst getCourses = async () => {\n  return new Promise((resolve, reject) => {\n    fetch(prefix + \"/courses\")\n      .then((res) => {\n        if (res.status === 404) {\n          resolve([]);\n        } else if (res.status === 401) {\n          reject(\"Authentication Error\");\n        } else if (res.ok) {\n          res\n            .json()\n            .then((json) =>\n              resolve(json.map((courses) => CourseObj.from(courses)))\n            )\n            .catch((err) => reject(err));\n        } else {\n          reject(\"Generic Error\");\n        }\n      })\n      .catch((err) => reject(\"Unavailable\"));\n  });\n};\n\nconst getQuestions = async (courseId) => {\n    return new Promise((resolve, reject) => {\n        fetch(prefix + \"/questions?course_id=\" + courseId + \"&page=1&itemsPerPage=-1\")\n            .then((res) => {\n                if (res.status === 404) {\n                    resolve([]);\n                } else if (res.status === 401) {\n                    reject(\"Authentication Error\");\n                } else if (res.ok) {\n                    res\n                        .json()\n                        .then((json) =>\n                            resolve(json)\n                        )\n                        .catch((err) => reject(err));\n                } else {\n                    reject(\"Generic Error\");\n                }\n            })\n            .catch((err) => reject(\"Unavailable\"));\n    });\n};\n\nconst getDiscussions = async (questionId) => {\n    return new Promise((resolve, reject) => {\n        fetch(prefix + \"/discussion?question_id=\" + questionId + \"&page=1&itemsPerPage=-1\")\n            .then((res) => {\n                if (res.status === 404) {\n                    resolve([]);\n                } else if (res.status === 401) {\n                    reject(\"Authentication Error\");\n                } else if (res.ok) {\n                    res\n                        .json()\n                        .then((json) =>\n                            resolve(json)\n                        )\n                        .catch((err) => reject(err));\n                } else {\n                    reject(\"Generic Error\");\n                }\n            })\n            .catch((err) => reject(\"Unavailable\"));\n    });\n};\n\n\nconst searchCourses = async (query) => {\n  return new Promise((resolve, reject) => {\n    fetch(prefix + \"/searchCourses?query=\" + query)\n      .then((res) => {\n        if (res.status === 404) {\n          resolve([]);\n        } else if (res.status === 401) {\n          reject(\"Authentication Error\");\n        } else if (res.ok) {\n          res\n            .json()\n            .then((json) =>\n              resolve(json.map((courses) => CourseObj.from(courses)))\n            )\n            .catch((err) => reject(\"Generic Error\"));\n        } else {\n          reject(\"Generic Error\");\n        }\n      })\n      .catch((err) => reject(\"Unavailable\"));\n  });\n};\n\nconst searchQuestion = async () => {\n  return new Promise((resolve, reject) => {\n    fetch(prefix + \"/searchQuestion\")\n      .then((res) => {\n        if (res.status === 404) {\n          resolve([]);\n        } else if (res.status === 401) {\n          reject(\"Authentication Error\");\n        } else if (res.ok) {\n          res\n            .json()\n            .then((json) =>\n              resolve(json.map((courses) => CourseObj.from(courses)))\n            )\n            .catch((err) => reject(\"Generic Error\"));\n        } else {\n          reject(\"Generic Error\");\n        }\n      })\n      .catch((err) => reject(\"Unavailable\"));\n  });\n};\n\nconst searchDiscussion = async () => {\n  return new Promise((resolve, reject) => {\n    fetch(prefix + \"/searchDiscussion\")\n      .then((res) => {\n        if (res.status === 404) {\n          resolve([]);\n        } else if (res.status === 401) {\n          reject(\"Authentication Error\");\n        } else if (res.ok) {\n          res\n            .json()\n            .then((json) =>\n              resolve(json.map((courses) => CourseObj.from(courses)))\n            )\n            .catch((err) => reject(\"Generic Error\"));\n        } else {\n          reject(\"Generic Error\");\n        }\n      })\n      .catch((err) => reject(\"Unavailable\"));\n  });\n};\n\nconst API = {\n  getCourses,\n  getMyCourses,\n    getQuestions,\n    getDiscussions,\n  searchCourses,\n  searchQuestion,\n  searchDiscussion,\n};\nexport default API;\n","import {useEffect, useState} from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { QuestionPreview, Discussion, TextInput } from \"../base\";\nimport \"./stylesheet/Answer.css\";\nimport API from \"../api/API\";\nimport {useLocation} from \"react-router-dom\";\n\nconst fakeQuestion = {\n  course_code: \"01UROLM\",\n  course_name: \"Mathematical methods for Computer Science\",\n  title: \"Theory of distributions\",\n  author: \"Sahircan Sürmeli\",\n  tags: [\"distributions\", \"functionals\", \"test functions\"],\n  text: \"Find all distributions $T \\\\in D^\\\\prime$ such that $T^\\\\prime = \\\\delta_0 + \\\\delta_2 - 2\\\\delta^\\\\prime_1$.\",\n  date: new Date(\"April 23, 2022\"),\n  advice: \"You have to integrate something.\",\n};\n\nfunction Answers(props) {\n\n    const locationState = useLocation().state;\n\n    // get the discussions of the question\n    useEffect(()=> {\n        API.getDiscussions(locationState.questionId)\n            .then((discussions) => setDiscussions(discussions))\n    }, [])\n\n    // get the question => pass to <QuestionPreview>\n    useEffect(()=> {\n        API.getQuestions(locationState.courseId)\n            .then((questions) => setQuestion(questions.filter((question)=> question[\"_id\"] === locationState.questionId)[0]))\n    }, [])\n\n\n\n\n  const [question, setQuestion] = useState({});\n    const [discussions, setDiscussions] = useState([]);\n\n    console.log(discussions)\n\n\n  return (\n    <Container className=\"answer-container\">\n      <Row lg={12} className=\"header\">\n        <Col>\n          <QuestionPreview question={question} showhints={props.showhints} />\n        </Col>\n      </Row>\n\n      <Row className=\"text-input\">\n        <Col>\n          <TextInput\n            childProps={{\n              textArea: {\n                placeholder: \"Leave a comment\",\n              },\n            }}\n          />\n        </Col>\n      </Row>\n\n      <Discussion showdiscussion={props.showdiscussion} discussions={discussions} />\n    </Container>\n  );\n}\n\nexport default Answers;\n","import List from \"./List\";\nimport { ListEntry } from \"./index\";\nimport { Card, Container, Row } from \"react-bootstrap\";\n// import \"./Suggestion.css\";\nimport \"./stylesheet/Suggestion.css\";\n\nfunction Suggestion(props) {\n  return (\n    <Container className=\"suggestion-container\" fluid>\n      <Card className=\"suggestion-card\">\n        <Card.Body>\n          <List scope={props.scope} title={props.title} rows={props.rows} />\n        </Card.Body>\n      </Card>\n    </Container>\n  );\n}\n\nexport default Suggestion;\n","import { Row, Container } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { useEffect, useState /* , useEffect */ } from \"react\";\n\nimport { Recent, List, SearchBar, MyPagination } from \"../base/\";\nimport \"./stylesheet/CoursesList.css\";\nimport Suggestion from \"../base/Suggestion\";\nimport API from \"../api/API\";\nimport CourseObj from \"../entities/CourseObj\";\n\nfunction CoursesList() {\n  /** Mock courses and questions **/\n  const fakeCourses = [\n    { code: \"A0B1C2\", course: \"Analysis 1\", cfu: 10, professor: \"Mario Rossi\" },\n    {\n      code: \"D3E4F5\",\n      course: \"Physics 1\",\n      cfu: 10,\n      professor: \"Stefano Bianchi\",\n    },\n    {\n      code: \"G6H7I8\",\n      course: \"Geometry\",\n      cfu: 10,\n      professor: \"Giuseppe Verdi\",\n    },\n  ];\n\n  const fakeQuestions = [\n    {\n      id: 1,\n      question: \"What is a vector?\",\n      author: \"Donato\",\n      createdat: \"15:20 12/01/2021\",\n      tags: [\"vectors\"],\n      excerpt: \"Cras justo odio...\",\n    },\n    {\n      id: 2,\n      question: \"Who is Maxwell?\",\n      author: \"Jim\",\n      createdat: \"17:30 13/02/2021\",\n      tags: [\"physics\"],\n      excerpt: \"Cras justo odio...\",\n    },\n    {\n      id: 3,\n      question: \"How many meters per second?\",\n      author: \"Derek\",\n      createdat: \"19:40 14/03/2021\",\n      tags: [\"physics\", \"kinematic\"],\n      excerpt: \"Cras justo odio...\",\n    },\n  ];\n\n  useEffect(() => {\n    API.getCourses().then((courses) => setCourses(courses));\n  }, []);\n\n  const [courses, setCourses] = useState([]);\n  const [myCourses, setMyCourses] = useState([]);\n  const [suggestions, setSuggestions] = useState(fakeQuestions /*[]*/);\n  const suggestionType = [\"Latest\", \"Hottest\"];\n  const coursesType = [\"My Courses\", \"All Courses\"];\n\n  /**Courses and questions related**/\n  /*\n\t// courses\n\tuseEffect(()=> {\n\t\tAPI.getCourses()\n\t\t\t.then(courses => setCourses(courses))\n\t\t\t.catch(err => console.log(err));\n\t}, []);\n\n\t// myCourses\n\tuseEffect(() => {\n\t\tAPI.getMyCourses()\n\t\t\t.then(myCourses => setMyCourses(myCourses))\n\t\t\t.catch(err => console.log(err));\n\t}, []);\n\t*/\n\n  // useEffect(() => {\n  //     const getCourses = async () => {\n  //         const courses = await API.getAllCourses();\n  //         setCourses(courses);\n  //     }\n  //     getCourses();\n  // },[]);\n\n  return (\n    <Container>\n      <Row lg={12} className=\"py-0 header\">\n        <h3 className=\"courses-title\">Courses</h3>\n      </Row>\n      <Row>\n        <SearchBar />\n      </Row>\n      <Row className=\"courses-body\">\n        <Link\n          className=\"list-attributes\"\n          to={{\n            pathname:\n              \"/listfullpage/\" + \"My Courses\".replace(/\\s/g, \"\").toLowerCase(),\n          }}\n          state={{ scope: \"courses\", title: \"My Courses\", rows: courses }}\n        >\n          <List scope=\"courses\" title={\"My Courses\"} rows={courses} rounded />\n        </Link>\n        <Link\n          className=\"list-attributes\"\n          to={{\n            pathname:\n              \"/listfullpage/\" + \"All Courses\".replace(/\\s/g, \"\").toLowerCase(),\n          }}\n          state={{ scope: \"courses\", title: \"All Courses\", rows: courses }}\n        >\n          <List scope=\"courses\" title={\"All Courses\"} rows={courses} rounded />\n        </Link>\n      </Row>\n    </Container>\n  );\n}\n\nexport default CoursesList;\n","import parse from \"html-react-parser\";\nimport { Button, Container, Row, Col, Card, Form } from \"react-bootstrap\";\nimport \"./Exam.css\";\n\nconst MultipleChoice = ({ index, questiontext, answer, ...rest }) => {\n  console.log({ answer });\n  return (\n    <Form className=\"multipleChoice\">\n      <Form.Label>\n        {index})\n        {questiontext\n          ? questiontext[\"@format\"] === \"html\"\n            ? parse(questiontext.text)\n            : `${index}) ${questiontext.text}`\n          : null}\n      </Form.Label>\n      {answer &&\n        answer.map(\n          (ans, index) =>\n            ans && (\n              <div key={`inline-${ans}`} className=\"mb-3\">\n                <Form.Check\n                  inline\n                  label={ans[\"@format\"] === \"html\" ? parse(ans.text) : ans.text}\n                  name=\"group1\"\n                  type=\"checkbox\"\n                  id={`inline-${index}-1`}\n                />\n              </div>\n            )\n        )}\n    </Form>\n  );\n};\n\nconst Exam = ({ question }) => {\n  return (\n    <Container className=\"container\">\n      <Card body>\n        <Row lg={12} className=\"header\">\n          <Col>\n            <h3>Exam</h3>\n          </Col>\n        </Row>\n        {/* {question.map(\n\t\t\t\t\t(item, index) =>\n\t\t\t\t\t\t(item[\"@type\"] = \"multichoice\" && (\n\t\t\t\t\t\t\t<Row className='mt-10'>\n\t\t\t\t\t\t\t\t<Col lg='12'>\n\t\t\t\t\t\t\t\t\t<MultipleChoice {...{ index, ...item }} />\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t))\n\t\t\t\t)} */}\n      </Card>\n    </Container>\n  );\n};\n\nexport default Exam;\n","import { Row, Col, Card } from \"react-bootstrap\";\nimport { useState } from \"react\";\nimport \"./stylesheet/Home.css\";\nimport { ListGroup, SearchBar } from \"../base/\";\n\nfunction Home() {\n  const fake = [\n    {\n      scope: \"default\",\n      title: \"New questions in courses enrolled\",\n      rows: [\n        [\"Cras justo odio\"],\n        [\"Dapibus ac facilisis in\"],\n        [\"Morbi leo risus\"],\n        [\"Porta ac consectetur ac\"],\n        [\"Vestibulum at eros\"],\n      ],\n    },\n    {\n      scope: \"default\",\n      title: \"Replies\",\n      rows: [\n        [\"Cras justo odio\"],\n        [\"Dapibus ac facilisis in\"],\n        [\"Morbi leo risus\"],\n        [\"Porta ac consectetur ac\"],\n        [\"Vestibulum at eros\"],\n      ],\n    },\n    {\n      scope: \"default\",\n      title: \"My questions\",\n      rows: [\n        [\"Cras justo odio\"],\n        [\"Dapibus ac facilisis in\"],\n        [\"Morbi leo risus\"],\n        [\"Porta ac consectetur ac\"],\n        [\"Vestibulum at eros\"],\n      ],\n    },\n    {\n      scope: \"default\",\n      title: \"My answers\",\n      rows: [\n        [\"Cras justo odio\"],\n        [\"Dapibus ac facilisis in\"],\n        [\"Morbi leo risus\"],\n        [\"Porta ac consectetur ac\"],\n        [\"Vestibulum at eros\"],\n      ],\n    },\n  ];\n\n  const [tests, setTests] = useState(fake);\n\n  return (\n    <>\n      <Row lg={12} className=\"py-0 header\">\n        <Col>\n          <h3>Hi, Name Surname!</h3>\n        </Col>\n      </Row>\n      <div className=\"home-page-table\">\n        <ListGroup lists={tests} cols={2} tiled rounded dotted />\n      </div>\n    </>\n  );\n}\n\nexport default Home;\n","import { useState } from \"react\";\nimport { Modal, Form, Button, Alert } from \"react-bootstrap\";\n\nfunction LoginForm(props) {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  function checkPassword(password) {\n    if (password.length >= 6) return true;\n    return false;\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    setErrorMessage(\"\");\n    const credentials = { username, password };\n    let valid = true;\n    if (username === \"\" || !checkPassword(password)) valid = false;\n    if (valid) {\n      props.login(credentials);\n    } else {\n      setErrorMessage(\"Errors in the form\");\n    }\n  };\n\n  return (\n    <Modal.Dialog>\n      <Modal.Header>\n        <Modal.Title>Login</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        {errorMessage ? <Alert variant=\"danger\">{errorMessage}</Alert> : null}\n        <Form.Group controlId=\"username\">\n          <Form.Label>Email</Form.Label>\n          <Form.Control\n            type=\"email\"\n            value={username}\n            onChange={(ev) => setUsername(ev.target.value)}\n          />\n        </Form.Group>\n        <Form.Group controlId=\"password\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            value={password}\n            onChange={(ev) => setPassword(ev.target.value)}\n          />\n        </Form.Group>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button onClick={handleSubmit}>Login</Button>\n      </Modal.Footer>\n    </Modal.Dialog>\n  );\n}\n\nexport default LoginForm;\n","import { Row, Col, Card, Image } from \"react-bootstrap\";\nimport { useState } from \"react\";\n// import \"./Profile.css\";\nimport \"./stylesheet/Profile.css\"; // scss file access\nimport { ListGroup, SearchBar } from \"../base/\";\n\nfunction Profile() {\n  const fake = [\n    {\n      scope: \"default\",\n      title: \"My questions\",\n      rows: [\n        [\"Cras justo odio\"],\n        [\"Dapibus ac facilisis in\"],\n        [\"Morbi leo risus\"],\n        [\"Porta ac consectetur ac\"],\n        [\"Vestibulum at eros\"],\n      ],\n    },\n    {\n      scope: \"default\",\n      title: \"My answers\",\n      rows: [\n        [\"Cras justo odio\"],\n        [\"Dapibus ac facilisis in\"],\n        [\"Morbi leo risus\"],\n        [\"Porta ac consectetur ac\"],\n        [\"Vestibulum at eros\"],\n      ],\n    },\n    {\n      scope: \"default\",\n      title: \"My simulation results\",\n      rows: [\n        [\"aaa\", \"bbb\", \"ccc\"],\n        [\"aaa\", \"bbb\", \"ccc\"],\n        [\"aaa\", \"bbb\", \"ccc\"],\n      ],\n    },\n  ];\n\n  const [tests, setTests] = useState(fake);\n\n  return (\n    <Card body>\n      <Row lg={12} className=\"py-0 header\">\n        <Col xs={2}>\n          <Image\n            src={process.env.PUBLIC_URL + \"/icons/PERSON.svg\"}\n            className=\"user-profile-image\"\n          />\n        </Col>\n        <Col className=\"user-name-nickname\">\n          <h3 className=\"user-name-surname\">Name Surname</h3>\n          <h4 className=\"user-nickname\">@nickname</h4>\n        </Col>\n      </Row>\n      <div className=\"user-profile\">\n        <ListGroup lists={tests} cols={2} rounded dotted />\n      </div>\n    </Card>\n  );\n}\n\nexport default Profile;\n","import {\n  Button,\n  Container,\n  Row,\n  Col,\n  Card,\n  Image,\n  Stack,\n} from \"react-bootstrap\";\n\nimport { useEffect, useState } from \"react\";\n// import \"./Questions.css\";\nimport \"./stylesheet/Questions.css\";\nimport { List, MyPagination, Recent, SearchBar, Suggestion } from \"../base/\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport API from \"../api/API\";\n\nconst Questions = () => {\n\n\n  const fakeQuestions = [\n    {\n      id: 1,\n      question: \"What is a vector?\",\n      author: \"Donato\",\n      createdat: \"15:20 12/01/2021\",\n      tags: [\"vectors\"],\n      excerpt: \"Cras justo odio...\",\n    },\n    {\n      id: 2,\n      question: \"Who is Maxwell?\",\n      author: \"Jim\",\n      createdat: \"17:30 13/02/2021\",\n      tags: [\"physics\"],\n      excerpt: \"Cras justo odio...\",\n    },\n    {\n      id: 3,\n      question: \"How many meters per second?\",\n      author: \"Derek\",\n      createdat: \"19:40 14/03/2021\",\n      tags: [\"physics\", \"kinematic\"],\n      excerpt: \"Cras justo odio...\",\n    },\n  ];\n\n  // useEffect(()=> {\n  //       setAllQuestions(API.getAllQuestions)\n  // }, [])\n\n  useEffect(()=> {\n    API.getQuestions(locationState.courseId)\n        .then((questions) => setQuestions(questions))\n  }, [])\n\n  const [allQuestions, setAllQuestions] = useState([]);\n  const [questions, setQuestions] = useState(fakeQuestions);\n  const [suggestions, setSuggestions] = useState(fakeQuestions /*[]*/);\n  const suggestionType = [\"Latest\", \"Hottest\"];\n\n  console.log(allQuestions)\n\n  // hook for responsive react\n  const useMediaQuery = (query) => {\n    const [matches, setMatches] = useState(false);\n\n    useEffect(() => {\n      const media = window.matchMedia(query);\n      if (media.matches !== matches) {\n        setMatches(media.matches);\n      }\n      const listener = () => {\n        setMatches(media.matches);\n      };\n      window.addEventListener(\"resize\", listener);\n      return () => window.removeEventListener(\"resize\", listener);\n    }, [matches, query]);\n\n    return matches;\n  };\n\n  // TODO: also take a look at Bootstrap class infixes to detect the current breakpoint\n  // to see which approach is better -- https://getbootstrap.com/docs/5.1/layout/breakpoints/\n  const isDesktop = useMediaQuery(\"(min-width: 960px)\");\n\n  const locationState = useLocation().state;\n\n  console.log(questions)\n\n  return (\n    <>\n      <Container>\n        <Stack gap={4}>\n          {isDesktop ? (\n            <Row key={isDesktop}>\n              <Col>\n                <Container className=\"container\">\n                  <Row lg={12} className=\"header\">\n                    <Col>\n                      <div className=\"right-button\">\n                        <Button\n                          className=\"add-question-button\"\n                          onClick={() => {}}\n                        >\n                          {/*<Image*/}\n                          {/*    className=\"add-icon\"*/}\n                          {/*    src={*/}\n                          {/*      process.env.PUBLIC_URL + \"/icons/ADD_WHITE.svg\"*/}\n                          {/*    }*/}\n                          {/*    width=\"13px\"*/}\n                          {/*/>*/}\n                          {\" Enroll in course\"}\n                        </Button>\n\n                        <Link\n                          to={{\n                            pathname:\n                              \"/startsimulation/\" + locationState.courseId,\n                          }}\n                          state={{\n                            courseId: locationState.courseId,\n                            title: locationState.title,\n                          }}\n                        >\n                          <Button className=\"start-simulation-button\">\n                            {/*<Image*/}\n                            {/*    className=\"add-icon\"*/}\n                            {/*    src={*/}\n                            {/*      process.env.PUBLIC_URL +*/}\n                            {/*      \"/icons/SIMULATION RESULTS_WHITE.svg\"*/}\n                            {/*    }*/}\n                            {/*    width=\"13px\"*/}\n                            {/*/>*/}\n                            {\" Start Simulation\"}\n                          </Button>\n                        </Link>\n                      </div>\n                      <List\n                        scope=\"questions\"\n                        title={locationState.title}\n                        rows={questions}\n                      />\n                      <MyPagination />\n                    </Col>\n                    <Col className=\"d-sm-inline-block col-md-4\">\n                      <Stack gap={4}>\n                        {suggestionType.map((type, i) => {\n                          return (\n                            <Row key={i}>\n                              <Suggestion\n                                scope={\"suggestion\"}\n                                title={type + \" Questions\"}\n                                rows={suggestions}\n                              />\n                            </Row>\n                          );\n                        })}\n                      </Stack>\n                    </Col>\n                  </Row>\n                </Container>\n              </Col>\n            </Row>\n          ) : (\n            // mobile configuration\n            <>\n              <Row>\n                <Container className=\"container\">\n                  <Row lg={12} className=\"header\">\n                    <Col>\n                      <div className=\"right-button\">\n                        <Button\n                          className=\"add-question-button\"\n                          onClick={() => {}}\n                        >\n                          {/*<Image*/}\n                          {/*    className=\"add-icon\"*/}\n                          {/*    src={*/}\n                          {/*      process.env.PUBLIC_URL + \"/icons/ADD_WHITE.svg\"*/}\n                          {/*    }*/}\n                          {/*    width=\"13px\"*/}\n                          {/*/>*/}\n                          {\" Enroll in course\"}\n                        </Button>\n\n                        <Link\n                          to={{\n                            pathname:\n                              \"/startsimulation/\" + locationState.courseId,\n                          }}\n                          state={{\n                            courseId: locationState.courseId,\n                            title: locationState.title,\n                          }}\n                        >\n                          <Button className=\"start-simulation-button\">\n                            {/*<Image*/}\n                            {/*    className=\"add-icon\"*/}\n                            {/*    src={*/}\n                            {/*      process.env.PUBLIC_URL +*/}\n                            {/*      \"/icons/SIMULATION RESULTS_WHITE.svg\"*/}\n                            {/*    }*/}\n                            {/*    width=\"13px\"*/}\n                            {/*/>*/}\n                            {\" Start Simulation\"}\n                          </Button>\n                        </Link>\n                      </div>\n                      <List\n                        scope=\"questions\"\n                        title={locationState.title}\n                        rows={questions}\n                      />\n                    </Col>\n\n                    <Col className=\"pagination\" lg=\"12\" sm=\"12\" md=\"12\">\n                      <MyPagination />\n                    </Col>\n                  </Row>\n                </Container>\n              </Row>\n              <Row>\n                <Stack gap={4}>\n                  {suggestionType.map((type, i) => {\n                    return (\n                      <Col key={i}>\n                        <Suggestion\n                          scope={\"suggestion\"}\n                          title={type + \" Questions\"}\n                          rows={suggestions}\n                        />\n                      </Col>\n                    );\n                  })}\n                </Stack>\n              </Row>\n            </>\n          )}\n        </Stack>\n      </Container>\n    </>\n  );\n};\n\nexport default Questions;\n","import { Row, Col, Card, Button } from \"react-bootstrap\";\nimport { useEffect, useState } from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { List, ListEntry, Recent, SearchBar, TextInput } from \"../base\";\nimport \"./stylesheet/Replies.css\";\n\nfunction Answer(props) {\n  return (\n    <div className=\"questionEntry-discussion-answer\">\n      <Row>\n        <Col>\n          <h4>{props.ans.answer}</h4>\n        </Col>\n        <Col className=\"question-created-time\">\n          Created at: {props.ans.createdat}\n        </Col>\n      </Row>\n      <Row>\n        <Col className=\"question-author\">from {props.ans.author}</Col>\n      </Row>\n    </div>\n  );\n}\n\nfunction Replies() {\n  const answer = {\n    answer: \"Lorem ipsum dolor sit amet\",\n    author: \"Jim\",\n    createdat: \"10/10/1010\",\n  };\n  const fakeReplies = [\n    {\n      id: 1,\n      reply: \"I think it's correct\",\n      author: \"Donato\",\n      createdat: \"15:20 12/01/2021\",\n    },\n    {\n      id: 2,\n      reply: \"Maybe is wrong\",\n      author: \"Jim\",\n      createdat: \"17:30 13/02/2021\",\n    },\n    {\n      id: 3,\n      reply: \"idk\",\n      author: \"Derek\",\n      createdat: \"19:40 14/03/2021\",\n    },\n  ];\n\n  const [replies, setReplies] = useState(fakeReplies);\n\n  return (\n    <div className=\"discussion\">\n      <Answer ans={answer} />\n      <List scope=\"replies\" rows={replies} />\n      <TextInput />\n      <Button className=\"reply-button my-2\">Reply</Button>\n    </div>\n  );\n}\n\nexport default Replies;\n","import { Row, Col, Card, Image, Form, Button } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport \"./UserSettings.css\";\nimport { List } from \"../base/\";\n\nfunction UserSettings() {\n  const fake = [\n    [<Form.Check />, \"Analisys I\"],\n    [<Form.Check />, \"Physics I\"],\n    [<Form.Check />, \"Geometry\"],\n  ];\n  const [courses, setCourses] = useState(fake);\n\n  return (\n    <Card body>\n      <Row lg={12} className=\"py-0 header\">\n        <Col xs={2}>\n          <Image src={process.env.PUBLIC_URL + \"/icons/PERSON.svg\"} />\n        </Col>\n        <Col>\n          <h3>Name Surname</h3>\n          <h4>@Nickname</h4>\n          <Form.Control placeholder=\"Change nickname\" />\n          <Form.Check label=\"Public profile\" />\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <List rows={courses} title={\"Enrolled in\"} scope={\"default\"} />\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Link to=\"/courses\">\n            <Button>Add new course</Button>\n          </Link>\n          <Button className=\"saveButton\">Save</Button>\n        </Col>\n      </Row>\n    </Card>\n  );\n}\n\nexport default UserSettings;\n","import { List, MyPagination } from \"../base\";\nimport { Card, Container } from \"react-bootstrap\";\nimport { useLocation } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport \"./stylesheet/ListFullPage.css\";\n\nexport default function ListFullPage() {\n  const location = useLocation();\n  return (\n    <>\n      <Container>\n        <div className=\"list-full-page\">\n          <List\n            scope={location.state.scope}\n            title={location.state.title}\n            rows={location.state.rows}\n            rounded\n            tiled\n            dotted\n          />\n          {location.state.title === \"My courses\" ? <></> : <MyPagination />}\n        </div>\n      </Container>\n    </>\n  );\n}\n","import { Card, Container } from \"react-bootstrap\";\nimport { List, MyPagination, SearchBar } from \"../base\";\nimport { useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function Bookmarks() {\n  const location = useLocation();\n  return (\n    <>\n      <Container>\n        <Card body>\n          <h2>{location.state.title}</h2>\n          <List\n            scope={location.state.scope}\n            title={\"\"}\n            rows={location.state.rows}\n          />\n          <MyPagination />\n        </Card>\n      </Container>\n    </>\n  );\n}\n","import {\n  Card,\n  Container,\n  Form,\n  Row,\n  Col,\n  Button,\n  Stack,\n  FloatingLabel,\n  InputGroup,\n  FormControl,\n  Alert,\n} from \"react-bootstrap\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\n// import \"./StartSimulation.css\";\nimport \"./stylesheet/StartSimulation.css\";\n\nexport default function StartSimulation() {\n  const simulationTypes = [\"Random\", \"Exam\"];\n\n  const [isMulti, setIsMulti] = useState(false);\n\n  const [numQuestions, setNumQuestions] = useState(10);\n  const [penaltyScore, setPenaltyScore] = useState(-0.5);\n  const [maxScore, setMaxScore] = useState(30);\n  const [duration, setDuration] = useState(60); /* unit: minute */\n  const [userInput, setUserInput] = useState(1);\n  const totNumOfQuestion = undefined;\n  const [maxNumOfQuestion, setMaxNumOfQuestion] = useState(\n    totNumOfQuestion ? totNumOfQuestion : 100\n  );\n\n  const locationState = useLocation().state;\n\n  return (\n    <>\n      <Container>\n        <Card className=\"simulation-card\">\n          <Card.Body>\n            <Stack gap={4}>\n              <h3>Simulation Set Up</h3>\n              <Col>\n                <Stack gap={2}>\n                  <Row>\n                    <div key=\"checkbox-ratio\" className=\"mb-3\">\n                      <Form.Switch\n                        className=\"multiquiz-toggle\"\n                        type=\"switch\"\n                        label=\"Multiple Choice Questions Only (With Grade)\"\n                        onChange={() => setIsMulti(!isMulti)}\n                      />\n                    </div>\n                  </Row>\n                  {userInput || userInput === 0 ? (\n                    maxNumOfQuestion > 100 ? (\n                      <Alert variant=\"danger\">\n                        Maximum Number of question: {maxNumOfQuestion}\n                      </Alert>\n                    ) : numQuestions <= 0 || maxScore <= 0 || duration <= 0 ? (\n                      <Alert variant=\"danger\">\n                        Number of Question, Maximum Score, and Duration Must Not\n                        Be Zero\n                      </Alert>\n                    ) : (\n                      <></>\n                    )\n                  ) : (\n                    <Alert variant=\"danger\">\n                      Only Number Inputs Are Allowed\n                    </Alert>\n                  )}\n                  <Stack gap={4}>\n                    {isMulti ? (\n                      <Row key={isMulti}>\n                        <Stack gap={2}>\n                          <h6>\n                            ( Number of Question, Maximum Score, and Duration\n                            Must Not Be Zero )\n                          </h6>\n                          <InputGroup key={isMulti}>\n                            <InputGroup.Text>\n                              Number of Questions\n                            </InputGroup.Text>\n                            <FormControl\n                              aria-label={numQuestions}\n                              placeholder={numQuestions}\n                              onChange={(e) => {\n                                setUserInput(Number(e.target.value));\n                                setNumQuestions(Number(e.target.value));\n                              }}\n                            />\n                          </InputGroup>\n                          <InputGroup>\n                            <InputGroup.Text>Penalty </InputGroup.Text>\n                            <FormControl\n                              aria-label={penaltyScore}\n                              placeholder={penaltyScore}\n                              onChange={(e) => {\n                                setUserInput(Number(e.target.value));\n                                setPenaltyScore(Number(e.target.value));\n                              }}\n                            />\n                          </InputGroup>\n                          <InputGroup>\n                            <InputGroup.Text>Maximum Score</InputGroup.Text>\n                            <FormControl\n                              aria-label={maxScore}\n                              placeholder={maxScore}\n                              onChange={(e) => {\n                                setUserInput(Number(e.target.value));\n                                setMaxScore(Number(e.target.value));\n                              }}\n                            />\n                          </InputGroup>\n                          <InputGroup>\n                            <InputGroup.Text>\n                              Duration (Minutes)\n                            </InputGroup.Text>\n                            <FormControl\n                              aria-label={duration}\n                              placeholder={duration}\n                              onChange={(e) => {\n                                setUserInput(Number(e.target.value));\n                                setDuration(Number(e.target.value));\n                              }}\n                            />\n                          </InputGroup>\n                        </Stack>\n                      </Row>\n                    ) : (\n                      <></>\n                    )}\n                    <Row className=\"bottom-group\">\n                      {numQuestions &&\n                      maxScore &&\n                      !isNaN(penaltyScore) &&\n                      duration &&\n                      numQuestions <= maxNumOfQuestion ? (\n                        simulationTypes.map((type, i) => {\n                          return (\n                            <Col key={i}>\n                              <Link\n                                key={i}\n                                to={{\n                                  pathname:\n                                    \"/simulation/\" + locationState.courseId,\n                                }}\n                                state={{\n                                  type: type,\n                                  title: locationState.title,\n                                  courseId: locationState.courseId,\n                                  num: numQuestions,\n                                  penalty: penaltyScore,\n                                  max: maxScore,\n                                  isMulti: isMulti,\n                                  duration: duration,\n                                }}\n                              >\n                                <Button\n                                  key={i}\n                                  className=\"start-simulation-button\"\n                                  variant=\"outline-success\"\n                                >\n                                  {type + \" Question\"}\n                                </Button>\n                              </Link>\n                            </Col>\n                          );\n                        })\n                      ) : (\n                        <Alert variant=\"danger\">Invalid Inputs</Alert>\n                      )}\n                    </Row>\n                  </Stack>\n                </Stack>\n              </Col>\n            </Stack>\n          </Card.Body>\n        </Card>\n      </Container>\n    </>\n  );\n}\n","import { Link, useLocation } from \"react-router-dom\";\nimport { useCallback, useEffect, useState, Component, useRef } from \"react\";\nimport {\n  Card,\n  Row,\n  Col,\n  Pagination,\n  Container,\n  Button,\n  Form,\n  Stack,\n  Modal,\n} from \"react-bootstrap\";\n// import \"./Simulation.css\";\nimport \"./stylesheet/Simulation.css\"; // scss file access\nimport { List, ListEntry, TextInput } from \"../base\";\n\nconst Duration = (props) => {\n  const [timeIn, setTimeIn] = useState({\n    h: Math.floor(parseInt(props.duration) / 60),\n    m: parseInt(props.duration) % 60,\n    s: 0,\n  });\n\n  useEffect(() => {\n    const myInterval = setInterval(() => {\n      setTimeIn((time) => {\n        const updateTime = { ...time };\n        if (time.s > 0) {\n          updateTime.s--;\n        }\n        if (time.s === 0) {\n          if (time.h === 0 && time.m === 0) {\n            clearInterval(myInterval);\n          } else if (time.m > 0) {\n            updateTime.m--;\n            updateTime.s = 59;\n          } else if (time.h > 0) {\n            updateTime.h--;\n            updateTime.m = 59;\n            updateTime.s = 59;\n          }\n        }\n        return updateTime;\n      });\n    }, 1000);\n    return () => clearInterval(myInterval);\n  }, [timeIn]);\n\n  return (\n    <>\n      <h3 className=\"simulation-duration\">\n        {timeIn.h.toString().padStart(2, \"0\")}:\n        {timeIn.m.toString().padStart(2, \"0\")}:\n        {timeIn.s.toString().padStart(2, \"0\")}\n      </h3>\n    </>\n  );\n};\n\nconst FinishModal = (props) => {\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  const timeIn =\n    Math.floor(parseInt(props.duration) / 60)\n      .toString()\n      .padStart(2, \"0\") +\n    \":\" +\n    (parseInt(props.duration) % 60).toString().padStart(2, \"0\") +\n    \":\" +\n    (0).toString().padStart(2, \"0\");\n\n  const [timeRecord, setTimeRecord] = useState({\n    h: Math.floor(parseInt(props.duration) / 60),\n    m: parseInt(props.duration) % 60,\n    s: 0,\n  });\n\n  useEffect(() => {\n    const myInterval = setInterval(() => {\n      setTimeRecord((time) => {\n        const updateTime = { ...time };\n        if (time.s > 0) {\n          updateTime.s--;\n        }\n        if (time.s === 0) {\n          if (time.h === 0 && time.m === 0) {\n            clearInterval(myInterval);\n          } else if (time.m > 0) {\n            updateTime.m--;\n            updateTime.s = 59;\n          } else if (time.h > 0) {\n            updateTime.h--;\n            updateTime.m = 59;\n            updateTime.s = 59;\n          }\n        }\n        return updateTime;\n      });\n    }, 1000);\n    return () => clearInterval(myInterval);\n  }, [timeRecord]);\n\n  return timeRecord.h === 0 && timeRecord.m === 0 && timeRecord.s === 0 ? (\n    <Modal show={true} className=\"simulation-modal\">\n      <Modal.Header>\n        <Modal.Title>Time Is Up!</Modal.Title>\n      </Modal.Header>\n      <Modal.Footer>\n        <Link\n          className=\"outline-secondary\"\n          to={{\n            pathname: \"/simulationresult/\" + props.locationState.courseId,\n          }}\n          state={{\n            courseId: props.locationState.courseId,\n            title: props.locationState.title,\n            num: props.locationState.num,\n            penalty: props.locationState.penalty,\n            max: props.locationState.max,\n            isMulti: props.locationState.isMulti,\n            pointPerCorrectAns:\n              props.locationState.max / props.locationState.num,\n            duration: timeIn,\n            timeElapsed: `${timeRecord.h\n              .toString()\n              .padStart(2, \"0\")}:${timeRecord.m\n              .toString()\n              .padStart(2, \"0\")}:${timeRecord.s.toString().padStart(2, \"0\")}`,\n          }}\n        >\n          <Button className=\"btn-outline-success\" variant=\"outline-success\">\n            See Result\n          </Button>\n        </Link>\n      </Modal.Footer>\n    </Modal>\n  ) : (\n    <>\n      <Button\n        className=\"btn-outline-success\"\n        variant=\"outline-success\"\n        onClick={handleShow}\n      >\n        Finish\n      </Button>\n      <Modal show={show} onHide={handleClose} className=\"simulation-modal\">\n        <Modal.Header closeButton>\n          <Modal.Title>Submit Before the Time Limit?</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>Confirm your submission to see the result.</Modal.Body>\n        <Modal.Footer>\n          <Link\n            className=\"outline-secondary\"\n            to={{\n              pathname: \"/simulationresult/\" + props.locationState.courseId,\n            }}\n            state={{\n              courseId: props.locationState.courseId,\n              title: props.locationState.title,\n              num: props.locationState.num,\n              penalty: props.locationState.penalty,\n              max: props.locationState.max,\n              isMulti: props.locationState.isMulti,\n              pointPerCorrectAns:\n                props.locationState.max / props.locationState.num,\n              duration: timeIn,\n              timeElapsed: `${timeRecord.h\n                .toString()\n                .padStart(2, \"0\")}:${timeRecord.m\n                .toString()\n                .padStart(2, \"0\")}:${timeRecord.s.toString().padStart(2, \"0\")}`,\n            }}\n          >\n            <Button className=\"btn-outline-success\" variant=\"outline-success\">\n              Confirm\n            </Button>\n          </Link>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n};\n\nexport default function Simulation(props) {\n  const locationState = useLocation().state;\n\n  const simulationRandomQuizType = [\"open\", \"close\"];\n  const [pageNum, setPageNum] = useState(1);\n  const randomizer =\n    simulationRandomQuizType[\n      Math.floor(Math.random() * simulationRandomQuizType.length)\n    ];\n  const [quizType, setQuizType] = useState(randomizer);\n\n  const PaginationRow = (props) => {\n    let items = [];\n    for (let num = 1; num <= props.numPage; num++) {\n      items.push(\n        <Pagination.Item\n          key={num}\n          active={num === pageNum}\n          onClick={() => {\n            setPageNum(num);\n          }}\n        >\n          {num}\n        </Pagination.Item>\n      );\n    }\n\n    return (\n      <Pagination>\n        <Pagination.Prev />\n        {items}\n        <Pagination.Next />\n      </Pagination>\n    );\n  };\n\n  // mock question type\n  useEffect(() => {\n    locationState.isMulti ? setQuizType(\"close\") : setQuizType(randomizer);\n  }, [pageNum]);\n\n  return (\n    <Container className=\"simulation-container\">\n      <h3 className=\"simulation-title\">\n        {locationState.type + \" Questions of \" + locationState.title}\n      </h3>\n      <Duration duration={locationState.duration} />\n      <Row className=\"pagination-finish\">\n        <Col>\n          <PaginationRow numPage={locationState.num} />\n        </Col>\n        <Col>\n          <FinishModal\n            locationState={locationState}\n            duration={locationState.duration}\n          />\n        </Col>\n      </Row>\n      <div className=\"simulation-question\">\n        <Stack gap={3}>\n          <Card className=\"simulation-question-text-card\">\n            <h3 className=\"simulation-question-title-number\">\n              {\"Question \" + pageNum}\n            </h3>\n            <Card.Text>\n              \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n              eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut\n              enim ad minim veniam, quis nostrud exercitation ullamco laboris\n              nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in\n              reprehenderit in voluptate velit esse cillum dolore eu fugiat\n              nulla pariatur. Excepteur sint occaecat cupidatat non proident,\n              sunt in culpa qui officia deserunt mollit anim id est laborum.\"\n            </Card.Text>\n          </Card>\n          <Card.Body className=\"simulation-question-answer\">\n            {quizType === \"open\" ? (\n              <TextInput />\n            ) : (\n              <Card className=\"simulation-question-answer-ratio-card\">\n                <Stack gap={1}>\n                  {[\"A\", \"B\", \"C\", \"D\"].map((e, i) => {\n                    return (\n                      <Form.Check\n                        key={i}\n                        type=\"checkbox\"\n                        label={e}\n                        className=\"simulation-answer-checkbox\"\n                      />\n                    );\n                  })}\n                </Stack>\n              </Card>\n            )}\n          </Card.Body>\n        </Stack>\n      </div>\n    </Container>\n  );\n}\n","import { Link, useLocation } from \"react-router-dom\";\nimport {\n  Card,\n  Container,\n  Table,\n  Stack,\n  Button,\n  Image,\n  Row,\n  Col,\n} from \"react-bootstrap\";\nimport \"./stylesheet/SimulationResult.css\"; // scss file access\n//import \"./SimulationResult.css\";\nimport { useState } from \"react\";\nimport { List } from \"../base\";\n\nconst timeUsedStr = (left, tot) => {\n  let h, m, s;\n  if (left.length !== tot.length) {\n    return \"\";\n  }\n  for (let i = 0; i < left.length; i++) {\n    if (i === 0) {\n      h = tot[0] - left[0];\n    }\n    if (i === 1) {\n      m = tot[1] - left[1];\n      if (m < 0) {\n        h -= 1;\n        m = m + 60;\n      }\n    }\n    if (i === 2) {\n      s = tot[2] - left[2];\n      if (s < 0) {\n        m -= 1;\n        s = s + 60;\n      }\n    }\n  }\n  return (\n    h.toString().padStart(2, \"0\") +\n    \":\" +\n    m.toString().padStart(2, \"0\") +\n    \":\" +\n    s.toString().padStart(2, \"0\")\n  );\n};\n\nexport default function SimulationResult() {\n  const locationState = useLocation().state;\n\n  const [numCorrect, setNumCorrect] = useState(locationState.num);\n  const [numPenalty, setNumPenalty] = useState(0);\n\n  const numNotGiven = locationState.num - numCorrect - numPenalty;\n  const numQuiz = locationState.num;\n  const maxScore = locationState.max;\n  const pointPerWrong = locationState.penalty;\n  const pointPerCorrect = locationState.pointPerCorrectAns;\n\n  const mockCorrectAns = [];\n  for (let i = 0; i < numQuiz; i++) {\n    mockCorrectAns.push({\n      id: locationState.courseId,\n      quizNum: i + 1,\n      ans: \"C\",\n      score: pointPerCorrect,\n      penalty: pointPerWrong,\n      isCorrect: false,\n    });\n  }\n\n  const mockUserAns = [];\n  for (let i = 0; i < numQuiz; i++) {\n    const randomAns = [\"A\", \"B\", \"C\", \"D\"];\n    const random = Math.floor(Math.random() * randomAns.length);\n    mockUserAns.push({\n      id: locationState.courseId,\n      quizNum: i + 1,\n      ans: randomAns[random],\n      score: pointPerCorrect,\n      penalty: pointPerWrong,\n      isCorrect: false,\n    });\n    mockUserAns[i].isCorrect = mockUserAns[i].ans === mockCorrectAns[i].ans;\n  }\n\n  const examDuration = locationState.duration.split(\":\").map((n) => {\n    return Number(n);\n  });\n  const timeElapsed = locationState.timeElapsed.split(\":\").map((n) => {\n    return Number(n);\n  });\n\n  const [useAns, setUserAns] = useState(mockUserAns);\n  const [correctAns, setCorrectAns] = useState(mockCorrectAns);\n  const [timeUsed, setTimeUsed] = useState(\n    timeUsedStr(timeElapsed, examDuration)\n  );\n\n  return (\n    <>\n      <Container className=\"simulation-result-container\">\n        <Row className=\"simulation-result-title\">\n          <h2 className=\"simulation-result-title-text\">Simulation Result</h2>\n        </Row>\n        <Row className=\"col-sm-8\">\n          <Col className=\"simulation-title\">\n            <h3>{locationState.title}</h3>\n          </Col>\n          <Col>\n            <Link\n              className=\"simulation-result-start-button\"\n              to={{\n                pathname: \"/startsimulation/\" + locationState.courseId,\n              }}\n              state={{\n                courseId: locationState.courseId,\n                title: locationState.title,\n              }}\n            >\n              <Button className=\"start-button\">\n                <p>Start New Simulation</p>\n              </Button>\n            </Link>\n          </Col>\n        </Row>\n        {/*<h3>*/}\n        {/*  Time Used: {timeUsed} / {locationState.duration}{\" \"}*/}\n        {/*</h3>*/}\n        <Row>\n          <div className=\"simulation-result-score\">\n            <h2 className=\"simulation-result-user-score\">\n              {numCorrect * pointPerCorrect -\n                numPenalty * Math.abs(pointPerWrong)}\n            </h2>\n            <h2 className=\"simulation-result-max-score\">/{maxScore}</h2>\n          </div>\n        </Row>\n        {/*<Card className=\"result-table-card\">*/}\n        <Table\n          responsive=\"lg\"\n          striped\n          hover\n          className=\"simulation-result-table\"\n        >\n          <thead b>\n            <tr>\n              <th>Result</th>\n              <th>Number</th>\n              <th>Points Each</th>\n              <th>Total</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td>Correct Answer</td>\n              <td>{numCorrect}</td>\n              <td>{pointPerCorrect}</td>\n              <td>{numCorrect * pointPerCorrect}</td>\n            </tr>\n            <tr>\n              <td>Not Given</td>\n              <td>{numNotGiven}</td>\n              <td>0</td>\n              <td>{numNotGiven * 0}</td>\n            </tr>\n            <tr>\n              <td>Wrong Answer</td>\n              <td>{numPenalty}</td>\n              <td>{pointPerWrong}</td>\n              <td>{numPenalty * pointPerWrong}</td>\n            </tr>\n          </tbody>\n        </Table>\n        <List scope={\"simulationResult\"} rows={useAns} />\n      </Container>\n    </>\n  );\n}\n","import { useState } from \"react\";\nimport {\n  Container,\n  Card,\n  Row,\n  Col,\n  Button,\n  Image,\n  Stack,\n  ListGroup,\n  Accordion,\n  DropdownButton,\n  Dropdown,\n} from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport \"./SimulationAccess.css\";\n\nexport default function SimulationAccess() {\n  const fakeSimulationResult = [\n    {\n      id: \"A1234\",\n      course: \"Analysis I\",\n      score: 30,\n      date: \"20/05/21\",\n      maxScore: 30,\n    },\n    {\n      id: \"B5678\",\n      course: \"Physics I\",\n      score: 18,\n      date: \"01/11/21\",\n      maxScore: 30,\n    },\n    {\n      id: \"C1001\",\n      course: \"Geometry\",\n      score: 25,\n      date: \"20/04/22\",\n      maxScore: 30,\n    },\n  ];\n\n  const fakeCourses = [\n    {\n      code: \"A0B1C2\",\n      course: \"Analysis I\",\n      cfu: 10,\n      professor: \"Mario Rossi\",\n      enrolled: true,\n    },\n    {\n      code: \"D3E4F5\",\n      course: \"Physics I\",\n      cfu: 10,\n      professor: \"Stefano Bianchi\",\n      enrolled: true,\n    },\n    {\n      code: \"G6H7I8\",\n      course: \"Geometry\",\n      cfu: 10,\n      professor: \"Giuseppe Verdi\",\n      enrolled: true,\n    },\n  ];\n\n  const [coursesEnrolled, setCoursesEnrolled] = useState(fakeCourses);\n  const [simulationResult, setSimulationResult] =\n    useState(fakeSimulationResult);\n  const [courseSelected, setCourseSelected] = useState({});\n  const [courseSelectedTitle, setCourseSelectedTitle] = useState(\n    \"Select Course of Simulation\"\n  );\n  return (\n    <>\n      <Container className=\"\">\n        <h3>Simulation</h3>\n        <Card>\n          <Card.Body>\n            <Row className=\"col-xxl-12\">\n              <Col>\n                {courseSelected.course ? (\n                  <Link\n                    className=\"simulation-button\"\n                    to={{\n                      pathname: \"/startsimulation/\" + courseSelected.code,\n                    }}\n                    state={{\n                      courseId: courseSelected.code,\n                      title: courseSelected.course,\n                    }}\n                  >\n                    <Button>\n                      <Image\n                        className=\"add-icon\"\n                        src={\n                          process.env.PUBLIC_URL +\n                          \"/icons/SIMULATION RESULTS_WHITE.svg\"\n                        }\n                        width=\"13px\"\n                      />\n                      {\" Start Simulation\"}\n                    </Button>\n                  </Link>\n                ) : (\n                  <></>\n                )}\n                {/*<Link*/}\n                {/*    to={{ pathname: \"/startsimulation/\" + e.id }}*/}\n                {/*    state={{*/}\n                {/*        courseId: e.id,*/}\n                {/*        title: e.course,*/}\n                {/*    }}*/}\n                {/*>*/}\n                {/*    <Button className=\"right-button\">*/}\n                {/*        <Image*/}\n                {/*            className=\"add-icon\"*/}\n                {/*            src={process.env.PUBLIC_URL + \"/icons/SIMULATION RESULTS_WHITE.svg\"}*/}\n                {/*            width=\"13px\"*/}\n                {/*        />*/}\n                {/*        {\" Start Simulation\"}*/}\n                {/*    </Button>*/}\n                {/*</Link>*/}\n              </Col>\n              <Col>\n                <DropdownButton\n                  id=\"dropdown-basic-button\"\n                  title={courseSelectedTitle}\n                >\n                  {coursesEnrolled.map((e, i) => {\n                    if (e.enrolled) {\n                      return (\n                        <>\n                          <Dropdown.Item\n                            key={i}\n                            as=\"button\"\n                            onClick={() => {\n                              setCourseSelectedTitle(e.course);\n                              setCourseSelected(e);\n                            }}\n                          >\n                            {e.course}\n                          </Dropdown.Item>\n                        </>\n                      );\n                    }\n                  })}\n                </DropdownButton>\n              </Col>\n            </Row>\n            <Row>\n              <ListGroup className=\"simulation-access-result\">\n                <h6>Simulation Results</h6>\n                {simulationResult.map((e, i) => {\n                  return (\n                    <>\n                      <ListGroup.Item varient=\"flush\">\n                        {\n                          <Row key={i}>\n                            <Col>{e.course}</Col>\n                            <Col>{e.score}</Col>\n                            <Col>{e.date}</Col>\n                          </Row>\n                        }\n                      </ListGroup.Item>\n                    </>\n                  );\n                })}\n              </ListGroup>\n            </Row>\n          </Card.Body>\n        </Card>\n      </Container>\n    </>\n  );\n}\n","import {\n  Row,\n  Col,\n  Container,\n  Image,\n  Card,\n  Accordion,\n  Button,\n} from \"react-bootstrap\";\nimport {Link, useLocation} from \"react-router-dom\";\nimport MarkdownPreview from \"./MarkdownPreview\";\nimport remarkGfm from \"remark-gfm\";\nimport remarkMath from \"remark-math\";\nimport rehypeKatex from \"rehype-katex\";\nimport rehypeHighlight from \"rehype-highlight\";\n\n// import \"./ListEntry.css\";\nimport \"./stylesheet/ListEntry.css\";\nimport QuestionPreview from \"./QuestionPreview\";\nimport { useEffect, useState } from \"react\";\nimport { UserSettings } from \"../pages\";\n\nfunction ListEntryDefault(props) {\n  return (\n    <tr>\n      {props.row.map((cell, i) => (\n        <td key={i}>\n          {props.dotted && <span className=\"table-dot\">●</span>}\n          {cell}\n        </td>\n      ))}\n    </tr>\n  );\n}\n\nfunction ListEntryCourses(props) {\n  return (\n    <tr>\n      <td>{props.row[\"_id\"]}</td>\n      <td>\n        {/* ROUTE: /course/course:id COMPONENT: <Questions/> */}\n        <Link\n          to={\"/course/\" + props.row[\"_id\"]}\n          state={{ courseId: props.row[\"_id\"], title: props.row.name, query: props.row }}\n          className=\"course-entry\"\n        >\n          {props.row.name}\n        </Link>\n      </td>\n      <td>\n        {props.row.professors.map((prof) => {\n          return prof.name;\n        })}\n      </td>\n      {/*<td>{props.row.cfu}</td>*/}\n    </tr>\n  );\n}\n\nfunction ListEntryQuestions(props) {\n\n  const locationState = useLocation().state;\n\n\n  const timestamp = props.row.timestamp\n\n  return (\n    <div className=\"questionEntry\">\n      <Row>\n        <Col>\n          <Row>\n            {/* ROUTE: /question/question:id COMPONENT: <Answer/> */}\n            <Link to={\"/question/\" + props.row[\"_id\"]} className=\"question\"\n                  state={{\n                    questionId: props.row[\"_id\"],\n                      courseId: props.row.course\n                  }}\n           >\n              {props.row.title}\n            </Link>\n          </Row>\n          <Row>\n            <Col>\n              {props.row.tags.map((t, i) => (\n                <Link key={i} to=\"\" className=\"tags\">\n                  #{t}\n                </Link>\n              ))}\n            </Col>\n          </Row>\n        </Col>\n        <Col>\n          <Row className=\"created-at\">Created at:  {timestamp}</Row>\n          <Row className=\"created-from\">from  {props.row.owner}</Row>\n        </Col>\n      </Row>\n      <Row>\n        <Col>{props.row.excerpt}</Col>\n      </Row>\n    </div>\n  );\n}\n\nfunction ListEntryAnswers(props) {\n  return (\n    <div className=\"answerEntry\" key={props.row[\"_id\"]}>\n      <Row className=\"answerEntry-credential\">\n        <Col colSpan=\"2\">\n          <Row>\n            <Col>\n              {props.row.author}, {props.row.timestamp}\n            </Col>\n            <Col className=\"header-svg\">\n              <span className=\"reply-link mx-3\">\n                {/*{props.row.replies + \" \"}*/}\n                <Image\n                  src={process.env.PUBLIC_URL + \"/icons/DISCUSSION.svg\"}\n                  width=\"28px\"\n                />\n              </span>\n            </Col>\n          </Row>\n        </Col>\n      </Row>\n      <Row>\n        <MarkdownPreview rowspan=\"3\" markdown={props.row.content} />\n      </Row>\n\n      <Row>\n        <Col className=\"answerEntry-vote\">\n          <Link to=\"\">\n            <Image\n              className=\"up-vote\"\n              src={process.env.PUBLIC_URL + \"/icons/arrow_up.svg\"}\n              width=\"18px\"\n              onClick={() => {}}\n            />\n          </Link>\n\n          <div className=\"vote-number\">\n            {props.row[\"upvoted_by\"] - props.row[\"downvoted_by\"] > 0 && \"+\"}\n            {props.row[\"upvoted_by\"] - props.row[\"downvoted_by\"]}\n          </div>\n          <Link to=\"\">\n            <Image\n              className=\"down-vote\"\n              src={process.env.PUBLIC_URL + \"/icons/arrow_down.svg\"}\n              width=\"18px\"\n              onClick={() => {}}\n            />\n          </Link>\n        </Col>\n\n        <Col>\n          <Link to=\"/discussion/1\">\n            <Button className=\"reply-link\">Reply</Button>\n          </Link>\n        </Col>\n      </Row>\n    </div>\n  );\n}\n\nfunction ListEntryReplies(props) {\n  return (\n    <div className=\"questionEntry\">\n      <Row>\n        <Col className=\"reply-title\">{props.row.reply}</Col>\n        <Col className=\"created-time\">Created at: {props.row.createdat}</Col>\n      </Row>\n      <Row className=\"tags\">\n        <Col className=\"author\">from {props.row.author}</Col>\n      </Row>\n    </div>\n  );\n}\n\nfunction ListEntryTest(props) {\n  return (\n    <tr>\n      <td>{props.row.a}</td>\n      <td>{props.row.b}</td>\n      <td>{props.row.c}</td>\n    </tr>\n  );\n}\n\nfunction ListEntrySuggestion(props) {\n  return (\n    <Container>\n      <Col>\n        <Col>\n          <Link\n            to={\"/suggestion/\" + props.row.id}\n            className=\"suggestion-question\"\n          >\n            {props.row.question}\n          </Link>\n        </Col>\n        <Col className=\"suggestion-created-by\">from {props.row.author}</Col>\n        <Col className=\"suggestion-created-at\">\n          Created at: {props.row.createdat}\n        </Col>\n      </Col>\n    </Container>\n  );\n}\n\nfunction ListEntrySimulationResult(props) {\n  return (\n    <Accordion.Item eventKey={props.accordionKey} key={props.accordionKey}>\n      <Row>\n        <Col>\n          <Accordion.Header>\n            <Col className=\"col-md-2\">\n              {props.row.isCorrect ? (\n                <Image\n                  width={\"35px\"}\n                  src={process.env.PUBLIC_URL + \"/icons/RIGHT.svg\"}\n                />\n              ) : (\n                <Image\n                  width={\"35px\"}\n                  src={process.env.PUBLIC_URL + \"/icons/WRONG.svg\"}\n                />\n              )}\n            </Col>\n            <Col className=\"simulation-result-accordion-question-number\">\n              <h6>Question {props.row.quizNum}</h6>\n            </Col>\n            <Col className=\"simulation-result-accordion-score\">\n              {props.row.isCorrect ? (\n                <h6>Score: {props.row.score}</h6>\n              ) : (\n                <h6>Score: {props.row.penalty}</h6>\n              )}\n            </Col>\n          </Accordion.Header>\n        </Col>\n      </Row>\n      <Accordion.Body>\n        <p>\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n          eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad\n          minim veniam, quis nostrud exercitation ullamco laboris nisi ut\n          aliquip ex ea commodo consequat. Duis aute irure dolor in\n          reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\n          pariatur. Excepteur sint occaecat cupidatat non proident, sunt in\n          culpa qui officia deserunt mollit anim id est laborum.\n        </p>\n        {\n          <Row>\n            <Col>\n              <h5>Your Answer: {props.row.ans}</h5>\n            </Col>\n            <Col>\n              <h5>Correct Answer: {\"C\"}</h5>\n              {/*props.row.correctAns*/}\n            </Col>\n          </Row>\n        }\n      </Accordion.Body>\n    </Accordion.Item>\n  );\n}\nfunction ListEntrySelection(props) {\n  return <option value={props.key + 1}>{props.row}</option>;\n}\n\nfunction ListEntry(props) {\n  return (\n    <>\n      {props.scope === \"default\" && (\n        <ListEntryDefault row={props.row} dotted={props.dotted} />\n      )}\n      {props.scope === \"courses\" && <ListEntryCourses row={props.row} />}\n      {props.scope === \"questions\" && <ListEntryQuestions row={props.row} />}\n      {props.scope === \"answers\" && <ListEntryAnswers row={props.row} />}\n      {props.scope === \"replies\" && <ListEntryReplies row={props.row} />}\n      {props.scope === \"test\" && <ListEntryTest row={props.row} />}\n      {props.scope === \"suggestion\" && <ListEntrySuggestion row={props.row} />}\n      {props.scope === \"simulationResult\" && (\n        <ListEntrySimulationResult\n          row={props.row}\n          accordionKey={props.accordionKey}\n        />\n      )}\n      {props.scope === \"selection\" && <ListEntrySelection row={props.row} />}\n    </>\n  );\n}\n\nexport default ListEntry;\n","import { Container, Row, Col } from \"react-bootstrap\";\nimport { List } from \"./\";\nimport \"./ListGroup.css\";\nimport { Link } from \"react-router-dom\";\n\nfunction ListGroup(props) {\n  return (\n    <Container>\n      {props.lists\n        .filter((useless, i) => i % props.cols === 0)\n        .map((useless, i) => (\n          <Row key={i}>\n            {props.lists\n              .slice(i * props.cols, (i + 1) * props.cols)\n              .map((l, j) => (\n                <Col key={j}>\n                  <Link\n                    className=\"list-attributes\"\n                    to={{\n                      pathname:\n                        \"/listfullpage/\" +\n                        l.title.replace(/\\s/g, \"\").toLowerCase(),\n                    }}\n                    state={{ scope: l.scope, title: l.title, rows: l.rows }}\n                  >\n                    <List\n                      key={i + l.scope + l.title + \"listComp\"}\n                      scope={l.scope}\n                      title={l.title}\n                      rows={l.rows}\n                      rounded={props.rounded}\n                      dotted={props.dotted}\n                    />\n                  </Link>\n                </Col>\n              ))}\n            {props.tiled &&\n              (i + 1) * props.cols > props.lists.length - 1 &&\n              props.lists.length % props.cols > 0 &&\n              [\n                ...Array(props.cols - (props.lists.length % props.cols)).keys(),\n              ].map((key) => <Col></Col>)}\n          </Row>\n        ))}\n    </Container>\n  );\n}\n\nexport default ListGroup;\n","import React from \"react\";\nimport { MarkdownUtil } from \"@sahircansurmeli/react-mde\";\n\nconst insertTex = {\n  name: \"insert-tex\",\n  icon: () => (\n    <img\n      src={process.env.PUBLIC_URL + \"/icons/TeX_logo.svg\"}\n      width=\"26\"\n      height=\"15\"\n      alt=\"Insert TeX\"\n    />\n  ),\n  buttonProps: {\n    \"aria-label\": \"Add TeX\",\n    title: \"Add TeX\",\n  },\n  execute: ({ textApi, initialState }) => {\n    const newSelectionRange = MarkdownUtil.selectWord({\n      text: initialState.text,\n      selection: initialState.selection,\n    });\n\n    const state1 = textApi.setSelectionRange(newSelectionRange);\n\n    const s1 = state1.selection;\n    const text = state1.text;\n    const selectedText = state1.selectedText;\n    let state2;\n\n    if (\n      selectedText.substring(0, 1) === \"$\" &&\n      selectedText.substring(selectedText.length - 1, selectedText.length) ===\n        \"$\"\n    ) {\n      state2 = textApi.replaceSelection(\n        selectedText.substring(1, selectedText.length - 1)\n      );\n      textApi.setSelectionRange({\n        start: s1.start,\n        end: s1.end - 1,\n      });\n    } else if (\n      s1.start >= 1 &&\n      text.substring(s1.start - 1, s1.start) === \"$\" &&\n      text.substring(s1.end, s1.end + 1) === \"$\"\n    ) {\n      textApi.setSelectionRange({\n        start: s1.start - 1,\n        end: s1.end + 1,\n      });\n      state2 = textApi.replaceSelection(state1.selectedText);\n      textApi.setSelectionRange({\n        start: state2.selection.start - state1.selectedText.length,\n        end: state2.selection.end,\n      });\n    } else {\n      // Replaces the current selection with the italic mark up\n      state2 = textApi.replaceSelection(`$${state1.selectedText}$`);\n      // Adjust the selection to not contain the *\n      textApi.setSelectionRange({\n        start: state2.selection.end - 1 - state1.selectedText.length,\n        end: state2.selection.end - 1,\n      });\n    }\n  },\n};\n\nexport default insertTex;\n","import { MarkdownUtil } from \"@sahircansurmeli/react-mde\";\n\nconst saveImage = {\n  execute: async ({ initialState, textApi, context, l18n }) => {\n    if (!context) {\n      throw new Error(\"wrong context\");\n    }\n\n    const {\n      event,\n      pasteOptions: { saveImage, multiple, accept },\n    } = context;\n\n    const items = isPasteEvent(context)\n      ? dataTransferToArray(event.clipboardData.items)\n      : isDragEvent(context)\n      ? dataTransferToArray(event.dataTransfer.items)\n      : fileListToArray(event.target.files);\n\n    const filteredItems = filterItems(items, { multiple, accept });\n\n    for (const index in filteredItems) {\n      const blob = items[index];\n\n      if (blob.size >= 9437184) {\n        window.alert(\n          `Error uploading ${blob.name}\\nFile size cannot exceed 9 MB`\n        );\n        continue;\n      }\n\n      const initialState = textApi.getState();\n      const breaksBeforeCount = MarkdownUtil.getBreaksNeededForEmptyLineBefore(\n        initialState.text,\n        initialState.selection.start\n      );\n\n      const breaksBefore = Array(breaksBeforeCount + 1).join(\"\\n\");\n      const placeHolder = `${breaksBefore}![${l18n.uploadingImage}]()`;\n\n      textApi.replaceSelection(placeHolder);\n\n      const blobContents = await readFileAsync(blob);\n      const savingImage = saveImage(blobContents, blob);\n      const imageUrl = (await savingImage.next()).value;\n\n      const newState = textApi.getState();\n      const uploadingText = newState.text.slice(\n        initialState.selection.start,\n        initialState.selection.start + placeHolder.length\n      );\n\n      if (uploadingText === placeHolder) {\n        textApi.setSelectionRange({\n          start: initialState.selection.start,\n          end: initialState.selection.start + placeHolder.length,\n        });\n\n        const realImageMarkdown = imageUrl\n          ? `${breaksBefore}![image](${imageUrl})`\n          : \"\";\n\n        const selectionDelta = realImageMarkdown.length - placeHolder.length;\n\n        textApi.replaceSelection(realImageMarkdown);\n        textApi.setSelectionRange({\n          start: newState.selection.start + selectionDelta,\n          end: newState.selection.end + selectionDelta,\n        });\n      }\n    }\n  },\n};\n\nasync function readFileAsync(file) {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n\n    reader.onload = () => {\n      resolve(reader.result);\n    };\n\n    reader.onerror = reject;\n    reader.readAsDataURL(file);\n  });\n}\n\nfunction filterItems(items, { multiple, accept }) {\n  let filteredItems = items;\n\n  if (!multiple) {\n    filteredItems = filteredItems.slice(0, 1);\n  }\n\n  if (accept) {\n    const acceptedTypes = accept.split(\",\");\n    const fileExtensions = new Set(\n      acceptedTypes.filter((t) => /^\\.\\w+/.test(t)).map((t) => t.split(\".\")[1])\n    );\n    const mimeTypes = new Set(\n      acceptedTypes.filter((t) => /^[-\\w.]+\\/[-\\w.]+$/.test(t))\n    );\n    const anyTypes = new Set(\n      acceptedTypes\n        .filter((t) => /(audio|video|image)\\/\\*/.test(t))\n        .map((t) => t.split(\"/\")[0])\n    );\n\n    filteredItems = filteredItems.filter(\n      (f) =>\n        fileExtensions.has(f.name.split(\".\")[1]) ||\n        mimeTypes.has(f.type) ||\n        anyTypes.has(f.type.split(\"/\")[0])\n    );\n  }\n\n  return filteredItems;\n}\n\nfunction dataTransferToArray(items) {\n  const result = [];\n  for (const index in items) {\n    const item = items[index];\n    if (item.kind === \"file\") {\n      result.push(item.getAsFile());\n    }\n  }\n  return result;\n}\n\nfunction fileListToArray(list) {\n  const result = [];\n  for (let i = 0; i < list.length; i++) {\n    result.push(list[i]);\n  }\n  return result;\n}\n\nfunction isPasteEvent(context) {\n  return context.event.clipboardData !== undefined;\n}\n\nfunction isDragEvent(context) {\n  return context.event.dataTransfer !== undefined;\n}\n\nexport default saveImage;\n","import React, { useState } from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport ReactMde, {\n  getDefaultToolbarCommands,\n} from \"@sahircansurmeli/react-mde\";\nimport ReactMarkdown from \"react-markdown\";\nimport remarkGfm from \"remark-gfm\";\nimport remarkMath from \"remark-math\";\nimport rehypeKatex from \"rehype-katex\";\nimport rehypeHighlight from \"rehype-highlight\";\nimport { insertTex, saveImage } from \"./textInput/commands\";\nimport PythonEditor from \"react-python-editor\";\nimport { Buffer } from \"buffer\";\nimport Jimp from \"jimp\";\n\nimport \"@sahircansurmeli/react-mde/lib/styles/css/react-mde-all.css\";\nimport \"./textInput/textInput.css\";\nimport \"./stylesheet/TextInput.css\";\nimport \"katex/dist/katex.min.css\";\nimport \"highlight.js/styles/github.css\";\nimport \"./MarkdownPreview.css\";\n\nconst entryFiles = [\n  {\n    fullName: \"main.py\",\n    shortName: \"main.py\",\n    originalContent: `import micropip\n\n# to install other libraries, simply copy the next line and replace numpy with the name of the library you want to install\nawait micropip.install(\"numpy\")\n\n# set up your imports here, below the libraries installation steps\nimport numpy as np\n\n# at this point, you can run any standard Python code and the code from the libraries you have installed\nprint(\"Hello World\")`,\n    content: `import micropip\n\n# to install other libraries, simply copy the next line and replace numpy with the name of the library you want to install\nawait micropip.install(\"numpy\")\n\n# set up your imports here, below the libraries installation steps\nimport numpy as np\n\n# at this point, you can run any standard Python code and the code from the libraries you have installed\nprint(\"Hello World\")`,\n  },\n];\n\nfunction TextInput({\n  value,\n  onChange,\n  selectedTab,\n  onTabChange,\n  childProps,\n  pythonQuestion,\n  dark,\n}) {\n  const [val, setVal] = useState(\"\");\n  const [selTab, setSelTab] = useState(\"write\");\n  const [base64Imgs, setBase64Imgs] = useState({});\n  const [editorHeight, setEditorHeight] = useState(\"100px\");\n  const [isFullScreen, setIsFullScreen] = useState(false);\n\n  const uploadImage = async function* (data, file) {\n    const filename = file.name.replace(/\\[|\\]|\\(|\\)/g, \"\");\n    const [mime, b64] = data.split(\";base64,\");\n    const buffer = Buffer(b64, \"base64\");\n\n    const image = await Jimp.read(buffer);\n\n    const processedBuffer =\n      image.getWidth() > 1024 || image.getHeight() > 1024\n        ? await image\n            .scaleToFit(1024, 1024)\n            .getBufferAsync(mime.split(\"data:\").pop())\n        : b64;\n\n    const processedData =\n      mime + \";base64,\" + processedBuffer.toString(\"base64\");\n\n    setBase64Imgs((prev) => {\n      return {\n        ...prev,\n        [filename]: processedData,\n      };\n    });\n    yield filename;\n  };\n\n  const generatePreviewMarkdown = async (markdown) => {\n    const filenamesToReplace = Object.keys(base64Imgs);\n\n    if (filenamesToReplace.length < 1) {\n      return markdown;\n    }\n\n    const re = new RegExp(\n      Object.keys(base64Imgs)\n        .map(\n          (fn) => `!\\\\[.*\\\\]\\\\(${fn.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\")}\\\\)`\n        )\n        .join(\"|\"),\n      \"gi\"\n    );\n\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        resolve(\n          markdown.replaceAll(re, (match) => {\n            const alt = match.match(/!\\[.*\\]/);\n            const fn = match.match(/\\]\\(.*\\)/);\n            if (!alt || !fn) {\n              return match;\n            }\n            return `${alt[0]}(${base64Imgs[fn[0].slice(2, fn[0].length - 1)]})`;\n          })\n        );\n      });\n    });\n  };\n\n  const handleCopy = (file) => {\n    const re = new RegExp(\"\\n?```py\\n# \" + file.shortName + \".*```\\n?\", \"gs\");\n    const prev = value || val;\n    let newText;\n\n    // DO NOT MODIFY\n    const code = file.shortName.endsWith(\".py\")\n      ? `\n\\`\\`\\`py\n# ${file.shortName}\n\n${file.content}\n\\`\\`\\`\n`\n      : `\n\\`\\`\\`\n${file.content}\n\\`\\`\\`\n`;\n\n    const match = re.exec(prev);\n\n    if (match) {\n      newText =\n        prev.substr(0, match.index) +\n        code +\n        prev.substr(re.lastIndex, prev.length);\n      console.log(match.index, re.lastIndex);\n    } else {\n      newText = prev + code;\n    }\n\n    if (onChange) {\n      onChange(newText);\n    } else {\n      setVal(newText);\n    }\n  };\n\n  return (\n    <Container className=\"python-editor-container\" fluid>\n      {!isFullScreen && (\n        <ReactMde\n          className={\"hidden\"}\n          loadingPreview=\"Loading preview...\"\n          value={value || val}\n          onChange={onChange || setVal}\n          selectedTab={selectedTab || selTab}\n          onTabChange={onTabChange || setSelTab}\n          commands={{ \"insert-tex\": insertTex, \"upload-img\": saveImage }}\n          toolbarCommands={[...getDefaultToolbarCommands(), [\"insert-tex\"]]}\n          generateMarkdownPreview={async (markdown) => {\n            const previewMarkdown = await generatePreviewMarkdown(markdown);\n            return Promise.resolve(\n              <ReactMarkdown\n                remarkPlugins={[remarkGfm, remarkMath]}\n                rehypePlugins={[rehypeKatex, rehypeHighlight]}\n              >\n                {previewMarkdown}\n              </ReactMarkdown>\n            );\n          }}\n          childProps={childProps}\n          paste={{\n            saveImage: uploadImage,\n            command: \"upload-img\",\n            multiple: true,\n          }}\n        />\n      )}\n      {pythonQuestion && (\n        <PythonEditor\n          editorHeight={editorHeight}\n          outputHeight={\"5vh\"}\n          dark={dark}\n          onCopy={handleCopy}\n          projectFiles={entryFiles}\n          backgroundColor={dark ? \"#212529\" : \"#ffffff\"}\n          onFullScreen={(fs) => {\n            setIsFullScreen(fs);\n            if (fs) {\n              setEditorHeight(\"55vh\");\n            } else {\n              setEditorHeight(\"5vh\");\n            }\n          }}\n        />\n      )}\n    </Container>\n  );\n}\n\nexport default TextInput;\n","import React, { useState } from \"react\";\nimport { Collapse, Row, Col, Form, Pagination, Button } from \"react-bootstrap\";\n\nimport List from \"./List\";\nimport \"./stylesheet/Discussion.css\";\n\nconst fakeAnswers = [\n  {\n    id: 1,\n    answer: \"$\\\\int_{a}^{b}{x^2 dx}$\",\n    author: \"Donato\",\n    createdat: \"15:20 12/01/2021\",\n    like: 5,\n    dislike: 2,\n    replies: 3,\n  },\n  {\n    id: 2,\n    answer: \"Morbi leo risus porta ac consectetur ac\",\n    author: \"Jim\",\n    createdat: \"17:30 13/02/2021\",\n    like: 5,\n    dislike: 7,\n    replies: 0,\n  },\n  {\n    id: 3,\n    answer: \"Vestibulum at eros\",\n    author: \"Derek\",\n    createdat: \"19:40 14/03/2021\",\n    like: 9,\n    dislike: 1,\n    replies: 1,\n  },\n];\n\nconst no_pages = 5;\n\nfunction Discussion({ showdiscussion, discussions }) {\n  const [showDiscussion, setShowDiscussion] = useState(showdiscussion || false);\n  const [answers, setAnswers] = useState(fakeAnswers);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  return (\n    <div className=\"discussion-component\">\n      <Row>\n        <Col lg=\"12\">\n          <Button\n            onClick={() => setShowDiscussion((value) => !value)}\n            aria-controls=\"example-collapse-text\"\n            aria-expanded={showDiscussion}\n            className={`w-100 ${\n              showDiscussion ? \"btn-warning\" : \"btn-success\"\n            }`}\n          >\n            {showDiscussion ? \"Hide discussion\" : \"Show discussion\"}\n          </Button>\n        </Col>\n      </Row>\n\n      <Collapse className=\"collapse\" in={showDiscussion}>\n        <Row>\n          <Col lg=\"12\">\n            <Form.Group controlId=\"formGridState\">\n              <Form.Control placeholder=\"Search\" />\n            </Form.Group>\n          </Col>\n          <Col lg=\"12\">\n            <List className=\"discussion-list\" scope=\"answers\" rows={discussions} />\n          </Col>\n          <Col lg=\"12\" sm=\"12\" md=\"12\">\n            {/*<Pagination>*/}\n            {/*  {[...Array(no_pages)].map((_, idx) => (*/}\n            {/*    <Pagination.Item*/}\n            {/*      key={idx + 1}*/}\n            {/*      active={currentPage === idx + 1}*/}\n            {/*      onClick={() => setCurrentPage(idx + 1)}*/}\n            {/*    >*/}\n            {/*      {idx + 1}*/}\n            {/*    </Pagination.Item>*/}\n            {/*  ))}*/}\n            {/*</Pagination>*/}\n          </Col>\n        </Row>\n      </Collapse>\n    </div>\n  );\n}\n\nexport default Discussion;\n","import React, { useRef, useState, useEffect } from \"react\";\nimport { InputGroup, Button } from \"react-bootstrap\";\nimport { AsyncTypeahead } from \"react-bootstrap-typeahead\";\n\n// import styles from \"./searchBar/searchBar.module.scss\";\nimport styles from \"./stylesheet/SearchBar.scss\";\nimport \"./stylesheet/SearchBar.css\";\nimport \"react-bootstrap-typeahead/css/Typeahead.css\";\nimport \"react-bootstrap-typeahead/css/Typeahead.bs5.css\";\n\nfunction SearchBar({ apiCall }) {\n  /* Mock search suggestions */\n  const fakeSuggestions = [\n    { label: \"duckduckgo\" },\n    { label: \"duckduck\" },\n    { label: \"duckduckgo browser\" },\n    { label: \"duckduckgo download\" },\n  ];\n\n  const [suggestions, setSuggestions] = useState([]);\n  const [value, setValue] = useState(\"\");\n\n  useEffect(() => {\n    const charChange = async () => {\n      try {\n        console.log(value);\n        const res = await apiCall(value);\n      } catch (err) {\n        console.error(err.error);\n      }\n    };\n    charChange();\n  }, [value]);\n\n  const onSearch = (inputText) => {\n    setValue(inputText);\n    if (inputText.length > 0) {\n      setSuggestions(fakeSuggestions);\n    } else {\n      setSuggestions([]);\n    }\n  };\n\n  const ref = useRef();\n\n  return (\n    <InputGroup>\n      <AsyncTypeahead\n        id=\"Search bar\"\n        placeholder=\"Search a course\"\n        isLoading={false}\n        searchText=\"\"\n        emptyLabel=\"\"\n        promptText=\"\"\n        options={suggestions}\n        filterBy={() => true}\n        renderMenuItemChildren={(option) => <span>{option.label}</span>}\n        ref={ref}\n        onChange={() => {\n          console.log(value);\n        }}\n        onInputChange={onSearch}\n        onSearch={() => {}}\n        className=\"async-type-head\"\n      />\n      {value.length > 0 && (\n        <Button\n          variant=\"link\"\n          onClick={() => {\n            ref.current.clear();\n            setValue(\"\");\n          }}\n          className={\n            \"btn-outline-primary border-left-0 border \" + styles.clearButton\n          }\n        >\n          <img\n            width=\"20\"\n            height=\"20\"\n            src={process.env.PUBLIC_URL + \"/icons/x.svg\"}\n            alt=\"Search\"\n          />\n        </Button>\n      )}\n      <Button\n        variant={value.length > 0 ? \"primary\" : \"link\"}\n        className=\"btn-outline-primary border-left-0 border\"\n      >\n        <img\n          width=\"20\"\n          height=\"20\"\n          src={process.env.PUBLIC_URL + \"/icons/SEARCH.svg\"}\n          alt=\"Search\"\n        />\n      </Button>\n    </InputGroup>\n  );\n}\n\nexport default SearchBar;\n","import { useState } from \"react\";\nimport { Alert, Button } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\n\nfunction DebugPaths() {\n  const style = { padding: \"5px\" };\n  const [show, setShow] = useState(true);\n  return (\n    <Alert show={show} onClose={() => setShow(false)} dismissible>\n      <b>Dev only: </b>\n      <Link style={style} to=\"/login\">\n        Login\n      </Link>\n      <Link style={style} to=\"/\">\n        Home\n      </Link>\n      <Link style={style} to=\"/profile\">\n        Profile\n      </Link>\n      <Link style={style} to=\"/courses\">\n        Courses\n      </Link>\n      <Link\n        style={style}\n        to=\"/course/ABCDEF\"\n        state={{ courseId: \"courseId\", title: \"Course Name\" }}\n      >\n        Course\n      </Link>\n      <Link style={style} to=\"/question/QUESTID\">\n        Question\n      </Link>\n      <Link style={style} to=\"/myquestions\">\n        MyQuestions\n      </Link>\n      <Link style={style} to=\"/discussion/QUESTID\">\n        Discussion\n      </Link>\n      <Link style={style} to=\"/startsimulation/\">\n        Simulation\n      </Link>\n      <Link style={style} to=\"/settings\">\n        UserSettings\n      </Link>\n      <Link style={style} to=\"/todel\">\n        Exam\n      </Link>\n      <Link style={style} to=\"/python-editor\">\n        Python Editor\n      </Link>\n    </Alert>\n  );\n}\n\nexport default DebugPaths;\n","import { useState } from \"react\";\nimport { Pagination } from \"react-bootstrap\";\nimport \"./stylesheet/MyPagination.scss\";\n\nexport default function MyPagination(props) {\n  let [active, setActive] = useState(1);\n  let items = [];\n  for (let num = 1; num <= 5; num++) {\n    items.push(\n      <Pagination.Item\n        key={num}\n        active={num === active}\n        onClick={() => {\n          setActive((active = num));\n        }}\n      >\n        {num}\n      </Pagination.Item>\n    );\n  }\n\n  return (\n    <Pagination>\n      <Pagination.Prev />\n      {items}\n      <Pagination.Next />\n    </Pagination>\n  );\n}\n","import \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { useState, useEffect } from \"react\";\nimport { Container, Row, Col, Alert, Button } from \"react-bootstrap\";\nimport {\n  Routes,\n  Route,\n  Navigate as Redirect,\n  Link,\n  useLocation,\n} from \"react-router-dom\";\nimport {\n  NavigationBar,\n  Footer,\n  DebugPaths,\n  TextInput,\n  BreadCrumb,\n} from \"./base/\";\nimport {\n  AddQuestion,\n  Answers,\n  CoursesList,\n  Exam,\n  Home,\n  LoginForm,\n  MyQuestions,\n  Profile,\n  Questions,\n  Replies,\n  UserSettings,\n  ListFullPage,\n  Bookmarks,\n  StartSimulation,\n  Simulation,\n  SimulationResult,\n  SimulationAccess,\n} from \"./pages/\";\n// import parsedQuestions from \"./constants/parsed\";\n// import API from './api/API'\n\nfunction App() {\n  const [loggedIn, setLoggedIn] = useState(true); // TODO: reset to false, true used for debugging purposes\n  const [showHints, setShowHints] = useState(false);\n  const [showDiscussion, setShowDiscussion] = useState(false);\n  const [admin, setAdmin] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const [dark, setDark] = useState(false);\n\n  useEffect(() => {\n    if (!loggedIn) setMessage(\"\");\n  }, [loggedIn]);\n\n  // useEffect(() => {\n  // \tconst checkAuth = async () => {\n  // \t\ttry {\n  // \t\t\tconst user = await API.getUserInfo()\n  // \t\t\tsetLoggedIn(true)\n  // \t\t\tuser.admin ? setAdmin(true) : setAdmin(false)\n  // \t\t} catch (err) {\n  // \t\t\tconsole.error(err.error)\n  // \t\t}\n  // \t}\n  // \tcheckAuth()\n  // }, [])\n\n  // const doLogin = async credentials => {\n  // \ttry {\n  // \t\tconst username = await API.login(credentials)\n  // \t\tsetLoggedIn(true)\n  // \t\tsetMessage({ msg: `Welcome, ${username}!`, type: 'success' })\n  // \t\tconst user = await API.getUserInfo()\n  // \t\tuser.admin ? setAdmin(true) : setAdmin(false)\n  // \t} catch (err) {\n  // \t\tsetMessage({ msg: err, type: 'danger' })\n  // \t}\n  // }\n\n  const doLogout = async () => {\n    // await API.logout()\n    setLoggedIn(false);\n    setAdmin(false);\n  };\n\n  return (\n    <Container fluid>\n      <Row>\n        <Col className=\"px-0\">\n          <NavigationBar\n            dark={dark}\n            setdark={setDark}\n            logged={loggedIn}\n            setlogged={setLoggedIn}\n            showhints={showHints}\n            setshowhints={setShowHints}\n            showdiscussion={showDiscussion}\n            setshowdiscussion={setShowDiscussion}\n            logout={doLogout}\n          />\n        </Col>\n      </Row>\n      {/*<Row><BreadCrumb/></Row>*/}\n      <Row className=\"my-4\">\n        <Col xs={6} className=\"mx-auto\">\n          {message && (\n            <Alert\n              variant={message.type}\n              onClose={() => setMessage(\"\")}\n              dismissible={!message.noclose}\n            >\n              {message.msg}\n            </Alert>\n          )}\n        </Col>\n      </Row>\n      <DebugPaths />\n      <Row className=\"my-4\">\n        <Col sm={11} md={10} className=\"mx-auto\">\n          {/*\n\t\t\t\t\t<Exam question={parsedQuestions.quiz.question} />\n\t\t\t\t\t*/}\n          {loggedIn ? (\n            <Routes>\n              <Route path=\"/*\" element={<Redirect to=\"/\" />} />\n              <Route path=\"/\" element={<Home />} />\n              <Route path=\"/profile\" element={<Profile />} />\n              <Route path=\"/settings\" element={<UserSettings />} />\n              <Route path=\"/courses\" element={<CoursesList />} />\n              <Route path=\"/course/:courseid\" element={<Questions />} />\n              <Route\n                path=\"/question/:questionid\"\n                element={\n                  <Answers\n                    showhints={showHints}\n                    showdiscussion={showDiscussion}\n                  />\n                }\n              />\n              <Route path=\"/discussion/:questionid\" element={<Replies />} />\n              <Route\n                path=\"/simulation/:simulationType\"\n                element={<Simulation />}\n              />\n              <Route path=\"/addquestion\" element={<AddQuestion />} />\n              <Route path=\"/todel\" element={<Exam />} />\n              <Route\n                path=\"/listfullpage/:listName\"\n                element={<ListFullPage />}\n              />\n              <Route path=\"/bookmarks\" element={<Bookmarks />} />\n              <Route\n                path=\"/startsimulation/:courseName\"\n                element={<StartSimulation />}\n              />\n              <Route\n                path=\"/simulationresult/:courseName\"\n                element={<SimulationResult />}\n              />\n              <Route path=\"/simulationview\" element={<SimulationAccess />} />\n              <Route\n                path=\"/python-editor\"\n                element={<TextInput dark={dark} pythonQuestion />}\n              />{\" \"}\n              {/* For debugging purposes */}\n            </Routes>\n          ) : (\n            <Routes>\n              <Route path=\"/*\" element={<Redirect to=\"/login\" />} />\n              <Route\n                path=\"/login\"\n                element={<LoginForm login={() => setLoggedIn(true)} />}\n              />\n            </Routes>\n          )}\n        </Col>\n      </Row>\n      <Row>\n        <Footer />\n      </Row>\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nlet basename = \"\";\nconst { PUBLIC_URL } = process.env;\n\nif (PUBLIC_URL) {\n  const splitArray = PUBLIC_URL.split(\"://\")[1].split(\"/\");\n  basename =\n    (splitArray.length > 1 && `/${splitArray[splitArray.length - 1]}`) || \"\";\n}\n\nReactDOM.render(\n  // <React.StrictMode>\n  <Router basename={basename}>\n    <App />\n  </Router>,\n  // </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}