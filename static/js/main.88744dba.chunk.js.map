{"version":3,"sources":["icons.js","base/NavigationBar.js","img/logoSkeeellLight.svg","img/logoSkeeelledLight.svg","img/logoSkeeelledDark.svg","img/logoWeeeOpen.svg","img/logoSkeeellDark.svg","img/logoSkeeelledLightFooter.svg","img/logoSkeeelledDarkFooter.svg","base/Footer.js","entities/CommentObj.js","entities/CourseObj.js","entities/QuestionObj.js","entities/ReplyObj.js","entities/DiscussionObj.js","api/API.js","GlobalStateProvider.js","base/List.js","base/MarkdownPreview.js","base/QuestionPreview.js","pages/AddQuestion.js","pages/Answers.js","base/Suggestion.js","pages/CoursesList.js","pages/Exam.js","pages/Home.js","pages/LoginForm.js","pages/MyQuestions.js","pages/MyComments.js","pages/MyReplies.js","pages/Profile.js","pages/Questions.js","pages/Replies.js","pages/UserSettings.js","pages/ListFullPage.js","pages/Bookmarks.js","pages/StartSimulation.js","pages/Simulation.js","pages/SimulationResult.js","pages/SimulationAccess.js","base/ListEntry.js","base/ListGroup.js","base/textInput/commands/insertTex.js","base/textInput/commands/saveImage.js","base/TextInput.js","base/Discussion.js","base/SearchBar.js","base/DebugPaths.js","base/BreadCrumb.js","base/MyPagination.js","App.js","reportWebVitals.js","index.js"],"names":["iconUser","xmlns","width","height","fill","className","viewBox","d","fillRule","iconLogout","stroke","strokeWidth","strokeLinecap","strokeLinejoin","iconAdmin","fakeQuestions","id","question","author","createdat","tags","excerpt","NavigationBar","props","useState","questions","Navbar","bg","dark","variant","to","Brand","Image","src","process","admin","Nav","Link","as","Collapse","NavDropdown","title","align","lg","Item","href","pathname","state","scope","rows","Divider","Form","Switch","label","defaultChecked","onChange","setdark","showhints","setshowhints","showdiscussion","setshowdiscussion","logged","onClick","logout","Footer","logoSkeeelledLightFooter","alt","logoWeeeOpen","logoSkeeellLight","CommentObj","upvoted_by","downvoted_by","has_verified_upvotes","timestamp","content","upovotes","downvotes","question_id","this","date","Date","getDay","getMonth","getFullYear","getHours","getMinutes","json","_id","CourseObj","name","years_active","professors","myCourse","Object","assign","QuestionObj","owner","quiz","course","is_deleted","hint","ReplyObj","upvotes","DiscussionObj","replies","from","prefix","getUser","userID","a","Promise","resolve","reject","fetch","then","res","status","ok","catch","err","getMyCourses","map","myCourses","getCourses","courses","getQuestions","courseId","getDiscussions","questionId","getMyQuestions","user_id","page","itemsPerPage","myQuestions","getMyComments","comments","getMyReplies","myReplies","getReplies","comment_id","searchCourses","query","searchQuestion","course_id","searchDiscussion","discussions","API","getMyCourseNewQuestions","userId","getMyBookmarkedQuestions","getMySimulationResult","GlobalStateContext","createContext","GlobalStateProvider","children","userInfo","setUserInfo","myCoursesNewQuestions","setMyCoursesNewQuestions","myBookmarkedQuestions","setMyBookmarkedQuestions","mySimulationResult","setMySimulationResult","relatedCourses","setRelatedCourses","allCourses","setAllCourses","userCourses","setUserCourses","console","log","useEffect","x","questiontext","text","info","result","Courses","filter","i","length","Provider","value","HeaderColspan","ListDefault","rounded","toLowerCase","replace","colSpan","r","row","dotted","Table","striped","borderless","hover","ListQuestions","apiCall","ListBookmarkQuestions","ListAnswers","Container","ListMyComments","ListReplies","ListSuggestion","Stack","gap","ListSimulationResult","areAllAccordionItemsOpen","setAreAllAccordionItemsOpen","activeKeys","setActiveKeys","index","Card","Header","Row","Col","Button","Accordion","defaultActiveKey","activeKey","onSelect","eventKeys","alwaysOpen","accordionKey","ListSelection","FloatingLabel","Select","List","MarkdownPreview","React","memo","markdown","format","remarkPlugins","remarkGfm","remarkMath","rehypePlugins","rehypeKatex","rehypeHighlight","rehypeRaw","QuestionPreview","showAdvice","setShowAdvice","Body","Title","AddQuestion","setCourses","results","options","forEach","push","GenerateOptions","Label","size","Control","type","Check","Answers","locationState","useLocation","setDiscussions","setQuestion","childProps","textArea","placeholder","Suggestion","fluid","CoursesList","useContext","setMyCourses","Exam","body","Home","homePageList","MyReplies","MyQuestions","MyAnswers","homeLists","lists","cols","tiled","LoginForm","username","setUsername","password","setPassword","errorMessage","setErrorMessage","Modal","Dialog","Alert","Group","controlId","ev","target","event","preventDefault","credentials","valid","checkPassword","login","setMyQuestions","suggestions","setSuggestions","suggestionType","_myQuestions","isDesktop","matches","setMatches","media","window","matchMedia","listener","addEventListener","removeEventListener","useMediaQuery","sm","md","MyComments","myComments","setMyComments","_myComments","setReplies","_replies","Profile","fake","tests","user","setUser","xs","surname","Questions","setQuestions","Answer","ans","answer","Replies","UserSettings","ListFullPage","location","Bookmarks","StartSimulation","isMulti","setIsMulti","numQuestions","setNumQuestions","penaltyScore","setPenaltyScore","maxScore","setMaxScore","duration","setDuration","userInput","setUserInput","maxNumOfQuestion","InputGroup","Text","FormControl","e","Number","isNaN","num","penalty","max","Duration","h","Math","floor","parseInt","m","s","timeIn","setTimeIn","myInterval","setInterval","time","updateTime","clearInterval","toString","padStart","FinishModal","show","setShow","timeRecord","setTimeRecord","pointPerCorrectAns","timeElapsed","onHide","closeButton","Simulation","simulationRandomQuizType","pageNum","setPageNum","randomizer","random","quizType","setQuizType","PaginationRow","items","Pagination","active","numPage","Prev","Next","SimulationResult","numCorrect","numPenalty","numNotGiven","numQuiz","pointPerWrong","pointPerCorrect","mockCorrectAns","quizNum","score","isCorrect","mockUserAns","randomAns","examDuration","split","n","useAns","left","tot","timeUsedStr","abs","responsive","SimulationAccess","coursesEnrolled","simulationResult","courseSelected","setCourseSelected","courseSelectedTitle","setCourseSelectedTitle","DropdownButton","Dropdown","ListGroup","varient","ListEntryDefault","isLoading","setIsLoading","setTimeout","cell","ListEntryCourses","prof","ListEntryQuestions","ListEntryBookmarkQuestions","ListEntryAnswers","rowspan","ListEntryMyComments","ListEntryReplies","ListEntryTest","b","c","ListEntrySuggestion","ListEntrySimulationResult","eventKey","ListEntrySelection","key","ListEntry","useless","slice","l","j","Array","keys","insertTex","icon","buttonProps","execute","state2","textApi","initialState","newSelectionRange","MarkdownUtil","selectWord","selection","state1","setSelectionRange","s1","selectedText","substring","replaceSelection","start","end","saveImage","context","l18n","Error","pasteOptions","multiple","accept","isPasteEvent","dataTransferToArray","clipboardData","isDragEvent","dataTransfer","fileListToArray","files","filteredItems","filterItems","blob","alert","getState","breaksBeforeCount","getBreaksNeededForEmptyLineBefore","breaksBefore","join","placeHolder","uploadingImage","readFileAsync","blobContents","savingImage","next","imageUrl","newState","realImageMarkdown","selectionDelta","file","reader","FileReader","onload","onerror","readAsDataURL","acceptedTypes","fileExtensions","Set","t","test","mimeTypes","anyTypes","f","has","item","kind","getAsFile","list","undefined","entryFiles","fullName","shortName","originalContent","TextInput","selectedTab","onTabChange","pythonQuestion","val","setVal","selTab","setSelTab","base64Imgs","setBase64Imgs","editorHeight","setEditorHeight","isFullScreen","setIsFullScreen","uploadImage","data","filename","mime","b64","buffer","Buffer","Jimp","read","image","getWidth","getHeight","scaleToFit","getBufferAsync","pop","processedBuffer","processedData","prev","generatePreviewMarkdown","re","RegExp","fn","replaceAll","match","loadingPreview","commands","toolbarCommands","getDefaultToolbarCommands","generateMarkdownPreview","previewMarkdown","paste","command","outputHeight","onCopy","newText","code","endsWith","exec","substr","lastIndex","projectFiles","backgroundColor","onFullScreen","fs","fakeAnswers","like","dislike","Discussion","showDiscussion","setShowDiscussion","in","SearchBar","setOptions","setValue","charChange","onSearch","inputText","ref","useRef","searchText","emptyLabel","promptText","filterBy","renderMenuItemChildren","option","onInputChange","DebugPaths","style","padding","onClose","dismissible","breadcrumbRecord","path","BreadCrumb","setLocationState","warn","crumbPathArr","setCrumbPathArr","isRoot","foundPath","isNew","findChild","arr","str","indexOf","getStringArray","dest","root","includes","Breadcrumb","MyPagination","setActive","App","loggedIn","setLoggedIn","showHints","setShowHints","setAdmin","message","setMessage","setDark","doLogout","setlogged","noclose","msg","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","basename","PUBLIC_URL","splitArray","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.88744dba.chunk.js","sourcesContent":["const iconUser = (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"24\"\n    height=\"24\"\n    fill=\"currentColor\"\n    className=\"bi bi-person-circle\"\n    viewBox=\"0 0 16 16\"\n  >\n    <path d=\"M11 6a3 3 0 1 1-6 0 3 3 0 0 1 6 0z\" />\n    <path\n      fillRule=\"evenodd\"\n      d=\"M0 8a8 8 0 1 1 16 0A8 8 0 0 1 0 8zm8-7a7 7 0 0 0-5.468 11.37C3.242 11.226 4.805 10 8 10s4.757 1.225 5.468 2.37A7 7 0 0 0 8 1z\"\n    />\n  </svg>\n);\n\nconst iconLogo = (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"24\"\n    height=\"20\"\n    fill=\"currentColor\"\n    className=\"bi bi-book\"\n    viewBox=\"0 1 16 16\"\n  >\n    <path d=\"M1 2.828c.885-.37 2.154-.769 3.388-.893 1.33-.134 2.458.063 3.112.752v9.746c-.935-.53-2.12-.603-3.213-.493-1.18.12-2.37.461-3.287.811V2.828zm7.5-.141c.654-.689 1.782-.886 3.112-.752 1.234.124 2.503.523 3.388.893v9.923c-.918-.35-2.107-.692-3.287-.81-1.094-.111-2.278-.039-3.213.492V2.687zM8 1.783C7.015.936 5.587.81 4.287.94c-1.514.153-3.042.672-3.994 1.105A.5.5 0 0 0 0 2.5v11a.5.5 0 0 0 .707.455c.882-.4 2.303-.881 3.68-1.02 1.409-.142 2.59.087 3.223.877a.5.5 0 0 0 .78 0c.633-.79 1.814-1.019 3.222-.877 1.378.139 2.8.62 3.681 1.02A.5.5 0 0 0 16 13.5v-11a.5.5 0 0 0-.293-.455c-.952-.433-2.48-.952-3.994-1.105C10.413.809 8.985.936 8 1.783z\" />\n  </svg>\n);\n\nconst iconLogout = (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"24\"\n    height=\"24\"\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    stroke=\"currentColor\"\n    strokeWidth=\"2\"\n    strokeLinecap=\"round\"\n    strokeLinejoin=\"round\"\n  >\n    <path d=\"M10 3H6a2 2 0 0 0-2 2v14c0 1.1.9 2 2 2h4M16 17l5-5-5-5M19.8 12H9\" />\n  </svg>\n);\n\nconst iconAdmin = (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"16\"\n    height=\"24\"\n    fill=\"currentColor\"\n    className=\"bi bi-gear-fill\"\n    viewBox=\"0 2 16 16\"\n  >\n    <path d=\"M9.405 1.05c-.413-1.4-2.397-1.4-2.81 0l-.1.34a1.464 1.464 0 0 1-2.105.872l-.31-.17c-1.283-.698-2.686.705-1.987 1.987l.169.311c.446.82.023 1.841-.872 2.105l-.34.1c-1.4.413-1.4 2.397 0 2.81l.34.1a1.464 1.464 0 0 1 .872 2.105l-.17.31c-.698 1.283.705 2.686 1.987 1.987l.311-.169a1.464 1.464 0 0 1 2.105.872l.1.34c.413 1.4 2.397 1.4 2.81 0l.1-.34a1.464 1.464 0 0 1 2.105-.872l.31.17c1.283.698 2.686-.705 1.987-1.987l-.169-.311a1.464 1.464 0 0 1 .872-2.105l.34-.1c1.4-.413 1.4-2.397 0-2.81l-.34-.1a1.464 1.464 0 0 1-.872-2.105l.17-.31c.698-1.283-.705-2.686-1.987-1.987l-.311.169a1.464 1.464 0 0 1-2.105-.872l-.1-.34zM8 10.93a2.929 2.929 0 1 1 0-5.86 2.929 2.929 0 0 1 0 5.858z\" />\n  </svg>\n);\n\nconst iconMeeting = (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"16\"\n    height=\"16\"\n    viewBox=\"0 4 28 24\"\n    fill=\"none\"\n    stroke=\"#ffffff\"\n    strokeWidth=\"2\"\n    strokeLinecap=\"round\"\n    strokeLinejoin=\"round\"\n  >\n    <path d=\"M20 14.66V20a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h5.34\"></path>\n    <polygon points=\"18 2 22 6 12 16 8 16 8 12 18 2\"></polygon>\n  </svg>\n);\n\nconst iconAdd = (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"20\"\n    height=\"20\"\n    fill=\"currentColor\"\n    className=\"bi bi-plus-circle-fill\"\n    viewBox=\"0 0 16 18\"\n  >\n    <path d=\"M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zM8.5 4.5a.5.5 0 0 0-1 0v3h-3a.5.5 0 0 0 0 1h3v3a.5.5 0 0 0 1 0v-3h3a.5.5 0 0 0 0-1h-3v-3z\" />\n  </svg>\n);\n\nconst iconDelete = (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"24\"\n    height=\"24\"\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    stroke=\"#ffffff\"\n    strokeWidth=\"2\"\n    strokeLinecap=\"round\"\n    strokeLinejoin=\"round\"\n  >\n    <polyline points=\"3 6 5 6 21 6\"></polyline>\n    <path d=\"M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2\"></path>\n    <line x1=\"10\" y1=\"11\" x2=\"10\" y2=\"17\"></line>\n    <line x1=\"14\" y1=\"11\" x2=\"14\" y2=\"17\"></line>\n  </svg>\n);\n\nexport {\n  iconUser,\n  iconLogo,\n  iconLogout,\n  iconAdmin,\n  iconMeeting,\n  iconAdd,\n  iconDelete,\n};\n","import {\n  Navbar,\n  Nav,\n  NavDropdown,\n  Image,\n  Form,\n  OverlayTrigger,\n  Popover,\n} from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { iconUser, iconLogout, iconAdmin } from \"../icons.js\";\nimport \"./NavigationBar.css\";\nimport { useState } from \"react\";\n\nconst fakeQuestions = [\n  {\n    id: 1,\n    question: \"What is a vector?\",\n    author: \"Donato\",\n    createdat: \"15:20 12/01/2021\",\n    tags: [\"vectors\"],\n    excerpt: \"Cras justo odio...\",\n  },\n  {\n    id: 2,\n    question: \"Who is Maxwell?\",\n    author: \"Jim\",\n    createdat: \"17:30 13/02/2021\",\n    tags: [\"physics\"],\n    excerpt: \"Cras justo odio...\",\n  },\n  {\n    id: 3,\n    question: \"How many meters per second?\",\n    author: \"Derek\",\n    createdat: \"19:40 14/03/2021\",\n    tags: [\"physics\", \"kinematic\"],\n    excerpt: \"Cras justo odio...\",\n  },\n];\n\nfunction NavigationBar(props) {\n  const [questions, setQuestions] = useState(fakeQuestions /*[]*/);\n\n  return (\n    <Navbar\n      id={\"navbar\"}\n      bg={props.dark ? \"dark\" : \"light\"}\n      variant={props.dark ? \"dark\" : \"light\"}\n    >\n      <Link to={\"/\"}>\n        <Navbar.Brand>\n          <Image\n            id={\"navbar-logo-skeeelled\"}\n            src={\n              props.dark\n                ? process.env.PUBLIC_URL + \"/img/logoSkeeelledDark.svg\"\n                : process.env.PUBLIC_URL + \"/img/logoSkeeelledLight.svg\"\n            }\n            className=\"logo\"\n          />\n        </Navbar.Brand>\n      </Link>\n\n      {props.admin ? (\n        <Link to=\"/admin/list\">\n          <Navbar.Brand>{iconAdmin} Admin panel </Navbar.Brand>\n        </Link>\n      ) : null}\n\n      <Nav.Link\n        as={Link}\n        className={props.dark ? \"home-link-dark\" : \"home-link\"}\n        to=\"/\"\n      >\n        Home\n      </Nav.Link>\n\n      <Nav.Link\n        as={Link}\n        className={props.dark ? \"course-link-dark\" : \"course-link\"}\n        to=\"/courses\"\n      >\n        Courses\n      </Nav.Link>\n\n      <Nav.Link\n        as={Link}\n        className={props.dark ? \"simulation-link-dark\" : \"simulation-link\"}\n        to=\"/simulationview\"\n      >\n        Simulation\n      </Nav.Link>\n\n      <Nav.Link\n        as={Link}\n        className={props.dark ? \"add-question-link-dark\" : \"add-question-link\"}\n        to=\"/addquestion\"\n      >\n        Add question\n      </Nav.Link>\n\n      <Nav id={\"user-dropdown\"}>\n        <Navbar.Collapse className=\"mr-4 mt-0\">\n          <NavDropdown\n            id=\"dropdown-menu-align-responsive-2\"\n            title={iconUser}\n            align={{ lg: \"end\" }}\n          >\n            <Link to=\"/profile\" className=\"dropdown-link\">\n              <NavDropdown.Item href=\"#action/3.1\">Profile</NavDropdown.Item>\n            </Link>\n            <Link\n              className=\"dropdown-link\"\n              to={{ pathname: \"/bookmarks\" }}\n              state={{\n                scope: \"questions\",\n                title: \"Bookmarked Questions\",\n                rows: questions,\n              }}\n              className=\"dropdown-link\"\n            >\n              <NavDropdown.Item href=\"#action/3.2\">Bookmarks</NavDropdown.Item>\n            </Link>\n            <Link to=\"/settings\" className=\"dropdown-link\">\n              <NavDropdown.Item href=\"#action/3.3\">Settings</NavDropdown.Item>\n            </Link>\n            <NavDropdown.Divider />\n            <div className=\"dropdown-item\">\n              <Form.Switch\n                label=\"Dark\"\n                id=\"custom-switch-dark\"\n                defaultChecked={props.dark}\n                onChange={() => props.setdark(!props.dark)}\n              />\n            </div>\n            <div className=\"dropdown-item\">\n              <Form.Switch\n                label=\"Show hints\"\n                id=\"custom-switch-hint\"\n                defaultChecked={props.showhints}\n                onChange={() => props.setshowhints(!props.showhints)}\n              />\n            </div>\n            <div className=\"dropdown-item\">\n              <Form.Switch\n                label=\"Show discussion\"\n                id=\"custom-switch-disc\"\n                defaultChecked={props.showdiscussion}\n                onChange={() => props.setshowdiscussion(!props.showdiscussion)}\n              />\n            </div>\n            {props.logged && (\n              <>\n                <NavDropdown.Divider />\n                <NavDropdown.Item onClick={props.logout}>\n                  Logout {iconLogout}\n                </NavDropdown.Item>\n              </>\n            )}\n          </NavDropdown>\n        </Navbar.Collapse>\n      </Nav>\n\n      {/* <Form.Switch label=\"Check this switch\" type=\"switch\" id=\"custom-switch\"/> */}\n\n      {/* <OverlayTrigger\n\t\t\t\ttrigger=\"click\"\n\t\t\t\tkey=\"bottom\"\n\t\t\t\tplacement=\"bottom\"\n\t\t\t\toverlay={\n\t\t\t\t\t<Popover id=\"popover-positioned-bottom\">\n\t\t\t\t\t<Popover.Header as=\"h3\">Popover bottom</Popover.Header>\n\t\t\t\t\t<Popover.Body>\n\t\t\t\t\t\t<strong>Holy guacamole!</strong> Check this info.\n\t\t\t\t\t</Popover.Body>\n\t\t\t\t\t</Popover>\n\t\t\t\t}\n\t\t\t\t>\n\t\t\t\t<Button variant=\"secondary\">Popover on bottom</Button>\n\t\t\t\t</OverlayTrigger>\n\t\t\t*/}\n    </Navbar>\n  );\n}\n\nexport default NavigationBar;\n","export default __webpack_public_path__ + \"static/media/logoSkeeellLight.196ac81d.svg\";","export default __webpack_public_path__ + \"static/media/logoSkeeelledLight.89a46839.svg\";","export default __webpack_public_path__ + \"static/media/logoSkeeelledDark.8ee41200.svg\";","export default __webpack_public_path__ + \"static/media/logoWeeeOpen.a7c8f3ee.svg\";","export default __webpack_public_path__ + \"static/media/logoSkeeellDark.aa3ae18b.svg\";","export default __webpack_public_path__ + \"static/media/logoSkeeelledLightFooter.79648b4a.svg\";","export default __webpack_public_path__ + \"static/media/logoSkeeelledDarkFooter.e5149d82.svg\";","import { Image } from \"react-bootstrap\";\nimport {\n  logoSkeeelledLight,\n  logoSkeeellLight,\n  logoSkeeelledDark,\n  logoSkeeellDark,\n  logoWeeeOpen,\n} from \"../img/\";\nimport {\n  logoSkeeelledLightFooter,\n  logoSkeeellLightFooter,\n  logoSkeeelledDarkFooter,\n  logoSkeeellDarkFooter,\n} from \"../img/\";\nimport \"./Footer.css\";\n\nfunction Footer() {\n  return (\n    <div id={\"footer\"} className=\"mx-auto\">\n      <h5 id={\"skeeelled\"} className=\"mx-auto\">\n        <a\n          id={\"skeeelled-logo-link\"}\n          href={\"https://github.com/weee-open/skeeelled\"}\n        >\n          <Image\n            id={\"skeeelled-logo\"}\n            src={logoSkeeelledLightFooter}\n            alt={\"skeeelled\"}\n          />\n        </a>\n        is a tool realized by\n        <a href={\"https://weeeopen.polito.it\"}>\n          <Image id={\"weee-open-logo\"} src={logoWeeeOpen} alt={\"WEEE Open\"} />\n        </a>\n      </h5>\n      <h5 id={\"skeeell\"} className=\"mx-auto\">\n        See more about\n        <a href={\"https://weeeopen.polito.it/skeeell\"}>\n          <Image id={\"skeeell-logo\"} src={logoSkeeellLight} alt={\"skeeell\"} />\n        </a>\n      </h5>\n    </div>\n  );\n}\n\nexport default Footer;\n","class CommentObj {\n  constructor(\n    id,\n    author,\n    upvoted_by,\n    downvoted_by,\n    has_verified_upvotes,\n    timestamp,\n    content,\n    upovotes,\n    downvotes,\n    question_id\n  ) {\n    this.id = id;\n    this.author = author;\n    this.upvoted_by = upvoted_by;\n    this.downvoted_by = downvoted_by;\n    has_verified_upvotes\n      ? (this.has_verified_upvotes = 1)\n      : (this.has_verified_upvotes = 0);\n    this.timestamp = timestamp;\n    this.content = content;\n    this.upovotes = upovotes;\n    this.downvotes = downvotes;\n    this.question_id = question_id;\n\n    //Properties for List\n    let date = new Date(this.timestamp);\n    this.createdat =\n      date.getDay() +\n      \"/\" +\n      date.getMonth() +\n      \"/\" +\n      date.getFullYear() +\n      \" \" +\n      date.getHours() +\n      \":\" +\n      date.getMinutes();\n\n    //TODO Remove this, it's used to show something in the suggestion list\n    this.question = this.content;\n  }\n\n  static from(json) {\n    return new CommentObj(\n      json._id,\n      json.author,\n      json.upvoted_by,\n      json.downvoted_by,\n      json.has_verified_upvotes,\n      json.timestamp,\n      json.content,\n      json.upovotes,\n      json.downvotes,\n      json.question_id\n    );\n  }\n}\n\nexport default CommentObj;\n","class CourseObj {\n  constructor(_id, name, years_active, professors, myCourse = false) {\n    this._id = _id;\n    this.name = name;\n    this.years_active = years_active;\n    this.professors = professors;\n    myCourse ? (this.myCourse = 1) : (this.myCourse = 0);\n  }\n\n  static from(json) {\n    return Object.assign(new CourseObj(), json);\n  }\n}\n\nexport default CourseObj;\n","class QuestionObj {\n  constructor(\n    id,\n    owner,\n    title,\n    quiz,\n    course,\n    content,\n    is_deleted,\n    hint,\n    tags,\n    timestamp\n  ) {\n    this.id = id;\n    this.owner = owner;\n    this.title = title;\n    this.quiz = quiz;\n    this.course = course;\n    this.content = content;\n    this.is_deleted = is_deleted;\n    this.hint = hint;\n    this.tags = tags;\n    this.timestamp = timestamp;\n\n    //Properties for List\n    let date = new Date(this.timestamp);\n    this.createdat =\n      date.getDay() +\n      \"/\" +\n      date.getMonth() +\n      \"/\" +\n      date.getFullYear() +\n      \" \" +\n      date.getHours() +\n      \":\" +\n      date.getMinutes();\n    this.question = this.content;\n    this.excerpt = \"#\";\n  }\n\n  static from(json) {\n    return new QuestionObj(\n      json._id,\n      json.owner,\n      json.name,\n      json.quiz,\n      json.course,\n      json.content,\n      json.is_deleted,\n      json.hint,\n      json.tags,\n      json.timestamp\n    );\n  }\n}\n\nexport default QuestionObj;\n","class ReplyObj {\n  constructor(\n    id,\n    author,\n    upvoted_by,\n    downvoted_by,\n    has_verified_upvotes,\n    timestamp,\n    content,\n    upvotes,\n    downvotes\n  ) {\n    this.id = id;\n    this.author = author;\n    this.upvoted_by = upvoted_by;\n    this.downvoted_by = downvoted_by;\n    has_verified_upvotes\n      ? (this.has_verified_upvotes = 1)\n      : (this.has_verified_upvotes = 0);\n    this.timestamp = timestamp;\n    this.content = content;\n    this.upvotes = upvotes;\n    this.downvotes = downvotes;\n\n    //Properties for List\n    let date = new Date(this.timestamp);\n    this.createdat =\n      date.getDay() +\n      \"/\" +\n      date.getMonth() +\n      \"/\" +\n      date.getFullYear() +\n      \", \" +\n      date.getHours() +\n      \":\" +\n      date.getMinutes();\n  }\n\n  static from(json) {\n    return new ReplyObj(\n      json._id,\n      json.author,\n      json.upvoted_by,\n      json.downvoted_by,\n      json.has_verified_upvotes,\n      json.timestamp,\n      json.content,\n      json.upvotes,\n      json.downvotes\n    );\n  }\n}\n\nexport default ReplyObj;\n","import ReplyObj from \"../entities/ReplyObj\";\n\nclass DiscussionObj {\n  constructor(\n    id,\n    author,\n    upvoted_by,\n    downvoted_by,\n    has_verified_upvotes,\n    timestamp,\n    content,\n    question_id,\n    replies\n  ) {\n    this.id = id;\n    this.author = author;\n    this.upvoted_by = upvoted_by;\n    this.downvoted_by = downvoted_by;\n    has_verified_upvotes\n      ? (this.has_verified_upvotes = 1)\n      : (this.has_verified_upvotes = 0);\n    this.timestamp = timestamp;\n    this.content = content;\n    this.question_id = question_id;\n    this.replies = ReplyObj.from(replies);\n  }\n\n  static from(json) {\n    return new DiscussionObj(\n      json._id,\n      json.author,\n      json.upvoted_by,\n      json.downvoted_by,\n      json.has_verified_upvotes,\n      json.timestamp,\n      json.content,\n      json.question_id,\n      json.replies\n    );\n  }\n}\n\nexport default DiscussionObj;\n","import CommentObj from \"../entities/CommentObj\";\nimport CourseObj from \"../entities/CourseObj\";\nimport QuestionObj from \"../entities/QuestionObj\";\nimport ReplyObj from \"../entities/ReplyObj\";\nimport DiscussionObj from \"../entities/DiscussionObj\";\n\nconst prefix = \"http://localhost:8000/v1\";\n\n// header API\nconst postLogout = async () => {\n  return new Promise((resolve, reject) => {\n    fetch(prefix + \"/logout\", { method: \"POST\" })\n      .then((res) => {\n        if (res.ok) {\n          resolve(null);\n        } else {\n          reject(\"Generic Error\");\n        }\n      })\n      .catch((err) => {\n        reject(\"Server Error\");\n      });\n  });\n};\n\n// user API\nconst getUser = async (userID) => {\n  return new Promise((resolve, reject) => {\n    fetch(prefix + \"/user?user_id=\" + userID)\n      .then((res) => {\n        if (res.status === 404) {\n          resolve([]);\n        } else if (res.status === 401) {\n          reject(\"Authentication Error\");\n        } else if (res.ok) {\n          res\n            .json()\n            .then((json) => resolve(json))\n            .catch((err) => reject(\"Generic Error\"));\n        }\n      })\n      .catch((err) => reject(\"Unavailable\"));\n  });\n};\n\n// Courses related APIs\nconst getMyCourses = async (userID) => {\n  return new Promise((resolve, reject) => {\n    fetch(prefix + \"/myCourses?user_id=\" + userID + \"&page=1&itemsPerPage=-1\")\n      .then((res) => {\n        if (res.status === 404) {\n          resolve([]);\n        }\n        res\n          .json()\n          .then((json) =>\n            resolve(json.map((myCourses) => CourseObj.from(myCourses)))\n          )\n          .catch((err) => reject(\"Generic Error\"));\n      })\n      .catch((err) => reject(\"Unavailable\"));\n  });\n};\n\nconst getCourses = async () => {\n  return new Promise((resolve, reject) => {\n    fetch(prefix + \"/courses\")\n      .then((res) => {\n        if (res.status === 404) {\n          resolve([]);\n        } else if (res.status === 401) {\n          reject(\"Authentication Error\");\n        } else if (res.ok) {\n          res\n            .json()\n            .then((json) =>\n              resolve(json.map((courses) => CourseObj.from(courses)))\n            )\n            .catch((err) => reject(err));\n        } else {\n          reject(\"Generic Error\");\n        }\n      })\n      .catch((err) => reject(\"Unavailable\"));\n  });\n};\n\nconst getQuestions = async (courseId) => {\n  return new Promise((resolve, reject) => {\n    fetch(\n      prefix + \"/questions?course_id=\" + courseId + \"&page=1&itemsPerPage=-1\"\n    )\n      .then((res) => {\n        if (res.status === 404) {\n          resolve([]);\n        } else if (res.status === 401) {\n          reject(\"Authentication Error\");\n        } else if (res.ok) {\n          res\n            .json()\n            .then((json) => resolve(json))\n            .catch((err) => reject(err));\n        } else {\n          reject(\"Generic Error\");\n        }\n      })\n      .catch((err) => reject(\"Unavailable\"));\n  });\n};\n\nconst getDiscussions = async (questionId) => {\n  return new Promise((resolve, reject) => {\n    fetch(\n      prefix +\n        \"/discussion?question_id=\" +\n        questionId +\n        \"&page=1&itemsPerPage=-1\"\n    )\n      .then((res) => {\n        if (res.status === 404) {\n          resolve([]);\n        } else if (res.status === 401) {\n          reject(\"Authentication Error\");\n        } else if (res.ok) {\n          res\n            .json()\n            .then((json) => resolve(json))\n            .catch((err) => reject(err));\n        } else {\n          reject(\"Generic Error\");\n        }\n      })\n      .catch((err) => reject(\"Unavailable\"));\n  });\n};\n\nconst getMyQuestions = async (user_id, page = 1, itemsPerPage = -1) => {\n  return new Promise((resolve, reject) => {\n    fetch(\n      prefix +\n        \"/myQuestions?user_id=\" +\n        user_id +\n        \"&page=\" +\n        page +\n        \"&itemsPerPage=\" +\n        itemsPerPage\n    )\n      .then((res) => {\n        if (res.status === 404) {\n          resolve([]);\n        } else if (res.status === 401) {\n          reject(\"Authentication Error\");\n        } else if (res.ok) {\n          res\n            .json()\n            .then((json) =>\n              resolve(json.map((myQuestions) => QuestionObj.from(myQuestions)))\n            )\n            .catch((err) => reject(err));\n        } else {\n          reject(\"Generic Error\");\n        }\n      })\n      .catch((err) => reject(\"Unavailable\"));\n  });\n};\n\nconst getMyComments = async (user_id, page = 1, itemsPerPage = 1) => {\n  return new Promise((resolve, reject) => {\n    fetch(\n      prefix +\n        \"/myComments?user_id=\" +\n        user_id +\n        \"&page=\" +\n        page +\n        \"&itemsPerPage=\" +\n        itemsPerPage\n    )\n      .then((res) => {\n        if (res.status === 404) {\n          resolve([]);\n        } else if (res.ok) {\n          res\n            .json()\n            .then((json) =>\n              resolve(json.map((comments) => CommentObj.from(comments)))\n            )\n            .catch((err) => reject(err));\n        } else {\n          reject(\"Generic Error\");\n        }\n      })\n      .catch((err) => reject(\"Unavailable\"));\n  });\n};\n\nconst getMyReplies = async (user_id, page = 1, itemsPerPage = -1) => {\n  return new Promise((resolve, reject) => {\n    fetch(\n      prefix +\n        \"/myReplies?user_id=\" +\n        user_id +\n        \"&page=\" +\n        page +\n        \"&itemsPerPage=\" +\n        itemsPerPage\n    )\n      .then((res) => {\n        if (res.status === 404) {\n          resolve([]);\n        } else if (res.status === 401) {\n          reject(\"Authentication Error\");\n        } else if (res.ok) {\n          res\n            .json()\n            .then((json) =>\n              resolve(json.map((myReplies) => ReplyObj.from(myReplies)))\n            )\n            .catch((err) => reject(err));\n        } else {\n          reject(\"Generic Error\");\n        }\n      })\n      .catch((err) => reject(\"Unavailable\"));\n  });\n};\n\nconst getReplies = async (comment_id, page = 1, itemsPerPage = -1) => {\n  return new Promise((resolve, reject) => {\n    fetch(\n      prefix +\n        \"/replies?comment_id=\" +\n        comment_id +\n        \"&page=\" +\n        page +\n        \"&itemsPerPage=\" +\n        itemsPerPage\n    )\n      .then((res) => {\n        if (res.status === 404) {\n          resolve([]);\n        } else if (res.status === 401) {\n          reject(\"Authentication Error\");\n        } else if (res.ok) {\n          res\n            .json()\n            .then((json) =>\n              resolve(json.replies.map((replies) => ReplyObj.from(replies)))\n            )\n            .catch((err) => reject(err));\n        } else {\n          reject(\"Generic Error\");\n        }\n      })\n      .catch((err) => reject(\"Unavailable\"));\n  });\n};\n\nconst searchCourses = async (query) => {\n  return new Promise((resolve, reject) => {\n    fetch(prefix + \"/searchCourses?query=\" + query + \"&limit=10\")\n      .then((res) => {\n        if (res.status === 404) {\n          resolve([]);\n        } else if (res.status === 401) {\n          reject(\"Authentication Error\");\n        } else if (res.status === 500) {\n          resolve([]);\n        } else if (res.ok) {\n          res\n            .json()\n            .then((json) =>\n              resolve(json.map((courses) => CourseObj.from(courses)))\n            )\n            .catch((err) => reject(\"Generic Error\"));\n        } else {\n          reject(\"Generic Error\");\n        }\n      })\n      .catch((err) => reject(\"Unavailable\"));\n  });\n};\n\nconst searchQuestion = async (query, course_id) => {\n  return new Promise((resolve, reject) => {\n    fetch(\n      prefix + \"/searchQuestions?query=\" + query + \"&course_id=\" + course_id\n    )\n      .then((res) => {\n        if (res.status === 404) {\n          resolve([]);\n        } else if (res.status === 401) {\n          reject(\"Authentication Error\");\n        } else if (res.status === 500) {\n          resolve([]);\n        } else if (res.ok) {\n          res\n            .json()\n            .then((json) =>\n              resolve(json.map((questions) => QuestionObj.from(questions)))\n            )\n            .catch((err) => reject(\"Generic Error\"));\n        } else {\n          reject(\"Generic Error\");\n        }\n      })\n      .catch((err) => reject(\"Unavailable\"));\n  });\n};\n\nconst searchDiscussion = async (query, question_id) => {\n  return new Promise((resolve, reject) => {\n    fetch(\n      prefix +\n        \"/searchDiscussion?query=\" +\n        query +\n        \"&question_id=\" +\n        question_id\n    )\n      .then((res) => {\n        if (res.status === 404) {\n          resolve([]);\n        } else if (res.status === 401) {\n          reject(\"Authentication Error\");\n        } else if (res.status === 500) {\n          resolve([]);\n        } else if (res.ok) {\n          res\n            .json()\n            .then((json) =>\n              resolve(\n                json.map((discussions) => DiscussionObj.from(discussions))\n              )\n            )\n            .catch((err) => reject(\"Generic Error\"));\n        } else {\n          reject(\"Generic Error\");\n        }\n      })\n      .catch((err) => reject(\"Unavailable\"));\n  });\n};\n\nconst getMyCourseNewQuestions = (userId) => {\n  return new Promise((resolve, reject) => {\n    fetch(\n      prefix +\n        \"/myCoursesNewQuestions?user_id=\" +\n        userId +\n        \"&itemsPerPage=50&page=1\"\n    )\n      ?.then((res) => {\n        if (res.status === 404) {\n          resolve([]);\n        } else if (res.status === 401) {\n          reject(\"Authentication Error\");\n        } else if (res.ok) {\n          res\n            ?.json()\n            ?.then((json) => resolve(json))\n            .catch((err) => reject(err));\n        } else {\n          reject(\"Generic Error\");\n        }\n      })\n      .catch((err) => reject(\"Unavailable\"));\n  });\n};\n\nconst getMyBookmarkedQuestions = (userId) => {\n  return new Promise((resolve, reject) => {\n    fetch(\n      prefix +\n        \"/myBookmarkedQuestions?user_id=\" +\n        userId +\n        \"&page=1&itemsPerPage=-1\"\n    )\n      ?.then((res) => {\n        if (res.status === 404) {\n          resolve([]);\n        } else if (res.status === 401) {\n          reject(\"Authentication Error\");\n        } else if (res.ok) {\n          res\n            ?.json()\n            ?.then((json) => resolve(json))\n            .catch((err) => reject(err));\n        } else {\n          reject(\"Generic Error\");\n        }\n      })\n      .catch((err) => reject(\"Unavailable\"));\n  });\n};\n\n// simulation API\nconst getMySimulationResult = (userId) => {\n  return new Promise((resolve, reject) => {\n    fetch(\n      prefix +\n        \"/myExamSimulations?user_id=\" +\n        userId +\n        \"&page=1&itemsPerPage=-1\"\n    )\n      .then((res) => {\n        if (res.status === 404) {\n          resolve([]);\n        } else if (res.status === 401) {\n          reject(\"Authentication Error\");\n        } else if (res.ok) {\n          res\n            ?.json()\n            ?.then((json) => resolve(json))\n            .catch((err) => reject(err));\n        } else {\n          reject(\"Generic Error\");\n        }\n      })\n      .catch((err) => {\n        reject();\n      });\n  });\n};\n\nconst API = {\n  getUser,\n  getCourses,\n  getMyCourses,\n  getQuestions,\n  getDiscussions,\n  getMyQuestions,\n  getMyComments,\n  getReplies,\n  getMyReplies,\n  searchCourses,\n  searchQuestion,\n  searchDiscussion,\n  getMyCourseNewQuestions,\n  getMyBookmarkedQuestions,\n  getMySimulationResult,\n};\nexport default API;\n","import React, { useEffect, useState, createContext, useContext } from \"react\";\nimport API from \"./api/API\";\n\nexport const GlobalStateContext = createContext([{}, function () {}]);\n\nconst GlobalStateProvider = ({ children }) => {\n  const [userID, setUserID] = useState(\"s313131\");\n\n  const [userInfo, setUserInfo] = useState({});\n\n  const [myCoursesNewQuestions, setMyCoursesNewQuestions] = useState([]);\n\n  const [myBookmarkedQuestions, setMyBookmarkedQuestions] = useState([]);\n\n  const [mySimulationResult, setMySimulationResult] = useState([]);\n\n  const [relatedCourses, setRelatedCourses] = useState([]);\n\n  const [allCourses, setAllCourses] = useState([]);\n\n  const [userCourses, setUserCourses] = useState([]);\n\n  console.log(myCoursesNewQuestions);\n\n  useEffect(() => {\n    API.getCourses().then((courses) => setAllCourses(courses));\n    API.getMyCourseNewQuestions(userID).then((questions) => {\n      setMyCoursesNewQuestions(questions.map((x) => [x.questiontext.text]));\n    });\n    API.getMyBookmarkedQuestions(userID).then((questions) => {\n      setMyBookmarkedQuestions(questions[\"myBookmarkedQuestions\"]);\n    });\n    API.getUser(userID).then((info) => {\n      setUserInfo(info);\n      setRelatedCourses(info[\"related_courses\"]);\n    });\n    API.getMySimulationResult(userID).then((result) => {\n      setMySimulationResult(result);\n    });\n  }, []);\n\n  useEffect(() => {\n    const Courses = allCourses?.filter((course) => {\n      for (let i = 0; i < relatedCourses.length; i++) {\n        if (course[\"_id\"] === relatedCourses[i]) {\n          return course;\n        }\n      }\n    });\n    setUserCourses(Courses);\n  }, [allCourses, relatedCourses]);\n\n  return (\n    <GlobalStateContext.Provider\n      value={{\n        userInfo,\n        setUserInfo,\n        myCoursesNewQuestions,\n        setMyCoursesNewQuestions,\n        myBookmarkedQuestions,\n        setMyBookmarkedQuestions,\n        mySimulationResult,\n        setMySimulationResult,\n        userCourses,\n        setUserCourses,\n        allCourses,\n        setAllCourses,\n      }}\n    >\n      {children}\n    </GlobalStateContext.Provider>\n  );\n};\n\nexport default GlobalStateProvider;\n","import {\n  Accordion,\n  Col,\n  Container,\n  Row,\n  Table,\n  Form,\n  FloatingLabel,\n  Button,\n  Image,\n  Stack,\n  Card,\n} from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { ListEntry, MyPagination, SearchBar } from \"./\";\n// import \"./List.css\";\nimport \"./stylesheet/List.css\"; // scss file access\nimport { useContext, useEffect, useState } from \"react\";\nimport { GlobalStateContext } from \"../GlobalStateProvider\";\n\nfunction HeaderColspan(scope) {\n  switch (scope) {\n    case \"courses\":\n      return \"4\";\n    case \"questions\":\n      return \"4\";\n    default:\n      return \"10\";\n  }\n}\n\nfunction ListDefault({ props }) {\n  return (\n    <>\n      {props.rounded ? (\n        <div\n          className={\n            \"default-table-\" + props.title.toLowerCase().replace(/\\s/g, \"-\")\n          }\n        >\n          <table className=\"list roundedList\">\n            <thead>\n              <tr>\n                <th className=\"listTitle\" colSpan={HeaderColspan(props.scope)}>\n                  {props.title}\n                </th>\n              </tr>\n            </thead>\n            <tbody className=\"list-body\">\n              {props.rows.map((r, i) => {\n                return (\n                  <ListEntry\n                    key={i}\n                    row={r}\n                    scope={props.scope}\n                    dotted={props.dotted}\n                  />\n                );\n              })}\n            </tbody>\n          </table>\n        </div>\n      ) : (\n        <div\n          className={\n            \"default-table-\" + props.title.toLowerCase().replace(/\\s/g, \"-\")\n          }\n        >\n          <Table striped borderless hover className=\"list\">\n            <thead className=\"listTitle\">\n              <tr>\n                <th colSpan={HeaderColspan(props.scope)}>{props.title}</th>\n              </tr>\n            </thead>\n            <tbody>\n              {props.rows.map((r, i) => (\n                <ListEntry key={i} scope={props.scope} row={r} />\n              ))}\n            </tbody>\n          </Table>\n        </div>\n      )}\n\n      {/*/!*pagination for list longer that 10 item*!/*/}\n      {/*{*/}\n      {/*  entryCount > 10 ? <MyPagination*/}\n      {/*  />: <></>*/}\n      {/*}*/}\n    </>\n  );\n}\n\nfunction ListQuestions({ props }) {\n  return (\n    <>\n      <h3 className=\"listQuestionsTitle\">{props.title}</h3>\n      <SearchBar apiCall={{ scope: \"questions\" }} />\n      {props.rows.map((r, i) => (\n        <ListEntry key={i} scope={props.scope} row={r} />\n      ))}\n    </>\n  );\n}\n\nfunction ListBookmarkQuestions({ props }) {\n  return (\n    <>\n      <h3 className=\"listQuestionsTitle\">{props.title}</h3>\n      <SearchBar apiCall={{ scope: \"questions\" }} />\n      {props.rows.map((r, i) => (\n        <ListEntry key={i} scope={props.scope} row={r} />\n      ))}\n    </>\n  );\n}\n\nfunction ListAnswers({ props }) {\n  return (\n    <Container className=\"list listAnswers\">\n      <div>\n        {props.rows.map((r, i) => (\n          <ListEntry key={i} scope={props.scope} row={r} />\n        ))}\n      </div>\n    </Container>\n  );\n}\n\nfunction ListMyComments({ props }) {\n  return (\n    <>\n      <h3 className=\"listMyCommentsTitle\">{props.title}</h3>\n      <hr />\n      {props.rows.map((r) => (\n        <ListEntry scope={props.scope} row={r} />\n      ))}\n    </>\n  );\n}\n\nfunction ListReplies({ props }) {\n  return (\n    <>\n      <h4>{props.title}</h4>\n      <hr />\n      {props.rows.map((r) => (\n        <ListEntry scope={props.scope} row={r} />\n      ))}\n    </>\n  );\n}\n\nfunction ListSuggestion({ props }) {\n  return (\n    <>\n      <Container>\n        <h3 className=\"list-suggestion-title\">{props.title}</h3>\n        <div className=\"listSuggestion-questions\">\n          <Stack gap={3}>\n            {props.rows.map((r, i) => (\n              <ListEntry key={i} scope={props.scope} row={r} />\n            ))}\n          </Stack>\n        </div>\n      </Container>\n    </>\n  );\n}\n\nfunction ListSimulationResult({ props }) {\n  const [areAllAccordionItemsOpen, setAreAllAccordionItemsOpen] =\n    useState(false);\n  const [activeKeys, setActiveKeys] = useState([]);\n\n  // when the boolean changes, either add all available activeKeys or remove them all\n  useEffect(() => {\n    if (areAllAccordionItemsOpen) {\n      setActiveKeys(props.rows.map((row, index) => index));\n    } else {\n      setActiveKeys([]);\n    }\n  }, [areAllAccordionItemsOpen, props.rows]);\n\n  // handle cases when user manually opens / closes all accordion items\n  useEffect(() => {\n    if (activeKeys.length === 0) {\n      setAreAllAccordionItemsOpen(false);\n    }\n    if (activeKeys.length === props.rows.length) {\n      setAreAllAccordionItemsOpen(true);\n    }\n  }, [activeKeys.length, props.rows.length]);\n\n  const updateActiveKeys = (eventKeys) => {\n    setActiveKeys(eventKeys);\n  };\n\n  return (\n    <>\n      <Container className=\"list-simulation-result\">\n        <Card className=\"accordion-header-card\">\n          <Card.Header>\n            <Row>\n              <Col>\n                <h4 className=\"listSimulationResultTitle\">Your Answers</h4>\n              </Col>\n              <Col className=\"col-md-2\">\n                <Button\n                  className=\"btn-outline-success-simulation-result\"\n                  variant=\"outline-success\"\n                  value=\"Show/Close\"\n                  onClick={() => {\n                    setAreAllAccordionItemsOpen(!areAllAccordionItemsOpen);\n                  }}\n                >\n                  {areAllAccordionItemsOpen ? \"Close All\" : \"Show All\"}\n                </Button>\n              </Col>\n            </Row>\n          </Card.Header>\n        </Card>\n        <Row>\n          <Accordion\n            className=\"listSimulationResults\"\n            defaultActiveKey={[]}\n            activeKey={activeKeys}\n            onSelect={updateActiveKeys}\n            alwaysOpen\n          >\n            {props.rows.map((row, index) => (\n              <ListEntry\n                key={index}\n                scope={props.scope}\n                row={row}\n                accordionKey={index}\n              />\n            ))}\n          </Accordion>\n        </Row>\n        <Card className=\"accordion-footer-card\" />\n      </Container>\n    </>\n  );\n}\n\nfunction ListSelection({ props }) {\n  return (\n    <FloatingLabel label={props.title}>\n      <Form.Select aria-label=\"Selection\" className=\"my-4\">\n        {props.rows.map((r, i) => (\n          <ListEntry scope={props.scope} row={r} key={i} />\n        ))}\n      </Form.Select>\n    </FloatingLabel>\n  );\n}\n\nfunction List(props) {\n  if (props.scope === \"questions\") return <ListQuestions props={props} />;\n  if (props.scope === \"bookmarks\")\n    return <ListBookmarkQuestions props={props} />;\n  if (props.scope === \"answers\") return <ListAnswers props={props} />;\n  if (props.scope === \"myComments\") return <ListMyComments props={props} />;\n  if (props.scope === \"replies\") return <ListReplies props={props} />;\n  if (props.scope === \"suggestion\") return <ListSuggestion props={props} />;\n  if (props.scope === \"simulationResult\")\n    return <ListSimulationResult props={props} />;\n  if (props.scope === \"selection\") return <ListSelection props={props} />;\n  return <ListDefault props={props} />;\n}\n\nexport default List;\n","import React from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport remarkGfm from \"remark-gfm\";\nimport remarkMath from \"remark-math\";\nimport rehypeKatex from \"rehype-katex\";\nimport rehypeHighlight from \"rehype-highlight\";\nimport rehypeRaw from \"rehype-raw\";\n\nimport \"./MarkdownPreview.css\";\n\nconst MarkdownPreview = React.memo(({ markdown, format }) => {\n  return (\n    <ReactMarkdown\n      className=\"markdown-preview\"\n      remarkPlugins={[remarkGfm, remarkMath]}\n      rehypePlugins={[rehypeKatex, rehypeHighlight, rehypeRaw]}\n    >\n      {markdown}\n    </ReactMarkdown>\n  );\n});\n\nexport default MarkdownPreview;\n","import React, { useState } from \"react\";\nimport MarkdownPreview from \"./MarkdownPreview\";\nimport \"./stylesheet/QuestionPreview.css\";\nimport remarkGfm from \"remark-gfm\";\nimport remarkMath from \"remark-math\";\nimport rehypeKatex from \"rehype-katex\";\nimport rehypeHighlight from \"rehype-highlight\";\n\nimport { Card, Button } from \"react-bootstrap\";\n\nimport \"katex/dist/katex.min.css\";\nimport \"highlight.js/styles/github.css\";\n\nfunction QuestionPreview({ question, showhints }) {\n  const [showAdvice, setShowAdvice] = useState(showhints || false);\n\n  return (\n    <Card>\n      <Card.Header>\n        <div className=\"d-flex justify-content-between\">\n          <div className=\"course-name\">{`${question} ${question.name}`}</div>\n          <div className=\"p2\">\n            <small className=\"question-create-date\">\n              {\n                \"Posted on \" + question.timestamp\n                // question.date.toLocaleDateString(\"it-IT\", {\n                //   year: \"numeric\",\n                //   month: \"numeric\",\n                //   day: \"numeric\",\n                // })\n              }\n            </small>\n            <br />\n            <small className=\"question-source\">\n              by {question.owner} &nbsp;\n            </small>\n          </div>\n        </div>\n      </Card.Header>\n      <Card.Body>\n        <Card.Title>{question.title}</Card.Title>\n        <MarkdownPreview markdown={question.content} />\n        {question.hint && (\n          <Button\n            className=\"show-advice-button\"\n            onClick={() => {\n              setShowAdvice(!showAdvice);\n            }}\n          >\n            {showAdvice ? \"Hide advice\" : \"Show advice\"}\n          </Button>\n        )}\n        {showAdvice && (\n          <h6 className=\"question-advice-shown\">{question.hint}</h6>\n        )}\n      </Card.Body>\n    </Card>\n  );\n}\n\nexport default QuestionPreview;\n","import { useState } from \"react\";\nimport { Button, Form } from \"react-bootstrap\";\nimport { List, TextInput } from \"../base\";\nimport \"./AddQuestion.css\";\nimport { useEffect /* , useEffect */ } from \"react\";\nimport API from \"../api/API\";\n\nfunction AddQuestion(props) {\n  const [courses, setCourses] = useState([]);\n  useEffect(() => {\n    API.getMyCourses(\"s313131\")\n      .then((myCourses) => setCourses(GenerateOptions(myCourses)))\n      .catch((err) => console.log(err));\n  }, []);\n\n  return (\n    <>\n      <Form.Label size=\"lg\">Choose moodle XML file</Form.Label>\n      <Form.Control type=\"file\" size=\"lg\" />\n      <List scope=\"selection\" title=\"Select course\" rows={courses} />\n      <Form.Check type=\"checkbox\" label=\"This is an exam simulation\" />\n      {/* <TextInput/> */}\n      <Button type=\"submit\" className=\"submit-button my-4\" onClick={() => {}}>\n        Upload\n      </Button>\n    </>\n  );\n}\n\nfunction GenerateOptions(results) {\n  var options = [];\n  results.forEach((result) => {\n    options.push(result.name + \" - \" + result._id);\n  });\n  return options;\n}\n\nexport default AddQuestion;\n","import { useEffect, useState } from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { QuestionPreview, Discussion, TextInput } from \"../base\";\nimport \"./stylesheet/Answer.css\";\nimport API from \"../api/API\";\nimport { useLocation } from \"react-router-dom\";\n\nconst fakeQuestion = {\n  course_code: \"01UROLM\",\n  course_name: \"Mathematical methods for Computer Science\",\n  title: \"Theory of distributions\",\n  author: \"Sahircan Sürmeli\",\n  tags: [\"distributions\", \"functionals\", \"test functions\"],\n  text: \"Find all distributions $T \\\\in D^\\\\prime$ such that $T^\\\\prime = \\\\delta_0 + \\\\delta_2 - 2\\\\delta^\\\\prime_1$.\",\n  date: new Date(\"April 23, 2022\"),\n  advice: \"You have to integrate something.\",\n};\n\nfunction Answers(props) {\n  const locationState = useLocation().state;\n\n  // get the discussions of the question\n  useEffect(() => {\n    API.getDiscussions(locationState.questionId).then((discussions) =>\n      setDiscussions(discussions)\n    );\n  }, []);\n\n  // get the question => pass to <QuestionPreview>\n  useEffect(() => {\n    API.getQuestions(locationState.courseId).then((questions) =>\n      setQuestion(\n        questions.filter(\n          (question) => question[\"_id\"] === locationState.questionId\n        )[0]\n      )\n    );\n  }, []);\n\n  const [question, setQuestion] = useState({});\n  const [discussions, setDiscussions] = useState([]);\n\n  console.log(discussions);\n\n  return (\n    <Container className=\"answer-container\">\n      <Row lg={12} className=\"header\">\n        <Col>\n          <QuestionPreview question={question} showhints={props.showhints} />\n        </Col>\n      </Row>\n\n      <Row className=\"text-input\">\n        <Col>\n          <TextInput\n            childProps={{\n              textArea: {\n                placeholder: \"Leave a comment\",\n              },\n            }}\n          />\n        </Col>\n      </Row>\n\n      <Discussion\n        showdiscussion={props.showdiscussion}\n        discussions={discussions}\n      />\n    </Container>\n  );\n}\n\nexport default Answers;\n","import List from \"./List\";\nimport { ListEntry } from \"./index\";\nimport { Card, Container, Row } from \"react-bootstrap\";\n// import \"./Suggestion.css\";\nimport \"./stylesheet/Suggestion.css\";\n\nfunction Suggestion(props) {\n  return (\n    <Container className=\"suggestion-container\" fluid>\n      <Card className=\"suggestion-card\">\n        <Card.Body>\n          <List scope={props.scope} title={props.title} rows={props.rows} />\n        </Card.Body>\n      </Card>\n    </Container>\n  );\n}\n\nexport default Suggestion;\n","import { Row, Container } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { useContext, useEffect, useState /* , useEffect */ } from \"react\";\n\nimport { Recent, List, SearchBar, MyPagination } from \"../base/\";\nimport \"./stylesheet/CoursesList.css\";\nimport Suggestion from \"../base/Suggestion\";\nimport API from \"../api/API\";\nimport CourseObj from \"../entities/CourseObj\";\nimport { GlobalStateContext } from \"../GlobalStateProvider\";\n\nfunction CoursesList() {\n  /** Mock questions **/\n\n  const fakeQuestions = [\n    {\n      id: 1,\n      question: \"What is a vector?\",\n      author: \"Donato\",\n      createdat: \"15:20 12/01/2021\",\n      tags: [\"vectors\"],\n      excerpt: \"Cras justo odio...\",\n    },\n    {\n      id: 2,\n      question: \"Who is Maxwell?\",\n      author: \"Jim\",\n      createdat: \"17:30 13/02/2021\",\n      tags: [\"physics\"],\n      excerpt: \"Cras justo odio...\",\n    },\n    {\n      id: 3,\n      question: \"How many meters per second?\",\n      author: \"Derek\",\n      createdat: \"19:40 14/03/2021\",\n      tags: [\"physics\", \"kinematic\"],\n      excerpt: \"Cras justo odio...\",\n    },\n  ];\n\n  const { userCourses, allCourses } = useContext(GlobalStateContext);\n\n  useEffect(() => {\n    setCourses(allCourses);\n    setMyCourses(userCourses);\n  }, []);\n  // useEffect(() => {\n  //   API.getCourses().then((courses) => setCourses(courses));\n  // }, []);\n\n  const [courses, setCourses] = useState(allCourses);\n  const [suggestions, setSuggestions] = useState(fakeQuestions /*[]*/);\n  const [myCourses, setMyCourses] = useState(userCourses);\n  const suggestionType = [\"Latest\", \"Hottest\"];\n  const coursesType = [\"My Courses\", \"All Courses\"];\n\n  /**Courses and questions related**/\n  //*\n  // courses\n  useEffect(() => {\n    API.getCourses()\n      .then((courses) => setCourses(courses))\n      .catch((err) => console.log(err));\n  }, []);\n\n  // myCourses\n  // useEffect(() => {\n  // \tAPI.getMyCourses()\n  // \t\t.then(myCourses => setMyCourses(myCourses))\n  // \t\t.catch(err => console.log(err));\n  // }, []);\n  //*/\n\n  // useEffect(() => {\n  //     const getCourses = async () => {\n  //         const courses = await API.getAllCourses();\n  //         setCourses(courses);\n  //     }\n  //     getCourses();\n  // },[]);\n\n  return (\n    <Container>\n      <Row lg={12} className=\"py-0 header\">\n        <h3 className=\"courses-title\">Courses</h3>\n      </Row>\n      <Row>\n        <SearchBar apiCall={{ scope: \"courses\" }}></SearchBar>\n      </Row>\n      <Row className=\"courses-body\">\n        <Link\n          className=\"list-attributes\"\n          to={{\n            pathname:\n              \"/listfullpage/\" + \"My Courses\".replace(/\\s/g, \"\").toLowerCase(),\n          }}\n          state={{ scope: \"courses\", title: \"My Courses\", rows: myCourses }}\n        >\n          <List scope=\"courses\" title={\"My Courses\"} rows={myCourses} rounded />\n        </Link>\n        <Link\n          className=\"list-attributes\"\n          to={{\n            pathname:\n              \"/listfullpage/\" + \"All Courses\".replace(/\\s/g, \"\").toLowerCase(),\n          }}\n          state={{ scope: \"courses\", title: \"All Courses\", rows: courses }}\n        >\n          <List scope=\"courses\" title={\"All Courses\"} rows={courses} rounded />\n        </Link>\n      </Row>\n    </Container>\n  );\n}\n\nexport default CoursesList;\n","import parse from \"html-react-parser\";\nimport { Button, Container, Row, Col, Card, Form } from \"react-bootstrap\";\nimport \"./Exam.css\";\n\nconst MultipleChoice = ({ index, questiontext, answer, ...rest }) => {\n  console.log({ answer });\n  return (\n    <Form className=\"multipleChoice\">\n      <Form.Label>\n        {index})\n        {questiontext\n          ? questiontext[\"@format\"] === \"html\"\n            ? parse(questiontext.text)\n            : `${index}) ${questiontext.text}`\n          : null}\n      </Form.Label>\n      {answer &&\n        answer.map(\n          (ans, index) =>\n            ans && (\n              <div key={`inline-${ans}`} className=\"mb-3\">\n                <Form.Check\n                  inline\n                  label={ans[\"@format\"] === \"html\" ? parse(ans.text) : ans.text}\n                  name=\"group1\"\n                  type=\"checkbox\"\n                  id={`inline-${index}-1`}\n                />\n              </div>\n            )\n        )}\n    </Form>\n  );\n};\n\nconst Exam = ({ question }) => {\n  return (\n    <Container className=\"container\">\n      <Card body>\n        <Row lg={12} className=\"header\">\n          <Col>\n            <h3>Exam</h3>\n          </Col>\n        </Row>\n        {/* {question.map(\n\t\t\t\t\t(item, index) =>\n\t\t\t\t\t\t(item[\"@type\"] = \"multichoice\" && (\n\t\t\t\t\t\t\t<Row className='mt-10'>\n\t\t\t\t\t\t\t\t<Col lg='12'>\n\t\t\t\t\t\t\t\t\t<MultipleChoice {...{ index, ...item }} />\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t))\n\t\t\t\t)} */}\n      </Card>\n    </Container>\n  );\n};\n\nexport default Exam;\n","import { Row, Col, Card } from \"react-bootstrap\";\nimport { useContext, useEffect, useState } from \"react\";\nimport \"./stylesheet/Home.css\";\nimport { ListGroup, SearchBar } from \"../base/\";\nimport API from \"../api/API\";\nimport isLabelEnd from \"katex/dist/katex.mjs\";\nimport { GlobalStateContext } from \"../GlobalStateProvider\";\n\nfunction Home() {\n  const { myCoursesNewQuestions, MyReplies, MyQuestions, MyAnswers } =\n    useContext(GlobalStateContext);\n\n  const homePageList = [\n    //!! typeof(rows) = Array() !!//\n    {\n      scope: \"default\",\n      title: \"New questions in courses enrolled\",\n      rows: myCoursesNewQuestions,\n    },\n    {\n      scope: \"default\",\n      title: \"Replies\",\n      rows: [\n        [\"Cras justo odio\"],\n        [\"Dapibus ac facilisis in\"],\n        [\"Morbi leo risus\"],\n        [\"Porta ac consectetur ac\"],\n        [\"Vestibulum at eros\"],\n      ],\n    },\n    {\n      scope: \"default\",\n      title: \"My questions\",\n      rows: [\n        [\"Cras justkjkkkkko odio\"],\n        [\"Dapibus ac facilisis in\"],\n        [\"Morbi leo risus\"],\n        [\"Porta ac consectetur ac\"],\n        [\"Vestibulum at eros\"],\n      ],\n    },\n    {\n      scope: \"default\",\n      title: \"My answers\",\n      rows: [\n        [\"Cras justo odio\"],\n        [\"Dapibus ac facilisis in\"],\n        [\"Morbi leo risus\"],\n        [\"Porta ac consectetur ac\"],\n        [\"Vestibulum at eros\"],\n      ],\n    },\n  ];\n\n  const [homeLists, setHomeLists] = useState(homePageList);\n\n  console.log(myCoursesNewQuestions);\n\n  return (\n    <>\n      <Row lg={12} className=\"py-0 header\">\n        <Col>\n          <h3>Hi, Name Surname!</h3>\n        </Col>\n      </Row>\n      <div className=\"home-page-table\">\n        {<ListGroup lists={homeLists} cols={2} tiled rounded dotted />}\n      </div>\n    </>\n  );\n}\n\nexport default Home;\n","import { useState } from \"react\";\nimport { Modal, Form, Button, Alert } from \"react-bootstrap\";\n\nfunction LoginForm(props) {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  function checkPassword(password) {\n    if (password.length >= 6) return true;\n    return false;\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    setErrorMessage(\"\");\n    const credentials = { username, password };\n    let valid = true;\n    if (username === \"\" || !checkPassword(password)) valid = false;\n    if (valid) {\n      props.login(credentials);\n    } else {\n      setErrorMessage(\"Errors in the form\");\n    }\n  };\n\n  return (\n    <Modal.Dialog>\n      <Modal.Header>\n        <Modal.Title>Login</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        {errorMessage ? <Alert variant=\"danger\">{errorMessage}</Alert> : null}\n        <Form.Group controlId=\"username\">\n          <Form.Label>Email</Form.Label>\n          <Form.Control\n            type=\"email\"\n            value={username}\n            onChange={(ev) => setUsername(ev.target.value)}\n          />\n        </Form.Group>\n        <Form.Group controlId=\"password\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            value={password}\n            onChange={(ev) => setPassword(ev.target.value)}\n          />\n        </Form.Group>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button onClick={handleSubmit}>Login</Button>\n      </Modal.Footer>\n    </Modal.Dialog>\n  );\n}\n\nexport default LoginForm;\n","import {\n  Button,\n  Container,\n  Row,\n  Col,\n  Card,\n  Image,\n  Stack,\n} from \"react-bootstrap\";\n\nimport { useEffect, useState } from \"react\";\n// import \"./Questions.css\";\nimport \"./stylesheet/Questions.css\";\nimport { List, MyPagination, Recent, SearchBar, Suggestion } from \"../base/\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport API from \"../api/API\";\n\nconst MyQuestions = () => {\n  const [myQuestions, setMyQuestions] = useState([]);\n  const [suggestions, setSuggestions] = useState([]);\n  const suggestionType = [\"Latest\", \"Hottest\"];\n\n  useEffect(() => {\n    API.getMyQuestions(\"d29590\", 1, 5).then((_myQuestions) => {\n      setMyQuestions(_myQuestions);\n      setSuggestions(_myQuestions);\n      console.log(_myQuestions);\n    });\n  }, []);\n\n  // hook for responsive react\n  const useMediaQuery = (query) => {\n    const [matches, setMatches] = useState(false);\n\n    useEffect(() => {\n      const media = window.matchMedia(query);\n      if (media.matches !== matches) {\n        setMatches(media.matches);\n      }\n      const listener = () => {\n        setMatches(media.matches);\n      };\n      window.addEventListener(\"resize\", listener);\n      return () => window.removeEventListener(\"resize\", listener);\n    }, [matches, query]);\n\n    return matches;\n  };\n\n  // TODO: also take a look at Bootstrap class infixes to detect the current breakpoint\n  // to see which approach is better -- https://getbootstrap.com/docs/5.1/layout/breakpoints/\n  const isDesktop = useMediaQuery(\"(min-width: 960px)\");\n\n  const locationState = useLocation().state;\n\n  return (\n    <>\n      <Container>\n        <Stack gap={4}>\n          {isDesktop ? (\n            <Row key={isDesktop}>\n              <Col>\n                <Container className=\"container\">\n                  <Row lg={12} className=\"header\">\n                    <Col>\n                      <div className=\"right-button\">\n                        <Button\n                          className=\"add-question-button\"\n                          onClick={() => {}}\n                        >\n                          {/*<Image*/}\n                          {/*    className=\"add-icon\"*/}\n                          {/*    src={*/}\n                          {/*      process.env.PUBLIC_URL + \"/icons/ADD_WHITE.svg\"*/}\n                          {/*    }*/}\n                          {/*    width=\"13px\"*/}\n                          {/*/>*/}\n                          {\" Enroll in course\"}\n                        </Button>\n                      </div>\n                      <List\n                        scope=\"questions\"\n                        //   title={locationState.title}\n                        title=\"My questions\"\n                        rows={myQuestions}\n                      />\n                      <MyPagination />\n                    </Col>\n                    <Col className=\"d-sm-inline-block col-md-4\">\n                      <Stack gap={4}>\n                        {suggestionType.map((type, i) => {\n                          return (\n                            <Row key={i}>\n                              <Suggestion\n                                scope={\"suggestion\"}\n                                title={type + \" Questions\"}\n                                rows={suggestions}\n                              />\n                            </Row>\n                          );\n                        })}\n                      </Stack>\n                    </Col>\n                  </Row>\n                </Container>\n              </Col>\n            </Row>\n          ) : (\n            // mobile configuration\n            <>\n              <Row>\n                <Container className=\"container\">\n                  <Row lg={12} className=\"header\">\n                    <Col>\n                      <div className=\"right-button\">\n                        <Button\n                          className=\"add-question-button\"\n                          onClick={() => {}}\n                        >\n                          {/*<Image*/}\n                          {/*    className=\"add-icon\"*/}\n                          {/*    src={*/}\n                          {/*      process.env.PUBLIC_URL + \"/icons/ADD_WHITE.svg\"*/}\n                          {/*    }*/}\n                          {/*    width=\"13px\"*/}\n                          {/*/>*/}\n                          {\" Enroll in course\"}\n                        </Button>\n                      </div>\n                      <List\n                        scope=\"questions\"\n                        //   title={locationState.title}\n                        title=\"My questions\"\n                        rows={myQuestions}\n                      />\n                    </Col>\n\n                    <Col className=\"pagination\" lg=\"12\" sm=\"12\" md=\"12\">\n                      <MyPagination />\n                    </Col>\n                  </Row>\n                </Container>\n              </Row>\n              <Row>\n                <Stack gap={4}>\n                  {suggestionType.map((type, i) => {\n                    return (\n                      <Col key={i}>\n                        <Suggestion\n                          scope={\"suggestion\"}\n                          title={type + \" Questions\"}\n                          rows={suggestions}\n                        />\n                      </Col>\n                    );\n                  })}\n                </Stack>\n              </Row>\n            </>\n          )}\n        </Stack>\n      </Container>\n    </>\n  );\n};\n\nexport default MyQuestions;\n","import {\n  Button,\n  Container,\n  Row,\n  Col,\n  Card,\n  Image,\n  Stack,\n} from \"react-bootstrap\";\n\nimport { useEffect, useState } from \"react\";\n// import \"./Questions.css\";\nimport \"./stylesheet/Questions.css\";\nimport { List, MyPagination, Recent, SearchBar, Suggestion } from \"../base\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport API from \"../api/API\";\n\nconst MyComments = () => {\n  const [myComments, setMyComments] = useState([]);\n  const [suggestions, setSuggestions] = useState([]);\n  const suggestionType = [\"Latest\", \"Hottest\"];\n\n  useEffect(() => {\n    API.getMyComments(\"d29590\", 1, 5).then((_myComments) => {\n      setMyComments(_myComments);\n      setSuggestions(_myComments);\n      console.log(_myComments);\n    });\n  }, []);\n\n  // hook for responsive react\n  const useMediaQuery = (query) => {\n    const [matches, setMatches] = useState(false);\n\n    useEffect(() => {\n      const media = window.matchMedia(query);\n      if (media.matches !== matches) {\n        setMatches(media.matches);\n      }\n      const listener = () => {\n        setMatches(media.matches);\n      };\n      window.addEventListener(\"resize\", listener);\n      return () => window.removeEventListener(\"resize\", listener);\n    }, [matches, query]);\n\n    return matches;\n  };\n\n  // TODO: also take a look at Bootstrap class infixes to detect the current breakpoint\n  // to see which approach is better -- https://getbootstrap.com/docs/5.1/layout/breakpoints/\n  const isDesktop = useMediaQuery(\"(min-width: 960px)\");\n\n  const locationState = useLocation().state;\n\n  return (\n    <>\n      <Container>\n        <Stack gap={4}>\n          {isDesktop ? (\n            <Row key={isDesktop}>\n              <Col>\n                <Container className=\"container\">\n                  <Row lg={12} className=\"header\">\n                    <Col>\n                      <div className=\"right-button\">\n                        <Button\n                          className=\"add-question-button\"\n                          onClick={() => {}}\n                        >\n                          {/*<Image*/}\n                          {/*    className=\"add-icon\"*/}\n                          {/*    src={*/}\n                          {/*      process.env.PUBLIC_URL + \"/icons/ADD_WHITE.svg\"*/}\n                          {/*    }*/}\n                          {/*    width=\"13px\"*/}\n                          {/*/>*/}\n                          {\" Enroll in course\"}\n                        </Button>\n                      </div>\n                      <List\n                        scope=\"myComments\"\n                        // title={locationState.title}\n                        title=\"My comments\"\n                        rows={myComments}\n                      />\n                      <MyPagination />\n                    </Col>\n                    <Col className=\"d-sm-inline-block col-md-4\">\n                      <Stack gap={4}>\n                        {suggestionType.map((type, i) => {\n                          return (\n                            <Row key={i}>\n                              <Suggestion\n                                scope={\"suggestion\"}\n                                title={type + \" Comments\"}\n                                rows={suggestions}\n                              />\n                            </Row>\n                          );\n                        })}\n                      </Stack>\n                    </Col>\n                  </Row>\n                </Container>\n              </Col>\n            </Row>\n          ) : (\n            // mobile configuration\n            <>\n              <Row>\n                <Container className=\"container\">\n                  <Row lg={12} className=\"header\">\n                    <Col>\n                      <div className=\"right-button\">\n                        <Button\n                          className=\"add-question-button\"\n                          onClick={() => {}}\n                        >\n                          {/*<Image*/}\n                          {/*    className=\"add-icon\"*/}\n                          {/*    src={*/}\n                          {/*      process.env.PUBLIC_URL + \"/icons/ADD_WHITE.svg\"*/}\n                          {/*    }*/}\n                          {/*    width=\"13px\"*/}\n                          {/*/>*/}\n                          {\" Enroll in course\"}\n                        </Button>\n                      </div>\n                      <List\n                        scope=\"myComments\"\n                        //   title={locationState.title}\n                        title=\"My comments\"\n                        rows={myComments}\n                      />\n                    </Col>\n\n                    <Col className=\"pagination\" lg=\"12\" sm=\"12\" md=\"12\">\n                      <MyPagination />\n                    </Col>\n                  </Row>\n                </Container>\n              </Row>\n              <Row>\n                <Stack gap={4}>\n                  {suggestionType.map((type, i) => {\n                    return (\n                      <Col key={i}>\n                        <Suggestion\n                          scope={\"suggestion\"}\n                          title={type + \" Comments\"}\n                          rows={suggestions}\n                        />\n                      </Col>\n                    );\n                  })}\n                </Stack>\n              </Row>\n            </>\n          )}\n        </Stack>\n      </Container>\n    </>\n  );\n};\n\nexport default MyComments;\n","import { Row, Col, Card, Button } from \"react-bootstrap\";\nimport { useEffect, useState } from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { List, ListEntry, Recent, SearchBar, TextInput } from \"../base\";\nimport \"./stylesheet/Replies.css\";\nimport API from \"../api/API\";\nimport ReplyObj from \"../entities/ReplyObj\";\n\nfunction MyReplies() {\n  const [replies, setReplies] = useState([]);\n\n  useEffect(() => {\n    API.getMyReplies(\"d29590\", 1, 5).then((_replies) => {\n      setReplies(_replies);\n    });\n  }, []);\n\n  return (\n    <div className=\"discussion\">\n      <List scope=\"replies\" rows={replies} />\n      <TextInput />\n      <Button className=\"reply-button my-2\">Reply</Button>\n    </div>\n  );\n}\n\nexport default MyReplies;\n","import { Row, Col, Card, Image } from \"react-bootstrap\";\nimport { useContext, useEffect, useState } from \"react\";\n// import \"./Profile.css\";\nimport \"./stylesheet/Profile.css\"; // scss file access\nimport { ListGroup, SearchBar } from \"../base/\";\nimport { GlobalStateContext } from \"../GlobalStateProvider\";\n\nfunction Profile() {\n  const fake = [\n    {\n      scope: \"default\",\n      title: \"My questions\",\n      rows: [\n        [\"Cras justo odio\"],\n        [\"Dapibus ac facilisis in\"],\n        [\"Morbi leo risus\"],\n        [\"Porta ac consectetur ac\"],\n        [\"Vestibulum at eros\"],\n      ],\n    },\n    {\n      scope: \"default\",\n      title: \"My answers\",\n      rows: [\n        [\"Cras justo odio\"],\n        [\"Dapibus ac facilisis in\"],\n        [\"Morbi leo risus\"],\n        [\"Porta ac consectetur ac\"],\n        [\"Vestibulum at eros\"],\n      ],\n    },\n    {\n      scope: \"default\",\n      title: \"My simulation results\",\n      rows: [\n        [\"aaa\", \"bbb\", \"ccc\"],\n        [\"aaa\", \"bbb\", \"ccc\"],\n        [\"aaa\", \"bbb\", \"ccc\"],\n      ],\n    },\n  ];\n\n  const [tests, setTests] = useState(fake);\n\n  const { userInfo } = useContext(GlobalStateContext);\n\n  const [courses, setCourses] = useState(fake);\n  const [user, setUser] = useState(userInfo);\n\n  useEffect(() => {\n    setUser(userInfo);\n  }, [userInfo]);\n\n  return (\n    <Card body>\n      <Row lg={12} className=\"py-0 header\">\n        <Col xs={2}>\n          <Image\n            src={process.env.PUBLIC_URL + \"/icons/PERSON.svg\"}\n            className=\"user-profile-image\"\n          />\n        </Col>\n        <Col className=\"user-name-nickname\">\n          <h3 className=\"user-name-surname\">\n            {user.name + \" \" + user.surname}\n          </h3>\n          <h4 className=\"user-nickname\">{\"@\" + user.username}</h4>\n        </Col>\n      </Row>\n      <div className=\"user-profile\">\n        <ListGroup lists={tests} cols={2} rounded dotted />\n      </div>\n    </Card>\n  );\n}\n\nexport default Profile;\n","import {\n  Button,\n  Container,\n  Row,\n  Col,\n  Card,\n  Image,\n  Stack,\n} from \"react-bootstrap\";\n\nimport { useEffect, useState } from \"react\";\n// import \"./Questions.css\";\nimport \"./stylesheet/Questions.scss\";\nimport { List, MyPagination, Recent, SearchBar, Suggestion } from \"../base/\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport API from \"../api/API\";\n\nconst Questions = () => {\n  const fakeQuestions = [\n    {\n      id: 1,\n      question: \"What is a vector?\",\n      author: \"Donato\",\n      createdat: \"15:20 12/01/2021\",\n      tags: [\"vectors\"],\n      excerpt: \"Cras justo odio...\",\n    },\n    {\n      id: 2,\n      question: \"Who is Maxwell?\",\n      author: \"Jim\",\n      createdat: \"17:30 13/02/2021\",\n      tags: [\"physics\"],\n      excerpt: \"Cras justo odio...\",\n    },\n    {\n      id: 3,\n      question: \"How many meters per second?\",\n      author: \"Derek\",\n      createdat: \"19:40 14/03/2021\",\n      tags: [\"physics\", \"kinematic\"],\n      excerpt: \"Cras justo odio...\",\n    },\n  ];\n\n  useEffect(() => {\n    API.getQuestions(locationState.courseId).then((questions) =>\n      setQuestions(questions)\n    );\n  }, []);\n\n  const [questions, setQuestions] = useState({});\n  const [suggestions, setSuggestions] = useState(fakeQuestions /*[]*/);\n  const suggestionType = [\"Latest\", \"Hottest\"];\n\n  // hook for responsive react\n  const useMediaQuery = (query) => {\n    const [matches, setMatches] = useState(false);\n\n    useEffect(() => {\n      const media = window.matchMedia(query);\n      if (media.matches !== matches) {\n        setMatches(media.matches);\n      }\n      const listener = () => {\n        setMatches(media.matches);\n      };\n      window.addEventListener(\"resize\", listener);\n      return () => window.removeEventListener(\"resize\", listener);\n    }, [matches, query]);\n\n    return matches;\n  };\n\n  // TODO: also take a look at Bootstrap class infixes to detect the current breakpoint\n  // to see which approach is better -- https://getbootstrap.com/docs/5.1/layout/breakpoints/\n  const isDesktop = useMediaQuery(\"(min-width: 960px)\");\n\n  const locationState = useLocation().state;\n\n  return (\n    <>\n      <Container>\n        <Stack gap={4}>\n          {isDesktop ? (\n            <Row key={isDesktop}>\n              <Col>\n                <Container className=\"container\">\n                  <Row lg={12} className=\"header\">\n                    <Col>\n                      <div className=\"right-button\">\n                        <Button\n                          className=\"add-question-button\"\n                          onClick={() => {}}\n                        >\n                          {\" Enroll in course\"}\n                        </Button>\n\n                        <Link\n                          to={{\n                            pathname:\n                              \"/startsimulation/\" + locationState.courseId,\n                          }}\n                          state={{\n                            courseId: locationState.courseId,\n                            title: locationState.title,\n                          }}\n                        >\n                          <Button className=\"start-simulation-button\">\n                            {\" Start Simulation\"}\n                          </Button>\n                        </Link>\n                      </div>\n                      <List\n                        scope=\"questions\"\n                        title={locationState.title}\n                        rows={questions}\n                      />\n                      <MyPagination />\n                    </Col>\n                    <Col className=\"d-sm-inline-block col-md-4\">\n                      <Stack gap={4}>\n                        {suggestionType.map((type, i) => {\n                          return (\n                            <Row key={i}>\n                              <Suggestion\n                                scope={\"suggestion\"}\n                                title={type + \" Questions\"}\n                                rows={suggestions}\n                              />\n                            </Row>\n                          );\n                        })}\n                      </Stack>\n                    </Col>\n                  </Row>\n                </Container>\n              </Col>\n            </Row>\n          ) : (\n            // mobile configuration\n            <>\n              <Row>\n                <Container className=\"container\">\n                  <Row lg={12} className=\"header\">\n                    <Col>\n                      <div className=\"right-button\">\n                        <Button\n                          className=\"add-question-button\"\n                          onClick={() => {}}\n                        >\n                          {\" Enroll in course\"}\n                        </Button>\n\n                        <Link\n                          to={{\n                            pathname:\n                              \"/startsimulation/\" + locationState.courseId,\n                          }}\n                          state={{\n                            courseId: locationState.courseId,\n                            title: locationState.title,\n                          }}\n                        >\n                          <Button className=\"start-simulation-button\">\n                            {\" Start Simulation\"}\n                          </Button>\n                        </Link>\n                      </div>\n                      <List\n                        scope=\"questions\"\n                        title={locationState.title}\n                        rows={questions}\n                      />\n                    </Col>\n\n                    <Col className=\"pagination\" lg=\"12\" sm=\"12\" md=\"12\">\n                      <MyPagination />\n                    </Col>\n                  </Row>\n                </Container>\n              </Row>\n              <Row>\n                <Stack gap={4}>\n                  {suggestionType.map((type, i) => {\n                    return (\n                      <Col key={i}>\n                        <Suggestion\n                          scope={\"suggestion\"}\n                          title={type + \" Questions\"}\n                          rows={suggestions}\n                        />\n                      </Col>\n                    );\n                  })}\n                </Stack>\n              </Row>\n            </>\n          )}\n        </Stack>\n      </Container>\n    </>\n  );\n};\n\nexport default Questions;\n","import { Row, Col, Card, Button } from \"react-bootstrap\";\nimport { useEffect, useState } from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { List, ListEntry, Recent, SearchBar, TextInput } from \"../base\";\nimport \"./stylesheet/Replies.css\";\nimport API from \"../api/API\";\nimport ReplyObj from \"../entities/ReplyObj\";\n\nfunction Answer(props) {\n  return (\n    <div className=\"questionEntry-discussion-answer\">\n      <Row>\n        <Col>\n          <h4>{props.ans.answer}</h4>\n        </Col>\n        <Col className=\"question-created-time\">\n          Created at: {props.ans.createdat}\n        </Col>\n      </Row>\n      <Row>\n        <Col className=\"question-author\">from {props.ans.author}</Col>\n      </Row>\n    </div>\n  );\n}\n\nfunction Replies() {\n  const answer = {\n    answer: \"Lorem ipsum dolor sit amet\",\n    author: \"Jim\",\n    createdat: \"10/10/1010\",\n  };\n\n  const [replies, setReplies] = useState([]);\n\n  useEffect(() => {\n    API.getReplies(\"6380eae7306106889038c590\").then((_replies) => {\n      setReplies(_replies);\n    });\n  }, []);\n\n  return (\n    <div className=\"discussion\">\n      <Answer ans={answer} />\n      <List scope=\"replies\" rows={replies} />\n      <TextInput />\n      <Button className=\"reply-button my-2\">Reply</Button>\n    </div>\n  );\n}\n\nexport default Replies;\n","import { Row, Col, Card, Image, Form, Button } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { useContext, useEffect, useState } from \"react\";\nimport \"./UserSettings.css\";\nimport { List } from \"../base/\";\nimport { GlobalStateContext } from \"../GlobalStateProvider\";\n\nfunction UserSettings() {\n  const fake = [\n    [<Form.Check />, \"Analisys I\"],\n    [<Form.Check />, \"Physics I\"],\n    [<Form.Check />, \"Geometry\"],\n  ];\n  const { userInfo } = useContext(GlobalStateContext);\n\n  const [courses, setCourses] = useState(fake);\n  const [user, setUser] = useState(userInfo);\n\n  useEffect(() => {\n    setUser(userInfo);\n  }, [userInfo]);\n\n  return (\n    <Card body>\n      <Row lg={12} className=\"py-0 header\">\n        <Col xs={2}>\n          <Image src={process.env.PUBLIC_URL + \"/icons/PERSON.svg\"} />\n        </Col>\n        <Col>\n          <h3> {user?.name + \" \" + user?.surname} </h3>\n          <h4> {} </h4>\n          <Form.Control placeholder=\"Change nickname\" />\n          <Form.Check label=\"Public profile\" />\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <List rows={courses} title={\"Enrolled in\"} scope={\"default\"} />\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Link to=\"/courses\">\n            <Button>Add new course</Button>\n          </Link>\n          <Button className=\"saveButton\">Save</Button>\n        </Col>\n      </Row>\n    </Card>\n  );\n}\n\nexport default UserSettings;\n","import { List, MyPagination } from \"../base\";\nimport { Card, Container } from \"react-bootstrap\";\nimport { useLocation } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport \"./stylesheet/ListFullPage.css\";\n\nexport default function ListFullPage() {\n  const location = useLocation();\n  return (\n    <>\n      <Container>\n        <div className=\"list-full-page\">\n          <List\n            scope={location.state.scope}\n            title={location.state.title}\n            rows={location.state.rows}\n            rounded\n            tiled\n            dotted\n          />\n          {location.state.title === \"My courses\" ? <></> : <MyPagination />}\n        </div>\n      </Container>\n    </>\n  );\n}\n","import { Card, Container } from \"react-bootstrap\";\nimport { List, MyPagination, SearchBar } from \"../base\";\nimport { useContext, useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport \"./stylesheet/Bookmarks.scss\";\nimport API from \"../api/API\";\nimport { GlobalStateContext } from \"../GlobalStateProvider\";\n\nexport default function Bookmarks() {\n  const location = useLocation(); // default state of scope, title, and rows\n\n  const { myBookmarkedQuestions } = useContext(GlobalStateContext);\n\n  return (\n    <>\n      <Container className=\"bookmarks-container\">\n        <List\n          scope={\"bookmarks\"}\n          title={\"Bookmarked Questions\"}\n          rows={myBookmarkedQuestions}\n        />\n        {/* TODO: <MyPagination />*/}\n      </Container>\n    </>\n  );\n}\n","import {\n  Card,\n  Container,\n  Form,\n  Row,\n  Col,\n  Button,\n  Stack,\n  FloatingLabel,\n  InputGroup,\n  FormControl,\n  Alert,\n} from \"react-bootstrap\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\n// import \"./StartSimulation.css\";\nimport \"./stylesheet/StartSimulation.css\";\n\nexport default function StartSimulation() {\n  const simulationTypes = [\"Random\", \"Exam\"];\n\n  const [isMulti, setIsMulti] = useState(false);\n\n  const [numQuestions, setNumQuestions] = useState(10);\n  const [penaltyScore, setPenaltyScore] = useState(-0.5);\n  const [maxScore, setMaxScore] = useState(30);\n  const [duration, setDuration] = useState(60); /* unit: minute */\n  const [userInput, setUserInput] = useState(1);\n  const totNumOfQuestion = undefined;\n  const [maxNumOfQuestion, setMaxNumOfQuestion] = useState(\n    totNumOfQuestion ? totNumOfQuestion : 100\n  );\n\n  const locationState = useLocation().state;\n\n  return (\n    <>\n      <Container>\n        <Card className=\"simulation-card\">\n          <Card.Body>\n            <Stack gap={4}>\n              <h3>Simulation Set Up</h3>\n              <Col>\n                <Stack gap={2}>\n                  <Row>\n                    <div key=\"checkbox-ratio\" className=\"mb-3\">\n                      <Form.Switch\n                        className=\"multiquiz-toggle\"\n                        type=\"switch\"\n                        label=\"Multiple Choice Questions Only (With Grade)\"\n                        onChange={() => setIsMulti(!isMulti)}\n                      />\n                    </div>\n                  </Row>\n                  {userInput || userInput === 0 ? (\n                    maxNumOfQuestion > 100 ? (\n                      <Alert variant=\"danger\">\n                        Maximum Number of question: {maxNumOfQuestion}\n                      </Alert>\n                    ) : numQuestions <= 0 || maxScore <= 0 || duration <= 0 ? (\n                      <Alert variant=\"danger\">\n                        Number of Question, Maximum Score, and Duration Must Not\n                        Be Zero\n                      </Alert>\n                    ) : (\n                      <></>\n                    )\n                  ) : (\n                    <Alert variant=\"danger\">\n                      Only Number Inputs Are Allowed\n                    </Alert>\n                  )}\n                  <Stack gap={4}>\n                    {isMulti ? (\n                      <Row key={isMulti}>\n                        <Stack gap={2}>\n                          <h6>\n                            ( Number of Question, Maximum Score, and Duration\n                            Must Not Be Zero )\n                          </h6>\n                          <InputGroup key={isMulti}>\n                            <InputGroup.Text>\n                              Number of Questions\n                            </InputGroup.Text>\n                            <FormControl\n                              aria-label={numQuestions}\n                              placeholder={numQuestions}\n                              onChange={(e) => {\n                                setUserInput(Number(e.target.value));\n                                setNumQuestions(Number(e.target.value));\n                              }}\n                            />\n                          </InputGroup>\n                          <InputGroup>\n                            <InputGroup.Text>Penalty </InputGroup.Text>\n                            <FormControl\n                              aria-label={penaltyScore}\n                              placeholder={penaltyScore}\n                              onChange={(e) => {\n                                setUserInput(Number(e.target.value));\n                                setPenaltyScore(Number(e.target.value));\n                              }}\n                            />\n                          </InputGroup>\n                          <InputGroup>\n                            <InputGroup.Text>Maximum Score</InputGroup.Text>\n                            <FormControl\n                              aria-label={maxScore}\n                              placeholder={maxScore}\n                              onChange={(e) => {\n                                setUserInput(Number(e.target.value));\n                                setMaxScore(Number(e.target.value));\n                              }}\n                            />\n                          </InputGroup>\n                          <InputGroup>\n                            <InputGroup.Text>\n                              Duration (Minutes)\n                            </InputGroup.Text>\n                            <FormControl\n                              aria-label={duration}\n                              placeholder={duration}\n                              onChange={(e) => {\n                                setUserInput(Number(e.target.value));\n                                setDuration(Number(e.target.value));\n                              }}\n                            />\n                          </InputGroup>\n                        </Stack>\n                      </Row>\n                    ) : (\n                      <></>\n                    )}\n                    <Row className=\"bottom-group\">\n                      {numQuestions &&\n                      maxScore &&\n                      !isNaN(penaltyScore) &&\n                      duration &&\n                      numQuestions <= maxNumOfQuestion ? (\n                        simulationTypes.map((type, i) => {\n                          return (\n                            <Col key={i}>\n                              <Link\n                                key={i}\n                                to={{\n                                  pathname:\n                                    \"/simulation/\" + locationState.courseId,\n                                }}\n                                state={{\n                                  type: type,\n                                  title: locationState.title,\n                                  courseId: locationState.courseId,\n                                  num: numQuestions,\n                                  penalty: penaltyScore,\n                                  max: maxScore,\n                                  isMulti: isMulti,\n                                  duration: duration,\n                                }}\n                              >\n                                <Button\n                                  key={i}\n                                  className=\"start-simulation-button\"\n                                  variant=\"outline-success\"\n                                >\n                                  {type + \" Question\"}\n                                </Button>\n                              </Link>\n                            </Col>\n                          );\n                        })\n                      ) : (\n                        <Alert variant=\"danger\">Invalid Inputs</Alert>\n                      )}\n                    </Row>\n                  </Stack>\n                </Stack>\n              </Col>\n            </Stack>\n          </Card.Body>\n        </Card>\n      </Container>\n    </>\n  );\n}\n","import { Link, useLocation } from \"react-router-dom\";\nimport { useCallback, useEffect, useState, Component, useRef } from \"react\";\nimport {\n  Card,\n  Row,\n  Col,\n  Pagination,\n  Container,\n  Button,\n  Form,\n  Stack,\n  Modal,\n} from \"react-bootstrap\";\n// import \"./Simulation.css\";\nimport \"./stylesheet/Simulation.css\"; // scss file access\nimport { List, ListEntry, TextInput } from \"../base\";\n\nconst Duration = (props) => {\n  const [timeIn, setTimeIn] = useState({\n    h: Math.floor(parseInt(props.duration) / 60),\n    m: parseInt(props.duration) % 60,\n    s: 0,\n  });\n\n  useEffect(() => {\n    const myInterval = setInterval(() => {\n      setTimeIn((time) => {\n        const updateTime = { ...time };\n        if (time.s > 0) {\n          updateTime.s--;\n        }\n        if (time.s === 0) {\n          if (time.h === 0 && time.m === 0) {\n            clearInterval(myInterval);\n          } else if (time.m > 0) {\n            updateTime.m--;\n            updateTime.s = 59;\n          } else if (time.h > 0) {\n            updateTime.h--;\n            updateTime.m = 59;\n            updateTime.s = 59;\n          }\n        }\n        return updateTime;\n      });\n    }, 1000);\n    return () => clearInterval(myInterval);\n  }, [timeIn]);\n\n  return (\n    <>\n      <h3 className=\"simulation-duration\">\n        {timeIn.h.toString().padStart(2, \"0\")}:\n        {timeIn.m.toString().padStart(2, \"0\")}:\n        {timeIn.s.toString().padStart(2, \"0\")}\n      </h3>\n    </>\n  );\n};\n\nconst FinishModal = (props) => {\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  const timeIn =\n    Math.floor(parseInt(props.duration) / 60)\n      .toString()\n      .padStart(2, \"0\") +\n    \":\" +\n    (parseInt(props.duration) % 60).toString().padStart(2, \"0\") +\n    \":\" +\n    (0).toString().padStart(2, \"0\");\n\n  const [timeRecord, setTimeRecord] = useState({\n    h: Math.floor(parseInt(props.duration) / 60),\n    m: parseInt(props.duration) % 60,\n    s: 0,\n  });\n\n  useEffect(() => {\n    const myInterval = setInterval(() => {\n      setTimeRecord((time) => {\n        const updateTime = { ...time };\n        if (time.s > 0) {\n          updateTime.s--;\n        }\n        if (time.s === 0) {\n          if (time.h === 0 && time.m === 0) {\n            clearInterval(myInterval);\n          } else if (time.m > 0) {\n            updateTime.m--;\n            updateTime.s = 59;\n          } else if (time.h > 0) {\n            updateTime.h--;\n            updateTime.m = 59;\n            updateTime.s = 59;\n          }\n        }\n        return updateTime;\n      });\n    }, 1000);\n    return () => clearInterval(myInterval);\n  }, [timeRecord]);\n\n  return timeRecord.h === 0 && timeRecord.m === 0 && timeRecord.s === 0 ? (\n    <Modal show={true} className=\"simulation-modal\">\n      <Modal.Header>\n        <Modal.Title>Time Is Up!</Modal.Title>\n      </Modal.Header>\n      <Modal.Footer>\n        <Link\n          className=\"outline-secondary\"\n          to={{\n            pathname: \"/simulationresult/\" + props.locationState.courseId,\n          }}\n          state={{\n            courseId: props.locationState.courseId,\n            title: props.locationState.title,\n            num: props.locationState.num,\n            penalty: props.locationState.penalty,\n            max: props.locationState.max,\n            isMulti: props.locationState.isMulti,\n            pointPerCorrectAns:\n              props.locationState.max / props.locationState.num,\n            duration: timeIn,\n            timeElapsed: `${timeRecord.h\n              .toString()\n              .padStart(2, \"0\")}:${timeRecord.m\n              .toString()\n              .padStart(2, \"0\")}:${timeRecord.s.toString().padStart(2, \"0\")}`,\n          }}\n        >\n          <Button className=\"btn-outline-success\" variant=\"outline-success\">\n            See Result\n          </Button>\n        </Link>\n      </Modal.Footer>\n    </Modal>\n  ) : (\n    <>\n      <Button\n        className=\"btn-outline-success\"\n        variant=\"outline-success\"\n        onClick={handleShow}\n      >\n        Finish\n      </Button>\n      <Modal show={show} onHide={handleClose} className=\"simulation-modal\">\n        <Modal.Header closeButton>\n          <Modal.Title>Submit Before the Time Limit?</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>Confirm your submission to see the result.</Modal.Body>\n        <Modal.Footer>\n          <Link\n            className=\"outline-secondary\"\n            to={{\n              pathname: \"/simulationresult/\" + props.locationState.courseId,\n            }}\n            state={{\n              courseId: props.locationState.courseId,\n              title: props.locationState.title,\n              num: props.locationState.num,\n              penalty: props.locationState.penalty,\n              max: props.locationState.max,\n              isMulti: props.locationState.isMulti,\n              pointPerCorrectAns:\n                props.locationState.max / props.locationState.num,\n              duration: timeIn,\n              timeElapsed: `${timeRecord.h\n                .toString()\n                .padStart(2, \"0\")}:${timeRecord.m\n                .toString()\n                .padStart(2, \"0\")}:${timeRecord.s.toString().padStart(2, \"0\")}`,\n            }}\n          >\n            <Button className=\"btn-outline-success\" variant=\"outline-success\">\n              Confirm\n            </Button>\n          </Link>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n};\n\nexport default function Simulation(props) {\n  const locationState = useLocation().state;\n\n  const simulationRandomQuizType = [\"open\", \"close\"];\n  const [pageNum, setPageNum] = useState(1);\n  const randomizer =\n    simulationRandomQuizType[\n      Math.floor(Math.random() * simulationRandomQuizType.length)\n    ];\n  const [quizType, setQuizType] = useState(randomizer);\n\n  const PaginationRow = (props) => {\n    let items = [];\n    for (let num = 1; num <= props.numPage; num++) {\n      items.push(\n        <Pagination.Item\n          key={num}\n          active={num === pageNum}\n          onClick={() => {\n            setPageNum(num);\n          }}\n        >\n          {num}\n        </Pagination.Item>\n      );\n    }\n\n    return (\n      <Pagination>\n        <Pagination.Prev />\n        {items}\n        <Pagination.Next />\n      </Pagination>\n    );\n  };\n\n  // mock question type\n  useEffect(() => {\n    locationState.isMulti ? setQuizType(\"close\") : setQuizType(randomizer);\n  }, [pageNum]);\n\n  return (\n    <Container className=\"simulation-container\">\n      <h3 className=\"simulation-title\">\n        {locationState.type + \" Questions of \" + locationState.title}\n      </h3>\n      <Duration duration={locationState.duration} />\n      <Row className=\"pagination-finish\">\n        <Col>\n          <PaginationRow numPage={locationState.num} />\n        </Col>\n        <Col>\n          <FinishModal\n            locationState={locationState}\n            duration={locationState.duration}\n          />\n        </Col>\n      </Row>\n      <div className=\"simulation-question\">\n        <Stack gap={3}>\n          <Card className=\"simulation-question-text-card\">\n            <h3 className=\"simulation-question-title-number\">\n              {\"Question \" + pageNum}\n            </h3>\n            <Card.Text>\n              \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n              eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut\n              enim ad minim veniam, quis nostrud exercitation ullamco laboris\n              nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in\n              reprehenderit in voluptate velit esse cillum dolore eu fugiat\n              nulla pariatur. Excepteur sint occaecat cupidatat non proident,\n              sunt in culpa qui officia deserunt mollit anim id est laborum.\"\n            </Card.Text>\n          </Card>\n          <Card.Body className=\"simulation-question-answer\">\n            {quizType === \"open\" ? (\n              <TextInput />\n            ) : (\n              <Card className=\"simulation-question-answer-ratio-card\">\n                <Stack gap={1}>\n                  {[\"A\", \"B\", \"C\", \"D\"].map((e, i) => {\n                    return (\n                      <Form.Check\n                        key={i}\n                        type=\"checkbox\"\n                        label={e}\n                        className=\"simulation-answer-checkbox\"\n                      />\n                    );\n                  })}\n                </Stack>\n              </Card>\n            )}\n          </Card.Body>\n        </Stack>\n      </div>\n    </Container>\n  );\n}\n","import { Link, useLocation } from \"react-router-dom\";\nimport {\n  Card,\n  Container,\n  Table,\n  Stack,\n  Button,\n  Image,\n  Row,\n  Col,\n} from \"react-bootstrap\";\nimport \"./stylesheet/SimulationResult.css\"; // scss file access\n//import \"./SimulationResult.css\";\nimport { useState } from \"react\";\nimport { List } from \"../base\";\n\nconst timeUsedStr = (left, tot) => {\n  let h, m, s;\n  if (left.length !== tot.length) {\n    return \"\";\n  }\n  for (let i = 0; i < left.length; i++) {\n    if (i === 0) {\n      h = tot[0] - left[0];\n    }\n    if (i === 1) {\n      m = tot[1] - left[1];\n      if (m < 0) {\n        h -= 1;\n        m = m + 60;\n      }\n    }\n    if (i === 2) {\n      s = tot[2] - left[2];\n      if (s < 0) {\n        m -= 1;\n        s = s + 60;\n      }\n    }\n  }\n  return (\n    h.toString().padStart(2, \"0\") +\n    \":\" +\n    m.toString().padStart(2, \"0\") +\n    \":\" +\n    s.toString().padStart(2, \"0\")\n  );\n};\n\nexport default function SimulationResult() {\n  const locationState = useLocation().state;\n\n  const [numCorrect, setNumCorrect] = useState(locationState.num);\n  const [numPenalty, setNumPenalty] = useState(0);\n\n  const numNotGiven = locationState.num - numCorrect - numPenalty;\n  const numQuiz = locationState.num;\n  const maxScore = locationState.max;\n  const pointPerWrong = locationState.penalty;\n  const pointPerCorrect = locationState.pointPerCorrectAns;\n\n  const mockCorrectAns = [];\n  for (let i = 0; i < numQuiz; i++) {\n    mockCorrectAns.push({\n      id: locationState.courseId,\n      quizNum: i + 1,\n      ans: \"C\",\n      score: pointPerCorrect,\n      penalty: pointPerWrong,\n      isCorrect: false,\n    });\n  }\n\n  const mockUserAns = [];\n  for (let i = 0; i < numQuiz; i++) {\n    const randomAns = [\"A\", \"B\", \"C\", \"D\"];\n    const random = Math.floor(Math.random() * randomAns.length);\n    mockUserAns.push({\n      id: locationState.courseId,\n      quizNum: i + 1,\n      ans: randomAns[random],\n      score: pointPerCorrect,\n      penalty: pointPerWrong,\n      isCorrect: false,\n    });\n    mockUserAns[i].isCorrect = mockUserAns[i].ans === mockCorrectAns[i].ans;\n  }\n\n  const examDuration = locationState.duration.split(\":\").map((n) => {\n    return Number(n);\n  });\n  const timeElapsed = locationState.timeElapsed.split(\":\").map((n) => {\n    return Number(n);\n  });\n\n  const [useAns, setUserAns] = useState(mockUserAns);\n  const [correctAns, setCorrectAns] = useState(mockCorrectAns);\n  const [timeUsed, setTimeUsed] = useState(\n    timeUsedStr(timeElapsed, examDuration)\n  );\n\n  return (\n    <>\n      <Container className=\"simulation-result-container\">\n        <Row className=\"simulation-result-title\">\n          <h2 className=\"simulation-result-title-text\">Simulation Result</h2>\n        </Row>\n        <Row className=\"col-sm-8\">\n          <Col className=\"simulation-title\">\n            <h3>{locationState.title}</h3>\n          </Col>\n          <Col>\n            <Link\n              className=\"simulation-result-start-button\"\n              to={{\n                pathname: \"/startsimulation/\" + locationState.courseId,\n              }}\n              state={{\n                courseId: locationState.courseId,\n                title: locationState.title,\n              }}\n            >\n              <Button className=\"start-button\">\n                <p>Start New Simulation</p>\n              </Button>\n            </Link>\n          </Col>\n        </Row>\n        {/*<h3>*/}\n        {/*  Time Used: {timeUsed} / {locationState.duration}{\" \"}*/}\n        {/*</h3>*/}\n        <Row>\n          <div className=\"simulation-result-score\">\n            <h2 className=\"simulation-result-user-score\">\n              {numCorrect * pointPerCorrect -\n                numPenalty * Math.abs(pointPerWrong)}\n            </h2>\n            <h2 className=\"simulation-result-max-score\">/{maxScore}</h2>\n          </div>\n        </Row>\n        {/*<Card className=\"result-table-card\">*/}\n        <Table\n          responsive=\"lg\"\n          striped\n          hover\n          className=\"simulation-result-table\"\n        >\n          <thead>\n            <tr>\n              <th>Result</th>\n              <th>Number</th>\n              <th>Points Each</th>\n              <th>Total</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td>Correct Answer</td>\n              <td>{numCorrect}</td>\n              <td>{pointPerCorrect}</td>\n              <td>{numCorrect * pointPerCorrect}</td>\n            </tr>\n            <tr>\n              <td>Not Given</td>\n              <td>{numNotGiven}</td>\n              <td>0</td>\n              <td>{numNotGiven * 0}</td>\n            </tr>\n            <tr>\n              <td>Wrong Answer</td>\n              <td>{numPenalty}</td>\n              <td>{pointPerWrong}</td>\n              <td>{numPenalty * pointPerWrong}</td>\n            </tr>\n          </tbody>\n        </Table>\n        <List scope={\"simulationResult\"} rows={useAns} />\n      </Container>\n    </>\n  );\n}\n","import { useContext, useState } from \"react\";\nimport {\n  Container,\n  Card,\n  Row,\n  Col,\n  Button,\n  Image,\n  Stack,\n  ListGroup,\n  Accordion,\n  DropdownButton,\n  Dropdown,\n} from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport \"./SimulationAccess.css\";\nimport { GlobalStateContext } from \"../GlobalStateProvider\";\n\nexport default function SimulationAccess() {\n  const fakeSimulationResult = [\n    {\n      id: \"A1234\",\n      course: \"Analysis I\",\n      score: 30,\n      date: \"20/05/21\",\n      maxScore: 30,\n    },\n    {\n      id: \"B5678\",\n      course: \"Physics I\",\n      score: 18,\n      date: \"01/11/21\",\n      maxScore: 30,\n    },\n    {\n      id: \"C1001\",\n      course: \"Geometry\",\n      score: 25,\n      date: \"20/04/22\",\n      maxScore: 30,\n    },\n  ];\n\n  const fakeCourses = [\n    {\n      code: \"A0B1C2\",\n      course: \"Analysis I\",\n      cfu: 10,\n      professor: \"Mario Rossi\",\n      enrolled: true,\n    },\n    {\n      code: \"D3E4F5\",\n      course: \"Physics I\",\n      cfu: 10,\n      professor: \"Stefano Bianchi\",\n      enrolled: true,\n    },\n    {\n      code: \"G6H7I8\",\n      course: \"Geometry\",\n      cfu: 10,\n      professor: \"Giuseppe Verdi\",\n      enrolled: true,\n    },\n  ];\n\n  const { mySimulationResult, userCourses } = useContext(GlobalStateContext);\n  const [coursesEnrolled, setCoursesEnrolled] = useState(userCourses);\n  const [simulationResult, setSimulationResult] = useState(mySimulationResult);\n  const [courseSelected, setCourseSelected] = useState({});\n  const [courseSelectedTitle, setCourseSelectedTitle] = useState(\n    \"Select Course of Simulation\"\n  );\n\n  console.log(mySimulationResult, userCourses);\n  return (\n    <>\n      <Container className=\"\">\n        <h3>Simulation</h3>\n        <Card>\n          <Card.Body>\n            <Row className=\"col-xxl-12\">\n              <Col>\n                {courseSelected.name ? (\n                  <Link\n                    className=\"simulation-button\"\n                    to={{\n                      pathname: \"/startsimulation/\" + courseSelected._id,\n                    }}\n                    state={{\n                      courseId: courseSelected._id,\n                      title: courseSelected.name,\n                    }}\n                  >\n                    <Button>\n                      <Image\n                        className=\"add-icon\"\n                        src={\n                          process.env.PUBLIC_URL +\n                          \"/icons/SIMULATION RESULTS_WHITE.svg\"\n                        }\n                        width=\"13px\"\n                      />\n                      {\" Start Simulation\"}\n                    </Button>\n                  </Link>\n                ) : (\n                  <></>\n                )}\n                {/*<Link*/}\n                {/*    to={{ pathname: \"/startsimulation/\" + e.id }}*/}\n                {/*    state={{*/}\n                {/*        courseId: e.id,*/}\n                {/*        title: e.course,*/}\n                {/*    }}*/}\n                {/*>*/}\n                {/*    <Button className=\"right-button\">*/}\n                {/*        <Image*/}\n                {/*            className=\"add-icon\"*/}\n                {/*            src={process.env.PUBLIC_URL + \"/icons/SIMULATION RESULTS_WHITE.svg\"}*/}\n                {/*            width=\"13px\"*/}\n                {/*        />*/}\n                {/*        {\" Start Simulation\"}*/}\n                {/*    </Button>*/}\n                {/*</Link>*/}\n              </Col>\n              <Col>\n                <DropdownButton\n                  id=\"dropdown-basic-button\"\n                  title={courseSelectedTitle}\n                >\n                  {coursesEnrolled.map((e, i) => {\n                    return (\n                      <>\n                        <Dropdown.Item\n                          key={\"enrolled\" + i}\n                          as=\"button\"\n                          onClick={() => {\n                            setCourseSelectedTitle(e.name);\n                            setCourseSelected(e);\n                          }}\n                        >\n                          {e.name}\n                        </Dropdown.Item>\n                      </>\n                    );\n                  })}\n                </DropdownButton>\n              </Col>\n            </Row>\n            <Row>\n              <ListGroup className=\"simulation-access-result\">\n                <h6>Simulation Results</h6>\n                {simulationResult.map((e, i) => {\n                  return (\n                    <>\n                      <ListGroup.Item varient=\"flush\">\n                        {\n                          <Row key={\"result\" + i}>\n                            <Col>{e[\"course_id\"]}</Col>\n                            <Col>{e.results[0]}</Col>\n                            {/*<Col>*/}\n                            {/*  {*/}\n                            {/*    e.course[\"years_active\"][*/}\n                            {/*      e.course[\"years_active\"].length - 1*/}\n                            {/*    ]*/}\n                            {/*  }*/}\n                            {/*</Col>*/}\n                          </Row>\n                        }\n                      </ListGroup.Item>\n                    </>\n                  );\n                })}\n              </ListGroup>\n            </Row>\n          </Card.Body>\n        </Card>\n      </Container>\n    </>\n  );\n}\n","import {\n  Row,\n  Col,\n  Container,\n  Image,\n  Card,\n  Accordion,\n  Button,\n} from \"react-bootstrap\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport MarkdownPreview from \"./MarkdownPreview\";\nimport remarkGfm from \"remark-gfm\";\nimport remarkMath from \"remark-math\";\nimport rehypeKatex from \"rehype-katex\";\nimport rehypeHighlight from \"rehype-highlight\";\n\n// import \"./ListEntry.css\";\nimport \"./stylesheet/ListEntry.css\";\nimport QuestionPreview from \"./QuestionPreview\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { UserSettings } from \"../pages\";\nimport { GlobalStateContext } from \"../GlobalStateProvider\";\n\nfunction ListEntryDefault(props) {\n  const [isLoading, setIsLoading] = useState(true);\n\n  const { myCoursesNewQuestions } = useContext(GlobalStateContext);\n\n  useEffect(() => {\n    if (myCoursesNewQuestions !== []) {\n      setTimeout(() => setIsLoading(false), 200);\n    }\n  }, [myCoursesNewQuestions]);\n\n  return (\n    !isLoading && (\n      <tr>\n        {props.row.map((cell, i) => (\n          <td key={i}>\n            {props.dotted && <span className=\"table-dot\">●</span>}\n            {cell}\n          </td>\n        ))}\n      </tr>\n    )\n  );\n}\n\nfunction ListEntryCourses(props) {\n  return (\n    <tr>\n      <td>{props.row[\"_id\"]}</td>\n      <td>\n        {/* ROUTE: /course/course:id COMPONENT: <Questions/> */}\n        <Link\n          to={\"/course/\" + props.row[\"_id\"]}\n          state={{\n            courseId: props.row[\"_id\"],\n            title: props.row.name,\n            query: props.row,\n          }}\n          className=\"course-entry\"\n        >\n          {props.row.name}\n        </Link>\n      </td>\n      <td>\n        {props.row.professors.map((prof) => {\n          return prof.name;\n        })}\n      </td>\n      {/*<td>{props.row.cfu}</td>*/}\n    </tr>\n  );\n}\n\nfunction ListEntryQuestions(props) {\n  const timestamp = props.row.timestamp;\n\n  return (\n    <div className=\"questionEntry\">\n      <Row>\n        <Col>\n          <Row>\n            {/* ROUTE: /question/question:id COMPONENT: <Answer/> */}\n            <Link\n              to={\"/question/\" + props.row[\"_id\"]}\n              className=\"question\"\n              state={{\n                questionId: props.row[\"_id\"],\n                courseId: props.row.course,\n              }}\n            >\n              {props.row.name}\n            </Link>\n          </Row>\n          <Row>\n            {/*<Col>*/}\n            {/*  {props.row.tags.map((t, i) => (*/}\n            {/*    <Link key={i} to=\"\" className=\"tags\">*/}\n            {/*      #{t}*/}\n            {/*    </Link>*/}\n            {/*  ))}*/}\n            {/*</Col>*/}\n          </Row>\n        </Col>\n        <Col>\n          <Row className=\"created-at\">Created at: {timestamp}</Row>\n          <Row className=\"created-from\">from {props.row.owner}</Row>\n        </Col>\n      </Row>\n      <Row>\n        <Col>{props.row.excerpt}</Col>\n      </Row>\n    </div>\n  );\n}\n\nfunction ListEntryBookmarkQuestions(props) {\n  // const [timestamp, setTimestamp] = useState(\n  //   new Date(props.row.timestamp.split(\".\")[0])\n  //     .toString()\n  //     .replace(\"(Central European Standard Time)\", \"\")\n  // );\n\n  return (\n    <div className=\"bookmarkQuestionEntry\">\n      <Row>\n        <Col>\n          <Row>\n            <Row className=\"course-name\">{props.row[\"course_id\"]}</Row>\n            <Row>\n              {/* ROUTE: /question/question:id COMPONENT: <Answer/> */}\n              <Link\n                to={\"/question/\" + props.row[\"_id\"]}\n                className=\"question\"\n                state={{\n                  questionId: props.row[\"_id\"],\n                  courseId: props.row.course,\n                }}\n              >\n                {props.row.title}\n              </Link>\n            </Row>\n          </Row>\n          <Row>\n            <Col>\n              {/*{props.row.tags.map((t, i) => (*/}\n              {/*  <Link key={i} to=\"\" className=\"tags\">*/}\n              {/*    #{t}*/}\n              {/*  </Link>*/}\n              {/*))}*/}\n            </Col>\n          </Row>\n        </Col>\n        <Col>\n          {/*<Row className=\"created-at\">Created at: {timestamp}</Row>*/}\n          {/*<Row className=\"created-from\">from  {props.row.owner}</Row>*/}\n        </Col>\n      </Row>\n      <Row>{/*<Col>{props.row.content}</Col>*/}</Row>\n    </div>\n  );\n}\n\nfunction ListEntryAnswers(props) {\n  return (\n    <div className=\"answerEntry\" key={props.row[\"_id\"]}>\n      <Row className=\"answerEntry-credential\">\n        <Col colSpan=\"2\">\n          <Row>\n            <Col>\n              {props.row.author}, {props.row.timestamp}\n            </Col>\n            <Col className=\"header-svg\">\n              <span className=\"reply-link mx-3\">\n                {/*{props.row.replies + \" \"}*/}\n                <Image\n                  src={process.env.PUBLIC_URL + \"/icons/DISCUSSION.svg\"}\n                  width=\"28px\"\n                />\n              </span>\n            </Col>\n          </Row>\n        </Col>\n      </Row>\n      <Row>\n        <MarkdownPreview rowspan=\"3\" markdown={props.row.content} />\n      </Row>\n\n      <Row>\n        <Col className=\"answerEntry-vote\">\n          <Link to=\"\">\n            <Image\n              className=\"up-vote\"\n              src={process.env.PUBLIC_URL + \"/icons/arrow_up.svg\"}\n              width=\"18px\"\n              onClick={() => {}}\n            />\n          </Link>\n\n          <div className=\"vote-number\">\n            {props.row[\"upvoted_by\"] - props.row[\"downvoted_by\"] > 0 && \"+\"}\n            {props.row[\"upvoted_by\"] - props.row[\"downvoted_by\"]}\n          </div>\n          <Link to=\"\">\n            <Image\n              className=\"down-vote\"\n              src={process.env.PUBLIC_URL + \"/icons/arrow_down.svg\"}\n              width=\"18px\"\n              onClick={() => {}}\n            />\n          </Link>\n        </Col>\n\n        <Col>\n          <Link to=\"/discussion/1\">\n            <Button className=\"reply-link\">Reply</Button>\n          </Link>\n        </Col>\n      </Row>\n    </div>\n  );\n}\n\nfunction ListEntryMyComments(props) {\n  return (\n    <div className=\"questionEntry\">\n      <Row>\n        <Col>\n          <Row>\n            <Link to={\"/myComments/\" + props.row.id} className=\"myComment\">\n              {props.row.content}\n            </Link>\n          </Row>\n          <Row>\n            <Col>\n              {/* {props.row.tags.map((t, i) => (\n                <Link key={i} to=\"\" className=\"tags\">\n                  #{t}\n                </Link>\n              ))} */}\n            </Col>\n          </Row>\n        </Col>\n        <Col>\n          <Row className=\"created-at\">Created at: {props.row.createdat}</Row>\n          <Row className=\"created-from\">from {props.row.author}</Row>\n        </Col>\n      </Row>\n      <Row>\n        <Col>{props.row.excerpt}</Col>\n      </Row>\n    </div>\n  );\n}\n\nfunction ListEntryReplies(props) {\n  return (\n    <div className=\"questionEntry\">\n      <Row>\n        <Col className=\"reply-title\">{props.row.content}</Col>\n        <Col className=\"created-time\">Created at: {props.row.createdat}</Col>\n      </Row>\n      <Row className=\"tags\">\n        <Col className=\"author\">from {props.row.author}</Col>\n      </Row>\n    </div>\n  );\n}\n\nfunction ListEntryTest(props) {\n  return (\n    <tr>\n      <td>{props.row.a}</td>\n      <td>{props.row.b}</td>\n      <td>{props.row.c}</td>\n    </tr>\n  );\n}\n\nfunction ListEntrySuggestion(props) {\n  return (\n    <Container>\n      <Col>\n        <Col>\n          <Link\n            to={\"/suggestion/\" + props.row.id}\n            className=\"suggestion-question\"\n          >\n            {props.row.question}\n          </Link>\n        </Col>\n        <Col className=\"suggestion-created-by\">from {props.row.author}</Col>\n        <Col className=\"suggestion-created-at\">\n          Created at: {props.row.createdat}\n        </Col>\n      </Col>\n    </Container>\n  );\n}\n\nfunction ListEntrySimulationResult(props) {\n  return (\n    <Accordion.Item eventKey={props.accordionKey} key={props.accordionKey}>\n      <Row>\n        <Col>\n          <Accordion.Header>\n            <Col className=\"col-md-2\">\n              {props.row.isCorrect ? (\n                <Image\n                  width={\"35px\"}\n                  src={process.env.PUBLIC_URL + \"/icons/RIGHT.svg\"}\n                />\n              ) : (\n                <Image\n                  width={\"35px\"}\n                  src={process.env.PUBLIC_URL + \"/icons/WRONG.svg\"}\n                />\n              )}\n            </Col>\n            <Col className=\"simulation-result-accordion-question-number\">\n              <h6>Question {props.row.quizNum}</h6>\n            </Col>\n            <Col className=\"simulation-result-accordion-score\">\n              {props.row.isCorrect ? (\n                <h6>Score: {props.row.score}</h6>\n              ) : (\n                <h6>Score: {props.row.penalty}</h6>\n              )}\n            </Col>\n          </Accordion.Header>\n        </Col>\n      </Row>\n      <Accordion.Body>\n        <p>\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n          eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad\n          minim veniam, quis nostrud exercitation ullamco laboris nisi ut\n          aliquip ex ea commodo consequat. Duis aute irure dolor in\n          reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\n          pariatur. Excepteur sint occaecat cupidatat non proident, sunt in\n          culpa qui officia deserunt mollit anim id est laborum.\n        </p>\n        {\n          <Row>\n            <Col>\n              <h5>Your Answer: {props.row.ans}</h5>\n            </Col>\n            <Col>\n              <h5>Correct Answer: {\"C\"}</h5>\n              {/*props.row.correctAns*/}\n            </Col>\n          </Row>\n        }\n      </Accordion.Body>\n    </Accordion.Item>\n  );\n}\nfunction ListEntrySelection(props) {\n  return <option value={props.key + 1}>{props.row}</option>;\n}\n\nfunction ListEntry(props) {\n  return (\n    <>\n      {props.scope === \"default\" && (\n        <ListEntryDefault row={props.row} dotted={props.dotted} />\n      )}\n      {props.scope === \"courses\" && <ListEntryCourses row={props.row} />}\n      {props.scope === \"questions\" && <ListEntryQuestions row={props.row} />}\n      {props.scope === \"bookmarks\" && (\n        <ListEntryBookmarkQuestions row={props.row} />\n      )}\n      {props.scope === \"answers\" && <ListEntryAnswers row={props.row} />}\n      {props.scope === \"myComments\" && <ListEntryMyComments row={props.row} />}\n      {props.scope === \"replies\" && <ListEntryReplies row={props.row} />}\n      {props.scope === \"test\" && <ListEntryTest row={props.row} />}\n      {props.scope === \"suggestion\" && <ListEntrySuggestion row={props.row} />}\n      {props.scope === \"simulationResult\" && (\n        <ListEntrySimulationResult\n          row={props.row}\n          accordionKey={props.accordionKey}\n        />\n      )}\n      {props.scope === \"selection\" && <ListEntrySelection row={props.row} />}\n    </>\n  );\n}\n\nexport default ListEntry;\n","import { Container, Row, Col } from \"react-bootstrap\";\nimport { List } from \"./\";\nimport \"./ListGroup.css\";\nimport { Link } from \"react-router-dom\";\n\nfunction ListGroup(props) {\n  return (\n    <Container>\n      {props.lists\n        .filter((useless, i) => i % props.cols === 0)\n        .map((useless, i) => (\n          <Row key={i}>\n            {props.lists\n              .slice(i * props.cols, (i + 1) * props.cols)\n              .map((l, j) => (\n                <Col key={j}>\n                  <Link\n                    className=\"list-attributes\"\n                    to={{\n                      pathname:\n                        \"/listfullpage/\" +\n                        l.title.replace(/\\s/g, \"\").toLowerCase(),\n                    }}\n                    state={{ scope: l.scope, title: l.title, rows: l.rows }}\n                  >\n                    <List\n                      key={i + l.scope + l.title + \"listComp\"}\n                      scope={l.scope}\n                      title={l.title}\n                      rows={l.rows}\n                      rounded={props.rounded}\n                      dotted={props.dotted}\n                    />\n                  </Link>\n                </Col>\n              ))}\n            {props.tiled &&\n              (i + 1) * props.cols > props.lists.length - 1 &&\n              props.lists.length % props.cols > 0 &&\n              [\n                ...Array(props.cols - (props.lists.length % props.cols)).keys(),\n              ].map((key) => <Col></Col>)}\n          </Row>\n        ))}\n    </Container>\n  );\n}\n\nexport default ListGroup;\n","import React from \"react\";\nimport { MarkdownUtil } from \"@sahircansurmeli/react-mde\";\n\nconst insertTex = {\n  name: \"insert-tex\",\n  icon: () => (\n    <img\n      src={process.env.PUBLIC_URL + \"/icons/TeX_logo.svg\"}\n      width=\"26\"\n      height=\"15\"\n      alt=\"Insert TeX\"\n    />\n  ),\n  buttonProps: {\n    \"aria-label\": \"Add TeX\",\n    title: \"Add TeX\",\n  },\n  execute: ({ textApi, initialState }) => {\n    const newSelectionRange = MarkdownUtil.selectWord({\n      text: initialState.text,\n      selection: initialState.selection,\n    });\n\n    const state1 = textApi.setSelectionRange(newSelectionRange);\n\n    const s1 = state1.selection;\n    const text = state1.text;\n    const selectedText = state1.selectedText;\n    let state2;\n\n    if (\n      selectedText.substring(0, 1) === \"$\" &&\n      selectedText.substring(selectedText.length - 1, selectedText.length) ===\n        \"$\"\n    ) {\n      state2 = textApi.replaceSelection(\n        selectedText.substring(1, selectedText.length - 1)\n      );\n      textApi.setSelectionRange({\n        start: s1.start,\n        end: s1.end - 1,\n      });\n    } else if (\n      s1.start >= 1 &&\n      text.substring(s1.start - 1, s1.start) === \"$\" &&\n      text.substring(s1.end, s1.end + 1) === \"$\"\n    ) {\n      textApi.setSelectionRange({\n        start: s1.start - 1,\n        end: s1.end + 1,\n      });\n      state2 = textApi.replaceSelection(state1.selectedText);\n      textApi.setSelectionRange({\n        start: state2.selection.start - state1.selectedText.length,\n        end: state2.selection.end,\n      });\n    } else {\n      // Replaces the current selection with the italic mark up\n      state2 = textApi.replaceSelection(`$${state1.selectedText}$`);\n      // Adjust the selection to not contain the *\n      textApi.setSelectionRange({\n        start: state2.selection.end - 1 - state1.selectedText.length,\n        end: state2.selection.end - 1,\n      });\n    }\n  },\n};\n\nexport default insertTex;\n","import { MarkdownUtil } from \"@sahircansurmeli/react-mde\";\n\nconst saveImage = {\n  execute: async ({ initialState, textApi, context, l18n }) => {\n    if (!context) {\n      throw new Error(\"wrong context\");\n    }\n\n    const {\n      event,\n      pasteOptions: { saveImage, multiple, accept },\n    } = context;\n\n    const items = isPasteEvent(context)\n      ? dataTransferToArray(event.clipboardData.items)\n      : isDragEvent(context)\n      ? dataTransferToArray(event.dataTransfer.items)\n      : fileListToArray(event.target.files);\n\n    const filteredItems = filterItems(items, { multiple, accept });\n\n    for (const index in filteredItems) {\n      const blob = items[index];\n\n      if (blob.size >= 9437184) {\n        window.alert(\n          `Error uploading ${blob.name}\\nFile size cannot exceed 9 MB`\n        );\n        continue;\n      }\n\n      const initialState = textApi.getState();\n      const breaksBeforeCount = MarkdownUtil.getBreaksNeededForEmptyLineBefore(\n        initialState.text,\n        initialState.selection.start\n      );\n\n      const breaksBefore = Array(breaksBeforeCount + 1).join(\"\\n\");\n      const placeHolder = `${breaksBefore}![${l18n.uploadingImage}]()`;\n\n      textApi.replaceSelection(placeHolder);\n\n      const blobContents = await readFileAsync(blob);\n      const savingImage = saveImage(blobContents, blob);\n      const imageUrl = (await savingImage.next()).value;\n\n      const newState = textApi.getState();\n      const uploadingText = newState.text.slice(\n        initialState.selection.start,\n        initialState.selection.start + placeHolder.length\n      );\n\n      if (uploadingText === placeHolder) {\n        textApi.setSelectionRange({\n          start: initialState.selection.start,\n          end: initialState.selection.start + placeHolder.length,\n        });\n\n        const realImageMarkdown = imageUrl\n          ? `${breaksBefore}![image](${imageUrl})`\n          : \"\";\n\n        const selectionDelta = realImageMarkdown.length - placeHolder.length;\n\n        textApi.replaceSelection(realImageMarkdown);\n        textApi.setSelectionRange({\n          start: newState.selection.start + selectionDelta,\n          end: newState.selection.end + selectionDelta,\n        });\n      }\n    }\n  },\n};\n\nasync function readFileAsync(file) {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n\n    reader.onload = () => {\n      resolve(reader.result);\n    };\n\n    reader.onerror = reject;\n    reader.readAsDataURL(file);\n  });\n}\n\nfunction filterItems(items, { multiple, accept }) {\n  let filteredItems = items;\n\n  if (!multiple) {\n    filteredItems = filteredItems.slice(0, 1);\n  }\n\n  if (accept) {\n    const acceptedTypes = accept.split(\",\");\n    const fileExtensions = new Set(\n      acceptedTypes.filter((t) => /^\\.\\w+/.test(t)).map((t) => t.split(\".\")[1])\n    );\n    const mimeTypes = new Set(\n      acceptedTypes.filter((t) => /^[-\\w.]+\\/[-\\w.]+$/.test(t))\n    );\n    const anyTypes = new Set(\n      acceptedTypes\n        .filter((t) => /(audio|video|image)\\/\\*/.test(t))\n        .map((t) => t.split(\"/\")[0])\n    );\n\n    filteredItems = filteredItems.filter(\n      (f) =>\n        fileExtensions.has(f.name.split(\".\")[1]) ||\n        mimeTypes.has(f.type) ||\n        anyTypes.has(f.type.split(\"/\")[0])\n    );\n  }\n\n  return filteredItems;\n}\n\nfunction dataTransferToArray(items) {\n  const result = [];\n  for (const index in items) {\n    const item = items[index];\n    if (item.kind === \"file\") {\n      result.push(item.getAsFile());\n    }\n  }\n  return result;\n}\n\nfunction fileListToArray(list) {\n  const result = [];\n  for (let i = 0; i < list.length; i++) {\n    result.push(list[i]);\n  }\n  return result;\n}\n\nfunction isPasteEvent(context) {\n  return context.event.clipboardData !== undefined;\n}\n\nfunction isDragEvent(context) {\n  return context.event.dataTransfer !== undefined;\n}\n\nexport default saveImage;\n","import React, { useState } from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport ReactMde, {\n  getDefaultToolbarCommands,\n} from \"@sahircansurmeli/react-mde\";\nimport ReactMarkdown from \"react-markdown\";\nimport remarkGfm from \"remark-gfm\";\nimport remarkMath from \"remark-math\";\nimport rehypeKatex from \"rehype-katex\";\nimport rehypeHighlight from \"rehype-highlight\";\nimport { insertTex, saveImage } from \"./textInput/commands\";\nimport PythonEditor from \"react-python-editor\";\nimport { Buffer } from \"buffer\";\nimport Jimp from \"jimp\";\n\nimport \"@sahircansurmeli/react-mde/lib/styles/css/react-mde-all.css\";\nimport \"./textInput/textInput.css\";\nimport \"./stylesheet/TextInput.css\";\nimport \"katex/dist/katex.min.css\";\nimport \"highlight.js/styles/github.css\";\nimport \"./MarkdownPreview.css\";\n\nconst entryFiles = [\n  {\n    fullName: \"main.py\",\n    shortName: \"main.py\",\n    originalContent: `import micropip\n\n# to install other libraries, simply copy the next line and replace numpy with the name of the library you want to install\nawait micropip.install(\"numpy\")\n\n# set up your imports here, below the libraries installation steps\nimport numpy as np\n\n# at this point, you can run any standard Python code and the code from the libraries you have installed\nprint(\"Hello World\")`,\n    content: `import micropip\n\n# to install other libraries, simply copy the next line and replace numpy with the name of the library you want to install\nawait micropip.install(\"numpy\")\n\n# set up your imports here, below the libraries installation steps\nimport numpy as np\n\n# at this point, you can run any standard Python code and the code from the libraries you have installed\nprint(\"Hello World\")`,\n  },\n];\n\nfunction TextInput({\n  value,\n  onChange,\n  selectedTab,\n  onTabChange,\n  childProps,\n  pythonQuestion,\n  dark,\n}) {\n  const [val, setVal] = useState(\"\");\n  const [selTab, setSelTab] = useState(\"write\");\n  const [base64Imgs, setBase64Imgs] = useState({});\n  const [editorHeight, setEditorHeight] = useState(\"100px\");\n  const [isFullScreen, setIsFullScreen] = useState(false);\n\n  const uploadImage = async function* (data, file) {\n    const filename = file.name.replace(/\\[|\\]|\\(|\\)/g, \"\");\n    const [mime, b64] = data.split(\";base64,\");\n    const buffer = Buffer(b64, \"base64\");\n\n    const image = await Jimp.read(buffer);\n\n    const processedBuffer =\n      image.getWidth() > 1024 || image.getHeight() > 1024\n        ? await image\n            .scaleToFit(1024, 1024)\n            .getBufferAsync(mime.split(\"data:\").pop())\n        : b64;\n\n    const processedData =\n      mime + \";base64,\" + processedBuffer.toString(\"base64\");\n\n    setBase64Imgs((prev) => {\n      return {\n        ...prev,\n        [filename]: processedData,\n      };\n    });\n    yield filename;\n  };\n\n  const generatePreviewMarkdown = async (markdown) => {\n    const filenamesToReplace = Object.keys(base64Imgs);\n\n    if (filenamesToReplace.length < 1) {\n      return markdown;\n    }\n\n    const re = new RegExp(\n      Object.keys(base64Imgs)\n        .map(\n          (fn) => `!\\\\[.*\\\\]\\\\(${fn.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\")}\\\\)`\n        )\n        .join(\"|\"),\n      \"gi\"\n    );\n\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        resolve(\n          markdown.replaceAll(re, (match) => {\n            const alt = match.match(/!\\[.*\\]/);\n            const fn = match.match(/\\]\\(.*\\)/);\n            if (!alt || !fn) {\n              return match;\n            }\n            return `${alt[0]}(${base64Imgs[fn[0].slice(2, fn[0].length - 1)]})`;\n          })\n        );\n      });\n    });\n  };\n\n  const handleCopy = (file) => {\n    const re = new RegExp(\"\\n?```py\\n# \" + file.shortName + \".*```\\n?\", \"gs\");\n    const prev = value || val;\n    let newText;\n\n    // DO NOT MODIFY\n    const code = file.shortName.endsWith(\".py\")\n      ? `\n\\`\\`\\`py\n# ${file.shortName}\n\n${file.content}\n\\`\\`\\`\n`\n      : `\n\\`\\`\\`\n${file.content}\n\\`\\`\\`\n`;\n\n    const match = re.exec(prev);\n\n    if (match) {\n      newText =\n        prev.substr(0, match.index) +\n        code +\n        prev.substr(re.lastIndex, prev.length);\n      console.log(match.index, re.lastIndex);\n    } else {\n      newText = prev + code;\n    }\n\n    if (onChange) {\n      onChange(newText);\n    } else {\n      setVal(newText);\n    }\n  };\n\n  return (\n    <Container className=\"python-editor-container\" fluid>\n      {!isFullScreen && (\n        <ReactMde\n          className={\"hidden\"}\n          loadingPreview=\"Loading preview...\"\n          value={value || val}\n          onChange={onChange || setVal}\n          selectedTab={selectedTab || selTab}\n          onTabChange={onTabChange || setSelTab}\n          commands={{ \"insert-tex\": insertTex, \"upload-img\": saveImage }}\n          toolbarCommands={[...getDefaultToolbarCommands(), [\"insert-tex\"]]}\n          generateMarkdownPreview={async (markdown) => {\n            const previewMarkdown = await generatePreviewMarkdown(markdown);\n            return Promise.resolve(\n              <ReactMarkdown\n                remarkPlugins={[remarkGfm, remarkMath]}\n                rehypePlugins={[rehypeKatex, rehypeHighlight]}\n              >\n                {previewMarkdown}\n              </ReactMarkdown>\n            );\n          }}\n          childProps={childProps}\n          paste={{\n            saveImage: uploadImage,\n            command: \"upload-img\",\n            multiple: true,\n          }}\n        />\n      )}\n      {pythonQuestion && (\n        <PythonEditor\n          editorHeight={editorHeight}\n          outputHeight={\"5vh\"}\n          dark={dark}\n          onCopy={handleCopy}\n          projectFiles={entryFiles}\n          backgroundColor={dark ? \"#212529\" : \"#ffffff\"}\n          onFullScreen={(fs) => {\n            setIsFullScreen(fs);\n            if (fs) {\n              setEditorHeight(\"55vh\");\n            } else {\n              setEditorHeight(\"5vh\");\n            }\n          }}\n        />\n      )}\n    </Container>\n  );\n}\n\nexport default TextInput;\n","import React, { useState } from \"react\";\nimport { Collapse, Row, Col, Form, Pagination, Button } from \"react-bootstrap\";\n\nimport List from \"./List\";\nimport \"./stylesheet/Discussion.css\";\n\nconst fakeAnswers = [\n  {\n    id: 1,\n    answer: \"$\\\\int_{a}^{b}{x^2 dx}$\",\n    author: \"Donato\",\n    createdat: \"15:20 12/01/2021\",\n    like: 5,\n    dislike: 2,\n    replies: 3,\n  },\n  {\n    id: 2,\n    answer: \"Morbi leo risus porta ac consectetur ac\",\n    author: \"Jim\",\n    createdat: \"17:30 13/02/2021\",\n    like: 5,\n    dislike: 7,\n    replies: 0,\n  },\n  {\n    id: 3,\n    answer: \"Vestibulum at eros\",\n    author: \"Derek\",\n    createdat: \"19:40 14/03/2021\",\n    like: 9,\n    dislike: 1,\n    replies: 1,\n  },\n];\n\nconst no_pages = 5;\n\nfunction Discussion({ showdiscussion, discussions }) {\n  const [showDiscussion, setShowDiscussion] = useState(showdiscussion || false);\n  const [answers, setAnswers] = useState(fakeAnswers);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  return (\n    <div className=\"discussion-component\">\n      <Row>\n        <Col lg=\"12\">\n          <Button\n            onClick={() => setShowDiscussion((value) => !value)}\n            aria-controls=\"example-collapse-text\"\n            aria-expanded={showDiscussion}\n            className={`w-100 ${\n              showDiscussion ? \"btn-warning\" : \"btn-success\"\n            }`}\n          >\n            {showDiscussion ? \"Hide discussion\" : \"Show discussion\"}\n          </Button>\n        </Col>\n      </Row>\n\n      <Collapse className=\"collapse\" in={showDiscussion}>\n        <Row>\n          <Col lg=\"12\">\n            <Form.Group controlId=\"formGridState\">\n              <Form.Control placeholder=\"Search\" />\n            </Form.Group>\n          </Col>\n          <Col lg=\"12\">\n            <List\n              className=\"discussion-list\"\n              scope=\"answers\"\n              rows={discussions}\n            />\n          </Col>\n          <Col lg=\"12\" sm=\"12\" md=\"12\">\n            {/*<Pagination>*/}\n            {/*  {[...Array(no_pages)].map((_, idx) => (*/}\n            {/*    <Pagination.Item*/}\n            {/*      key={idx + 1}*/}\n            {/*      active={currentPage === idx + 1}*/}\n            {/*      onClick={() => setCurrentPage(idx + 1)}*/}\n            {/*    >*/}\n            {/*      {idx + 1}*/}\n            {/*    </Pagination.Item>*/}\n            {/*  ))}*/}\n            {/*</Pagination>*/}\n          </Col>\n        </Row>\n      </Collapse>\n    </div>\n  );\n}\n\nexport default Discussion;\n","import React, { useRef, useState, useEffect } from \"react\";\nimport { InputGroup, Button } from \"react-bootstrap\";\nimport { AsyncTypeahead } from \"react-bootstrap-typeahead\";\nimport API from \"../api/API\";\n\n// import styles from \"./searchBar/searchBar.module.scss\";\nimport styles from \"./stylesheet/SearchBar.scss\";\nimport \"./stylesheet/SearchBar.css\";\nimport \"react-bootstrap-typeahead/css/Typeahead.css\";\nimport \"react-bootstrap-typeahead/css/Typeahead.bs5.css\";\n\nfunction SearchBar({ apiCall }) {\n  const [suggestions, setSuggestions] = useState([]);\n  const [options, setOptions] = useState([]);\n  const [value, setValue] = useState(\"\");\n\n  useEffect(() => {\n    const charChange = async () => {\n      try {\n        // const res = await apiCall(value);\n      } catch (err) {\n        console.error(err.error);\n      }\n    };\n    charChange();\n  }, [value]);\n\n  const onSearch = async (inputText) => {\n    let results = [];\n    //TODO REMOVE THESE\n    apiCall.courseId = \"19IT0SW\";\n    apiCall.questionId = \"641cca4fd104b2e33e8d4c1b\";\n    //-------------------\n    setValue(inputText);\n    if (inputText.length > 0) {\n      if (apiCall.scope === \"courses\")\n        results = await API.searchCourses(inputText);\n      else if (apiCall.scope === \"questions\")\n        results = await API.searchQuestion(inputText, apiCall.courseId);\n      else if (apiCall.scope === \"discussion\")\n        results = await API.searchDiscussion(inputText, apiCall.questionId);\n\n      setOptions(GenerateOptions(results, apiCall.scope));\n    } else {\n      setOptions([]);\n    }\n  };\n\n  const ref = useRef();\n\n  return (\n    <InputGroup>\n      <AsyncTypeahead\n        id=\"Search bar\"\n        placeholder={\"Search between \" + apiCall.scope + \"...\"}\n        isLoading={false}\n        searchText=\"\"\n        emptyLabel=\"\"\n        promptText=\"... 👀👻\"\n        options={options}\n        filterBy={() => true}\n        renderMenuItemChildren={(option) => <span>{option.label}</span>}\n        ref={ref}\n        onChange={() => {}}\n        onInputChange={onSearch}\n        onSearch={() => {}}\n        className=\"async-type-head\"\n      />\n      {/*{value.length > 0 && (*/}\n      {/*  <Button*/}\n      {/*    variant=\"link\"*/}\n      {/*    onClick={() => {*/}\n      {/*      ref.current.clear();*/}\n      {/*      setValue(\"\");*/}\n      {/*    }}*/}\n      {/*    className={*/}\n      {/*      \"btn-outline-primary border-left-0 border \" + styles.clearButton*/}\n      {/*    }*/}\n      {/*  >*/}\n      {/*    <img*/}\n      {/*      width=\"20\"*/}\n      {/*      height=\"20\"*/}\n      {/*      src={process.env.PUBLIC_URL + \"/icons/x.svg\"}*/}\n      {/*      alt=\"Search\"*/}\n      {/*    />*/}\n      {/*  </Button>*/}\n      {/*)}*/}\n      {/*<Button*/}\n      {/*  variant={value.length > 0 ? \"primary\" : \"link\"}*/}\n      {/*  className=\"btn-outline-primary border-left-0 border\"*/}\n      {/*>*/}\n      {/*  <img*/}\n      {/*    width=\"20\"*/}\n      {/*    height=\"20\"*/}\n      {/*    src={process.env.PUBLIC_URL + \"/icons/SEARCH.svg\"}*/}\n      {/*    alt=\"Search\"*/}\n      {/*  />*/}\n      {/*</Button>*/}\n    </InputGroup>\n  );\n}\n\nfunction GenerateOptions(results, scope) {\n  var options = [];\n\n  results.forEach((result) => {\n    if (scope === \"courses\")\n      options.push({\n        id: result._id,\n        label: result.name + \" - \" + result._id,\n      });\n    else if (scope === \"questions\")\n      // console.log(result);\n      options.push({\n        id: result.id,\n        label: result.title + \" - \" + result.owner,\n      });\n    else if (scope === \"discussion\")\n      options.push({\n        id: result.id,\n        label: result.id + \" - \" + result.author,\n      });\n  });\n\n  return options;\n}\n\nexport default SearchBar;\n","import { useState } from \"react\";\nimport { Alert, Button } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\n\nfunction DebugPaths() {\n  const style = { padding: \"5px\" };\n  const [show, setShow] = useState(true);\n  return (\n    <Alert show={show} onClose={() => setShow(false)} dismissible>\n      <b>Dev only: </b>\n      <Link style={style} to=\"/login\">\n        Login\n      </Link>\n      <Link style={style} to=\"/\">\n        Home\n      </Link>\n      <Link style={style} to=\"/profile\">\n        Profile\n      </Link>\n      <Link style={style} to=\"/courses\">\n        Courses\n      </Link>\n      <Link\n        style={style}\n        to=\"/course/ABCDEF\"\n        state={{ courseId: \"courseId\", title: \"Course Name\" }}\n      >\n        Course\n      </Link>\n      <Link style={style} to=\"/question/QUESTID\">\n        Question\n      </Link>\n      <Link style={style} to=\"/myquestions\">\n        MyQuestions\n      </Link>\n      <Link style={style} to=\"/mycomments\">\n        MyComments\n      </Link>\n      <Link style={style} to=\"/myreplies\">\n        MyReplies\n      </Link>\n      <Link style={style} to=\"/discussion/QUESTID\">\n        Discussion\n      </Link>\n      <Link style={style} to=\"/startsimulation/\">\n        Simulation\n      </Link>\n      <Link style={style} to=\"/settings\">\n        UserSettings\n      </Link>\n      <Link style={style} to=\"/todel\">\n        Exam\n      </Link>\n      <Link style={style} to=\"/python-editor\">\n        Python Editor\n      </Link>\n    </Alert>\n  );\n}\n\nexport default DebugPaths;\n","import { Breadcrumb } from \"react-bootstrap\";\nimport \"./stylesheet/BreadCrumb.scss\";\nimport { matchPath, useLocation } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\n\nconst breadcrumbRecord = [\n  {\n    path: \"/\",\n    title: \"Home\",\n    children: [\n      {\n        path: \"/replies\",\n        title: \"Relies\",\n        children: [],\n      },\n      {\n        path: \"/newquestionsincoursesenrolled\",\n        title: \"Newly Enrolled Courses\",\n        children: [],\n      },\n      {\n        path: \"/myquestions\",\n        title: \"My Questions\",\n        children: [],\n      },\n      {\n        path: \"/myanswers\",\n        title: \"My Answers\",\n        children: [],\n      },\n    ],\n  },\n  {\n    path: \"/courses\",\n    title: \"Courses\",\n    children: [],\n  },\n  {\n    path: \"/simulationview\",\n    title: \"Simulation Preview\",\n    children: [\n      {\n        path: `/startsimulation`,\n        title: `Simulation Setup`,\n        children: [\n          {\n            path: `/simulation`,\n            title: `Simulation`,\n            children: [\n              {\n                path: `/simulationresult`,\n                title: `Simulation Result`,\n                children: [],\n              },\n            ],\n          },\n        ],\n      },\n    ],\n  },\n  {\n    path: \"/settings\",\n    title: \"Setting\",\n  },\n  {\n    path: `/addquestion`,\n    title: `Add Questions`,\n    children: [],\n  },\n  {\n    path: `/profile`,\n    title: `Profile`,\n    children: [],\n  },\n  {\n    path: `/bookmarks`,\n    title: `Bookmarks`,\n    children: [],\n  },\n];\n\nexport default function BreadCrumb(props) {\n  const fakeCourses = [\n    { code: \"A0B1C2\", course: \"Analysis 1\", cfu: 10, professor: \"Mario Rossi\" },\n    {\n      code: \"D3E4F5\",\n      course: \"Physics 1\",\n      cfu: 10,\n      professor: \"Stefano Bianchi\",\n    },\n    {\n      code: \"G6H7I8\",\n      course: \"Geometry\",\n      cfu: 10,\n      professor: \"Giuseppe Verdi\",\n    },\n  ];\n\n  const location = useLocation();\n\n  const [locationState, setLocationState] = useState(location);\n  useEffect(() => {\n    setLocationState(location);\n    console.warn(crumbPathArr);\n    console.log(`current location: ${location.pathname}`);\n  }, [location, setLocationState]);\n\n  const [crumbPathArr, setCrumbPathArr] = useState(\n    // find object of path from the root lvl\n    // default = (Home, \"/\") => only toggle the root\n    breadcrumbRecord.filter((e) => {\n      if (location.pathname === e.path) {\n        return e;\n      }\n    })\n  );\n\n  function getStringArray(arr, str) {\n    const index = arr.indexOf(str);\n\n    if (index === -1) {\n      return arr;\n    }\n    return arr.slice(0, index + 1);\n  }\n\n  // when path change => reload || redirect\n  useEffect(() => {\n    let isRoot = false;\n\n    breadcrumbRecord.forEach((e) => {\n      if (locationState.pathname === e.path) {\n        isRoot = true;\n      }\n    });\n\n    // if the reloaded page is root => re-route path\n    isRoot &&\n      setCrumbPathArr(\n        breadcrumbRecord.filter((e) => {\n          if (locationState.pathname === e.path) {\n            isRoot = true;\n            return e;\n          }\n        })\n      );\n\n    // if the reloaded page is not root => find parent-child path\n    if (!isRoot) {\n      let isNew = true;\n      let foundPath;\n      crumbPathArr.forEach((i) => {\n        if (locationState.pathname === i.path) {\n          isNew = false;\n        }\n      });\n      // if reloaded page is one of the previous path\n      if (!isNew) {\n        foundPath = getStringArray(crumbPathArr, locationState.pathname);\n      }\n      // if it is a new path\n      else {\n        foundPath = findChild(crumbPathArr, locationState.pathname);\n      }\n\n      setCrumbPathArr(foundPath);\n    }\n  }, [location, locationState, setLocationState]);\n\n  const findChild = (path, dest) => {\n    const root = path[path.length - 1];\n\n    // the end of path\n    if (!root) {\n      return path;\n    }\n\n    // recursively find the last child\n    for (let i = 0; i < root.children.length; i++) {\n      if (dest.includes(root.children[i].path)) {\n        path.push(root.children[i]);\n        findChild(path, dest);\n        break;\n      }\n    }\n\n    return path;\n  };\n\n  return (\n    <>\n      <Breadcrumb className=\"breadcrumb\">\n        {crumbPathArr?.map((e, index) => {\n          return index === crumbPathArr.length - 1 ? (\n            <Breadcrumb.Item\n              active\n              href={e.path}\n              key={\"breadcrumb-index:\" + index + e.path}\n            >\n              {e.title}\n            </Breadcrumb.Item>\n          ) : (\n            <Breadcrumb.Item\n              href={e.path}\n              key={\"breadcrumb-index:\" + index + e.path}\n            >\n              {e.title}\n            </Breadcrumb.Item>\n          );\n        })}\n      </Breadcrumb>\n    </>\n  );\n}\n","import { useState } from \"react\";\nimport { Pagination } from \"react-bootstrap\";\nimport \"./stylesheet/MyPagination.scss\";\n\nexport default function MyPagination(props) {\n  let [active, setActive] = useState(1);\n  let items = [];\n  for (let num = 1; num <= 5; num++) {\n    items.push(\n      <Pagination.Item\n        key={num}\n        active={num === active}\n        onClick={() => {\n          setActive((active = num));\n        }}\n      >\n        {num}\n      </Pagination.Item>\n    );\n  }\n\n  return (\n    <Pagination>\n      <Pagination.Prev />\n      {items}\n      <Pagination.Next />\n    </Pagination>\n  );\n}\n","import \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { useState, useEffect } from \"react\";\nimport { Container, Row, Col, Alert, Button } from \"react-bootstrap\";\nimport {\n  Routes,\n  Route,\n  Navigate as Redirect,\n  Link,\n  useLocation,\n} from \"react-router-dom\";\nimport {\n  NavigationBar,\n  Footer,\n  DebugPaths,\n  TextInput,\n  BreadCrumb,\n} from \"./base/\";\nimport {\n  AddQuestion,\n  Answers,\n  CoursesList,\n  Exam,\n  Home,\n  LoginForm,\n  MyQuestions,\n  MyComments,\n  MyReplies,\n  Profile,\n  Questions,\n  Replies,\n  UserSettings,\n  ListFullPage,\n  Bookmarks,\n  StartSimulation,\n  Simulation,\n  SimulationResult,\n  SimulationAccess,\n} from \"./pages/\";\nimport GlobalStateProvider from \"./GlobalStateProvider\";\n// import parsedQuestions from \"./constants/parsed\";\n// import API from './api/API'\n\nfunction App() {\n  const [loggedIn, setLoggedIn] = useState(true); // TODO: reset to false, true used for debugging purposes\n  const [showHints, setShowHints] = useState(false);\n  const [showDiscussion, setShowDiscussion] = useState(false);\n  const [admin, setAdmin] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const [dark, setDark] = useState(false);\n\n  useEffect(() => {\n    if (!loggedIn) setMessage(\"\");\n  }, [loggedIn]);\n\n  // useEffect(() => {\n  // \tconst checkAuth = async () => {\n  // \t\ttry {\n  // \t\t\tconst user = await API.getUserInfo()\n  // \t\t\tsetLoggedIn(true)\n  // \t\t\tuser.admin ? setAdmin(true) : setAdmin(false)\n  // \t\t} catch (err) {\n  // \t\t\tconsole.error(err.error)\n  // \t\t}\n  // \t}\n  // \tcheckAuth()\n  // }, [])\n\n  // const doLogin = async credentials => {\n  // \ttry {\n  // \t\tconst username = await API.login(credentials)\n  // \t\tsetLoggedIn(true)\n  // \t\tsetMessage({ msg: `Welcome, ${username}!`, type: 'success' })\n  // \t\tconst user = await API.getUserInfo()\n  // \t\tuser.admin ? setAdmin(true) : setAdmin(false)\n  // \t} catch (err) {\n  // \t\tsetMessage({ msg: err, type: 'danger' })\n  // \t}\n  // }\n\n  const doLogout = async () => {\n    // await API.logout()\n    setLoggedIn(false);\n    setAdmin(false);\n  };\n\n  return (\n    <GlobalStateProvider>\n      <Container fluid>\n        <Row>\n          <Col className=\"px-0\">\n            <NavigationBar\n              dark={dark}\n              setdark={setDark}\n              logged={loggedIn}\n              setlogged={setLoggedIn}\n              showhints={showHints}\n              setshowhints={setShowHints}\n              showdiscussion={showDiscussion}\n              setshowdiscussion={setShowDiscussion}\n              logout={doLogout}\n            />\n          </Col>\n        </Row>\n        <Row>\n          <BreadCrumb />\n        </Row>\n        <Row className=\"my-4\">\n          <Col xs={6} className=\"mx-auto\">\n            {message && (\n              <Alert\n                variant={message.type}\n                onClose={() => setMessage(\"\")}\n                dismissible={!message.noclose}\n              >\n                {message.msg}\n              </Alert>\n            )}\n          </Col>\n        </Row>\n        <DebugPaths />\n        <Row className=\"my-4\">\n          <Col sm={11} md={10} className=\"mx-auto\">\n            {/*\n\t\t\t\t\t<Exam question={parsedQuestions.quiz.question} />\n\t\t\t\t\t*/}\n            {loggedIn ? (\n              <Routes>\n                <Route path=\"/*\" element={<Redirect to=\"/\" />} />\n                <Route path=\"/\" element={<Home />} />\n                <Route path=\"/profile\" element={<Profile />} />\n                <Route path=\"/settings\" element={<UserSettings />} />\n                <Route path=\"/courses\" element={<CoursesList />} />\n                <Route path=\"/course/:courseid\" element={<Questions />} />\n                <Route\n                  path=\"/question/:questionid\"\n                  element={\n                    <Answers\n                      showhints={showHints}\n                      showdiscussion={showDiscussion}\n                    />\n                  }\n                />\n                <Route path=\"/myquestions\" element={<MyQuestions />} />\n                <Route path=\"/mycomments\" element={<MyComments />} />\n                <Route path=\"/myreplies\" element={<MyReplies />} />\n                <Route path=\"/discussion/:questionid\" element={<Replies />} />\n                <Route\n                  path=\"/simulation/:simulationType\"\n                  element={<Simulation />}\n                />\n                <Route path=\"/addquestion\" element={<AddQuestion />} />\n                <Route path=\"/todel\" element={<Exam />} />\n                <Route\n                  path=\"/listfullpage/:listName\"\n                  element={<ListFullPage />}\n                />\n                <Route path=\"/bookmarks\" element={<Bookmarks />} />\n                <Route\n                  path=\"/startsimulation/:courseName\"\n                  element={<StartSimulation />}\n                />\n                <Route\n                  path=\"/simulationresult/:courseName\"\n                  element={<SimulationResult />}\n                />\n                <Route path=\"/simulationview\" element={<SimulationAccess />} />\n                <Route\n                  path=\"/python-editor\"\n                  element={<TextInput dark={dark} pythonQuestion />}\n                />{\" \"}\n                {/* For debugging purposes */}\n              </Routes>\n            ) : (\n              <Routes>\n                <Route path=\"/*\" element={<Redirect to=\"/login\" />} />\n                <Route\n                  path=\"/login\"\n                  element={<LoginForm login={() => setLoggedIn(true)} />}\n                />\n              </Routes>\n            )}\n          </Col>\n        </Row>\n        <Row>\n          <Footer />\n        </Row>\n      </Container>\n    </GlobalStateProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nlet basename = \"\";\nconst { PUBLIC_URL } = process.env;\n\nif (PUBLIC_URL) {\n  const splitArray = PUBLIC_URL.split(\"://\")[1].split(\"/\");\n  basename =\n    (splitArray.length > 1 && `/${splitArray[splitArray.length - 1]}`) || \"\";\n}\n\nReactDOM.render(\n  // <React.StrictMode>\n  <Router basename={basename}>\n    <App />\n  </Router>,\n  // </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}