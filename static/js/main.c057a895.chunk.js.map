{"version":3,"sources":["base/searchBar/searchBar.module.scss","icons.js","base/NavigationBar.js","img/logoSkeeellLight.svg","img/logoSkeeelledLight.svg","img/logoSkeeelledDark.svg","img/logoWeeeOpen.svg","img/logoSkeeellDark.svg","img/logoSkeeelledLightFooter.svg","img/logoSkeeelledDarkFooter.svg","base/Footer.js","base/List.js","base/MarkdownPreview.js","base/QuestionPreview.js","base/ListEntry.js","base/ListGroup.js","base/textInput/commands/insertTex.js","base/textInput/commands/saveImage.js","base/TextInput.js","base/Discussion.js","base/SearchBar.js","base/Suggestion.js","base/DebugPaths.js","pages/AddQuestion.js","pages/Answers.js","pages/CoursesList.js","pages/Exam.js","pages/Home.js","pages/LoginForm.js","pages/Profile.js","pages/Questions.js","pages/Replies.js","pages/UserSettings.js","pages/ListFullPage.js","pages/Bookmarks.js","pages/StartSimulation.js","pages/Simulation.js","pages/SimulationResult.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","iconUser","xmlns","width","height","fill","className","viewBox","d","fillRule","iconLogout","stroke","strokeWidth","strokeLinecap","strokeLinejoin","iconAdmin","fakeQuestions","id","question","author","createdat","tags","excerpt","NavigationBar","props","useState","questions","Navbar","bg","dark","variant","to","Brand","Image","src","process","admin","Nav","Link","as","Collapse","NavDropdown","title","align","lg","Item","href","pathname","state","scope","rows","Divider","Form","Switch","label","defaultChecked","onChange","setdark","showhints","setshowhints","showdiscussion","setshowdiscussion","logged","onClick","logout","Footer","logoSkeeelledLightFooter","alt","logoWeeeOpen","logoSkeeellLight","HeaderColspan","ListDefault","rounded","colSpan","map","r","row","dotted","Table","striped","borderless","ListQuestions","ListAnswers","ListReplies","ListSuggestion","Container","ListSelection","FloatingLabel","Select","i","List","MarkdownPreview","React","memo","markdown","remarkPlugins","remarkGfm","remarkMath","rehypePlugins","rehypeKatex","rehypeHighlight","QuestionPreview","showAdvice","setShowAdvice","Card","Header","class","course_code","course_name","date","toLocaleDateString","year","month","day","Body","Title","text","advice","Button","ListEntryDefault","cell","ListEntryCourses","code","courseId","course","professor","cfu","ListEntryQuestions","Row","Col","t","ListEntryAnswers","replies","rowspan","answer","like","dislike","ListEntryReplies","reply","ListEntryTest","a","b","c","ListEntrySuggestion","ListEntrySelection","value","key","ListEntry","ListGroup","lists","filter","useless","cols","slice","l","replace","toLowerCase","tiled","length","Array","keys","insertTex","name","icon","buttonProps","execute","state2","textApi","initialState","newSelectionRange","MarkdownUtil","selectWord","selection","state1","setSelectionRange","s1","selectedText","substring","replaceSelection","start","end","saveImage","context","l18n","Error","event","pasteOptions","multiple","accept","items","isPasteEvent","dataTransferToArray","clipboardData","isDragEvent","dataTransfer","fileListToArray","target","files","filteredItems","filterItems","index","getState","breaksBeforeCount","getBreaksNeededForEmptyLineBefore","breaksBefore","join","placeHolder","uploadingImage","blob","readFileAsync","blobContents","savingImage","next","imageUrl","newState","realImageMarkdown","selectionDelta","file","Promise","resolve","reject","reader","FileReader","onload","result","onerror","readAsDataURL","acceptedTypes","split","fileExtensions","Set","test","mimeTypes","anyTypes","f","has","type","item","kind","push","getAsFile","list","undefined","TextInput","selectedTab","onTabChange","childProps","val","setVal","selTab","setSelTab","base64Imgs","setBase64Imgs","uploadImage","data","prev","generatePreviewMarkdown","Object","re","RegExp","fn","setTimeout","replaceAll","match","loadingPreview","commands","toolbarCommands","getDefaultToolbarCommands","generateMarkdownPreview","previewMarkdown","paste","command","fakeAnswers","Discussion","showDiscussion","setShowDiscussion","answers","currentPage","setCurrentPage","in","Group","controlId","Control","placeholder","sm","md","Pagination","_","idx","active","SearchBar","apiCall","fakeSuggestions","suggestions","setSuggestions","setValue","ref","useRef","InputGroup","isLoading","searchText","emptyLabel","promptText","options","filterBy","renderMenuItemChildren","option","onInputChange","inputText","onSearch","current","clear","styles","clearButton","Suggestion","fluid","DebugPaths","style","padding","Alert","dismissible","AddQuestion","courses","Label","size","Check","fakeQuestion","Date","Answers","textArea","PaginationRow","setActive","num","First","Last","CoursesList","body","Stack","gap","Exam","Home","tests","LoginForm","username","setUsername","password","setPassword","errorMessage","setErrorMessage","Modal","Dialog","ev","preventDefault","credentials","valid","checkPassword","login","Profile","xs","Questions","query","matches","setMatches","useEffect","media","window","matchMedia","listener","addEventListener","removeEventListener","useMediaQuery","useLocation","Answer","ans","Replies","UserSettings","fake","ListFullPage","location","Bookmarks","StartSimulation","isMulti","setIsMulti","numQuestions","setNumQuestions","penaltyScore","setPenaltyScore","maxScore","setMaxScore","userInput","setUserInput","locationState","console","log","Text","FormControl","e","Number","isNaN","penalty","max","Simulation","simulationRandomQuizType","pageNum","setPageNum","randomizer","Math","floor","random","quizType","setQuizType","FinishModal","show","setShow","onHide","closeButton","pointPerCorrectAns","numPage","SimulationResult","numCorrect","numPenalty","numNotGiven","pointPerWrong","pointPerCorrect","abs","bordered","hover","App","loggedIn","setLoggedIn","showHints","setShowHints","setAdmin","message","setMessage","setDark","doLogout","setlogged","onClose","noclose","msg","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","basename","PUBLIC_URL","splitArray","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c057a895.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"clearButton\":\"searchBar_clearButton__2N0gd\",\"textInput\":\"searchBar_textInput__2HyW8\"};","const iconUser = (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"24\"\n    height=\"24\"\n    fill=\"currentColor\"\n    className=\"bi bi-person-circle\"\n    viewBox=\"0 0 16 16\"\n  >\n    <path d=\"M11 6a3 3 0 1 1-6 0 3 3 0 0 1 6 0z\" />\n    <path\n      fillRule=\"evenodd\"\n      d=\"M0 8a8 8 0 1 1 16 0A8 8 0 0 1 0 8zm8-7a7 7 0 0 0-5.468 11.37C3.242 11.226 4.805 10 8 10s4.757 1.225 5.468 2.37A7 7 0 0 0 8 1z\"\n    />\n  </svg>\n);\n\nconst iconLogo = (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"24\"\n    height=\"20\"\n    fill=\"currentColor\"\n    className=\"bi bi-book\"\n    viewBox=\"0 1 16 16\"\n  >\n    <path d=\"M1 2.828c.885-.37 2.154-.769 3.388-.893 1.33-.134 2.458.063 3.112.752v9.746c-.935-.53-2.12-.603-3.213-.493-1.18.12-2.37.461-3.287.811V2.828zm7.5-.141c.654-.689 1.782-.886 3.112-.752 1.234.124 2.503.523 3.388.893v9.923c-.918-.35-2.107-.692-3.287-.81-1.094-.111-2.278-.039-3.213.492V2.687zM8 1.783C7.015.936 5.587.81 4.287.94c-1.514.153-3.042.672-3.994 1.105A.5.5 0 0 0 0 2.5v11a.5.5 0 0 0 .707.455c.882-.4 2.303-.881 3.68-1.02 1.409-.142 2.59.087 3.223.877a.5.5 0 0 0 .78 0c.633-.79 1.814-1.019 3.222-.877 1.378.139 2.8.62 3.681 1.02A.5.5 0 0 0 16 13.5v-11a.5.5 0 0 0-.293-.455c-.952-.433-2.48-.952-3.994-1.105C10.413.809 8.985.936 8 1.783z\" />\n  </svg>\n);\n\nconst iconLogout = (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"24\"\n    height=\"24\"\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    stroke=\"currentColor\"\n    strokeWidth=\"2\"\n    strokeLinecap=\"round\"\n    strokeLinejoin=\"round\"\n  >\n    <path d=\"M10 3H6a2 2 0 0 0-2 2v14c0 1.1.9 2 2 2h4M16 17l5-5-5-5M19.8 12H9\" />\n  </svg>\n);\n\nconst iconAdmin = (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"16\"\n    height=\"24\"\n    fill=\"currentColor\"\n    className=\"bi bi-gear-fill\"\n    viewBox=\"0 2 16 16\"\n  >\n    <path d=\"M9.405 1.05c-.413-1.4-2.397-1.4-2.81 0l-.1.34a1.464 1.464 0 0 1-2.105.872l-.31-.17c-1.283-.698-2.686.705-1.987 1.987l.169.311c.446.82.023 1.841-.872 2.105l-.34.1c-1.4.413-1.4 2.397 0 2.81l.34.1a1.464 1.464 0 0 1 .872 2.105l-.17.31c-.698 1.283.705 2.686 1.987 1.987l.311-.169a1.464 1.464 0 0 1 2.105.872l.1.34c.413 1.4 2.397 1.4 2.81 0l.1-.34a1.464 1.464 0 0 1 2.105-.872l.31.17c1.283.698 2.686-.705 1.987-1.987l-.169-.311a1.464 1.464 0 0 1 .872-2.105l.34-.1c1.4-.413 1.4-2.397 0-2.81l-.34-.1a1.464 1.464 0 0 1-.872-2.105l.17-.31c.698-1.283-.705-2.686-1.987-1.987l-.311.169a1.464 1.464 0 0 1-2.105-.872l-.1-.34zM8 10.93a2.929 2.929 0 1 1 0-5.86 2.929 2.929 0 0 1 0 5.858z\" />\n  </svg>\n);\n\nconst iconMeeting = (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"16\"\n    height=\"16\"\n    viewBox=\"0 4 28 24\"\n    fill=\"none\"\n    stroke=\"#ffffff\"\n    strokeWidth=\"2\"\n    strokeLinecap=\"round\"\n    strokeLinejoin=\"round\"\n  >\n    <path d=\"M20 14.66V20a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h5.34\"></path>\n    <polygon points=\"18 2 22 6 12 16 8 16 8 12 18 2\"></polygon>\n  </svg>\n);\n\nconst iconAdd = (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"20\"\n    height=\"20\"\n    fill=\"currentColor\"\n    className=\"bi bi-plus-circle-fill\"\n    viewBox=\"0 0 16 18\"\n  >\n    <path d=\"M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zM8.5 4.5a.5.5 0 0 0-1 0v3h-3a.5.5 0 0 0 0 1h3v3a.5.5 0 0 0 1 0v-3h3a.5.5 0 0 0 0-1h-3v-3z\" />\n  </svg>\n);\n\nconst iconDelete = (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"24\"\n    height=\"24\"\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    stroke=\"#ffffff\"\n    strokeWidth=\"2\"\n    strokeLinecap=\"round\"\n    strokeLinejoin=\"round\"\n  >\n    <polyline points=\"3 6 5 6 21 6\"></polyline>\n    <path d=\"M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2\"></path>\n    <line x1=\"10\" y1=\"11\" x2=\"10\" y2=\"17\"></line>\n    <line x1=\"14\" y1=\"11\" x2=\"14\" y2=\"17\"></line>\n  </svg>\n);\n\nexport {\n  iconUser,\n  iconLogo,\n  iconLogout,\n  iconAdmin,\n  iconMeeting,\n  iconAdd,\n  iconDelete,\n};\n","import {\n  Navbar,\n  Nav,\n  NavDropdown,\n  Image,\n  Form,\n  OverlayTrigger,\n  Popover,\n} from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { iconUser, iconLogout, iconAdmin } from \"../icons.js\";\nimport \"./NavigationBar.css\";\nimport { useState } from \"react\";\n\nconst fakeQuestions = [\n  {\n    id: 1,\n    question: \"What is a vector?\",\n    author: \"Donato\",\n    createdat: \"15:20 12/01/2021\",\n    tags: [\"vectors\"],\n    excerpt: \"Cras justo odio...\",\n  },\n  {\n    id: 2,\n    question: \"Who is Maxwell?\",\n    author: \"Jim\",\n    createdat: \"17:30 13/02/2021\",\n    tags: [\"physics\"],\n    excerpt: \"Cras justo odio...\",\n  },\n  {\n    id: 3,\n    question: \"How many meters per second?\",\n    author: \"Derek\",\n    createdat: \"19:40 14/03/2021\",\n    tags: [\"physics\", \"kinematic\"],\n    excerpt: \"Cras justo odio...\",\n  },\n];\n\nfunction NavigationBar(props) {\n  const [questions, setQuestions] = useState(fakeQuestions /*[]*/);\n\n  return (\n    <Navbar\n      id={\"navbar\"}\n      bg={props.dark ? \"dark\" : \"light\"}\n      variant={props.dark ? \"dark\" : \"light\"}\n    >\n      <Link to={\"/\"}>\n        <Navbar.Brand>\n          <Image\n            id={\"navbar-logo-skeeelled\"}\n            src={\n              props.dark\n                ? process.env.PUBLIC_URL + \"/img/logoSkeeelledDark.svg\"\n                : process.env.PUBLIC_URL + \"/img/logoSkeeelledLight.svg\"\n            }\n            className=\"logo\"\n          />\n        </Navbar.Brand>\n      </Link>\n\n      {props.admin ? (\n        <Link to=\"/admin/list\">\n          <Navbar.Brand>{iconAdmin} Admin panel </Navbar.Brand>\n        </Link>\n      ) : null}\n\n      <Nav.Link\n        as={Link}\n        id={props.dark ? \"course-link-dark\" : \"course-link\"}\n        to=\"/courses\"\n      >\n        Courses\n      </Nav.Link>\n\n      <Nav.Link\n        as={Link}\n        id={props.dark ? \"add-question-link-dark\" : \"add-question-link\"}\n        to=\"/addquestion\"\n      >\n        Add question\n      </Nav.Link>\n\n      <Nav id={\"user-dropdown\"}>\n        <Navbar.Collapse className=\"mr-4 mt-0\">\n          <NavDropdown\n            id=\"dropdown-menu-align-responsive-2\"\n            title={iconUser}\n            align={{ lg: \"end\" }}\n          >\n            <Link to=\"/profile\" className=\"dropdown-link\">\n              <NavDropdown.Item href=\"#action/3.1\">Profile</NavDropdown.Item>\n            </Link>\n            <Link\n              to={{ pathname: \"/bookmarks\" }}\n              state={{\n                scope: \"questions\",\n                title: \"Bookmarked Questions\",\n                rows: questions,\n              }}\n            >\n              <NavDropdown.Item href=\"#action/3.2\">Bookmarks</NavDropdown.Item>\n            </Link>\n            <Link to=\"/settings\" className=\"dropdown-link\">\n              <NavDropdown.Item href=\"#action/3.3\">Settings</NavDropdown.Item>\n            </Link>\n            <NavDropdown.Divider />\n            <div className=\"dropdown-item\">\n              <Form.Switch\n                label=\"Dark\"\n                id=\"custom-switch-dark\"\n                defaultChecked={props.dark}\n                onChange={() => props.setdark(!props.dark)}\n              />\n            </div>\n            <div className=\"dropdown-item\">\n              <Form.Switch\n                label=\"Show hints\"\n                id=\"custom-switch-hint\"\n                defaultChecked={props.showhints}\n                onChange={() => props.setshowhints(!props.showhints)}\n              />\n            </div>\n            <div className=\"dropdown-item\">\n              <Form.Switch\n                label=\"Show discussion\"\n                id=\"custom-switch-disc\"\n                defaultChecked={props.showdiscussion}\n                onChange={() => props.setshowdiscussion(!props.showdiscussion)}\n              />\n            </div>\n            {props.logged && (\n              <>\n                <NavDropdown.Divider />\n                <NavDropdown.Item onClick={props.logout}>\n                  Logout {iconLogout}\n                </NavDropdown.Item>\n              </>\n            )}\n          </NavDropdown>\n        </Navbar.Collapse>\n      </Nav>\n\n      {/* <Form.Switch label=\"Check this switch\" type=\"switch\" id=\"custom-switch\"/> */}\n\n      {/* <OverlayTrigger\n\t\t\t\ttrigger=\"click\"\n\t\t\t\tkey=\"bottom\"\n\t\t\t\tplacement=\"bottom\"\n\t\t\t\toverlay={\n\t\t\t\t\t<Popover id=\"popover-positioned-bottom\">\n\t\t\t\t\t<Popover.Header as=\"h3\">Popover bottom</Popover.Header>\n\t\t\t\t\t<Popover.Body>\n\t\t\t\t\t\t<strong>Holy guacamole!</strong> Check this info.\n\t\t\t\t\t</Popover.Body>\n\t\t\t\t\t</Popover>\n\t\t\t\t}\n\t\t\t\t>\n\t\t\t\t<Button variant=\"secondary\">Popover on bottom</Button>\n\t\t\t\t</OverlayTrigger>\n\t\t\t*/}\n    </Navbar>\n  );\n}\n\nexport default NavigationBar;\n","export default __webpack_public_path__ + \"static/media/logoSkeeellLight.196ac81d.svg\";","export default __webpack_public_path__ + \"static/media/logoSkeeelledLight.89a46839.svg\";","export default __webpack_public_path__ + \"static/media/logoSkeeelledDark.8ee41200.svg\";","export default __webpack_public_path__ + \"static/media/logoWeeeOpen.a7c8f3ee.svg\";","export default __webpack_public_path__ + \"static/media/logoSkeeellDark.aa3ae18b.svg\";","export default __webpack_public_path__ + \"static/media/logoSkeeelledLightFooter.79648b4a.svg\";","export default __webpack_public_path__ + \"static/media/logoSkeeelledDarkFooter.e5149d82.svg\";","import { Image } from \"react-bootstrap\";\nimport {\n  logoSkeeelledLight,\n  logoSkeeellLight,\n  logoSkeeelledDark,\n  logoSkeeellDark,\n  logoWeeeOpen,\n} from \"../img/\";\nimport {\n  logoSkeeelledLightFooter,\n  logoSkeeellLightFooter,\n  logoSkeeelledDarkFooter,\n  logoSkeeellDarkFooter,\n} from \"../img/\";\nimport \"./Footer.css\";\n\nfunction Footer() {\n  return (\n    <div id={\"footer\"} className=\"mx-auto\">\n      <h5 id={\"skeeelled\"} className=\"mx-auto\">\n        <a\n          id={\"skeeelled-logo-link\"}\n          href={\"https://github.com/weee-open/skeeelled\"}\n        >\n          <Image\n            id={\"skeeelled-logo\"}\n            src={logoSkeeelledLightFooter}\n            alt={\"skeeelled\"}\n          />\n        </a>\n        is a tool realized by\n        <a href={\"https://weeeopen.polito.it\"}>\n          <Image id={\"weee-open-logo\"} src={logoWeeeOpen} alt={\"WEEE Open\"} />\n        </a>\n      </h5>\n      <h5 id={\"skeeell\"} className=\"mx-auto\">\n        See more about\n        <a href={\"https://weeeopen.polito.it/skeeell\"}>\n          <Image id={\"skeeell-logo\"} src={logoSkeeellLight} alt={\"skeeell\"} />\n        </a>\n      </h5>\n    </div>\n  );\n}\n\nexport default Footer;\n","import {\n  Col,\n  Container,\n  Row,\n  Table,\n  Form,\n  FloatingLabel,\n  Button,\n  Image,\n} from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { ListEntry, SearchBar } from \"./\";\nimport \"./List.css\";\n\nfunction HeaderColspan(scope) {\n  switch (scope) {\n    case \"courses\":\n      return \"4\";\n    case \"questions\":\n      return \"4\";\n    default:\n      return \"10\";\n  }\n}\n\nfunction ListDefault({ props }) {\n  return (\n    <>\n      {props.rounded ? (\n        <table className=\"list roundedList\">\n          <thead>\n            <tr>\n              <th className=\"listTitle\" colSpan={HeaderColspan(props.scope)}>\n                {props.title}\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            {props.rows.map((r) => (\n              <ListEntry row={r} scope={props.scope} dotted={props.dotted} />\n            ))}\n          </tbody>\n        </table>\n      ) : (\n        <Table striped borderless className=\"list\">\n          <thead className=\"listTitle\">\n            <tr>\n              <th colSpan={HeaderColspan(props.scope)}>{props.title}</th>\n            </tr>\n          </thead>\n          <tbody>\n            {props.rows.map((r) => (\n              <ListEntry scope={props.scope} row={r} />\n            ))}\n          </tbody>\n        </Table>\n      )}\n    </>\n  );\n}\n\nfunction ListQuestions({ props }) {\n  return (\n    <>\n      {props.rows.map((r) => (\n        <ListEntry scope={props.scope} row={r} />\n      ))}\n    </>\n  );\n}\n\nfunction ListAnswers({ props }) {\n  return (\n    <Table borderless className=\"list listAnswers\">\n      <tbody>\n        {props.rows.map((r) => (\n          <ListEntry scope={props.scope} row={r} />\n        ))}\n      </tbody>\n    </Table>\n  );\n}\n\nfunction ListReplies({ props }) {\n  return (\n    <>\n      <h4>{props.title}</h4>\n      <hr />\n      {props.rows.map((r) => (\n        <ListEntry scope={props.scope} row={r} />\n      ))}\n    </>\n  );\n}\n\nfunction ListSuggestion({ props }) {\n  return (\n    <>\n      <Container>\n        <h3 className=\"listSuggestionTitle\">{props.title}</h3>\n        <div className=\"listSuggestion-questions\">\n          {props.rows.map((r) => (\n            <ListEntry scope={props.scope} row={r} />\n          ))}\n        </div>\n      </Container>\n    </>\n  );\n}\n\nfunction ListSelection({ props }) {\n  return (\n    <FloatingLabel label={props.title}>\n      <Form.Select aria-label=\"Selection\" className=\"my-4\">\n        {props.rows.map((r, i) => (\n          <ListEntry scope={props.scope} row={r} key={i} />\n        ))}\n      </Form.Select>\n    </FloatingLabel>\n  );\n}\n\nfunction List(props) {\n  if (props.scope === \"questions\") return <ListQuestions props={props} />;\n  if (props.scope === \"answers\") return <ListAnswers props={props} />;\n  if (props.scope === \"replies\") return <ListReplies props={props} />;\n  if (props.scope === \"suggestion\") return <ListSuggestion props={props} />;\n  if (props.scope === \"selection\") return <ListSelection props={props} />;\n  return <ListDefault props={props} />;\n}\n\nexport default List;\n","import React from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport remarkGfm from \"remark-gfm\";\nimport remarkMath from \"remark-math\";\nimport rehypeKatex from \"rehype-katex\";\nimport rehypeHighlight from \"rehype-highlight\";\n\nimport \"./MarkdownPreview.css\";\n\nconst MarkdownPreview = React.memo(({ markdown }) => {\n  return (\n    <ReactMarkdown\n      remarkPlugins={[remarkGfm, remarkMath]}\n      rehypePlugins={[rehypeKatex, rehypeHighlight]}\n    >\n      {markdown}\n    </ReactMarkdown>\n  );\n});\n\nexport default MarkdownPreview;\n","import React, { useState } from \"react\";\nimport MarkdownPreview from \"./MarkdownPreview\";\nimport remarkGfm from \"remark-gfm\";\nimport remarkMath from \"remark-math\";\nimport rehypeKatex from \"rehype-katex\";\nimport rehypeHighlight from \"rehype-highlight\";\n\nimport { Card, Button } from \"react-bootstrap\";\n\nimport \"katex/dist/katex.min.css\";\nimport \"highlight.js/styles/github.css\";\n\nfunction QuestionPreview({ question }) {\n  const [showAdvice, setShowAdvice] = useState(false);\n\n  return (\n    <Card>\n      <Card.Header>\n        <div class=\"d-flex justify-content-between\">\n          <div class=\"p2\">{`${question.course_code} ${question.course_name}`}</div>\n          <div class=\"p2\">\n            <small>\n              Posted by {question.author} on&nbsp;\n              {question.date.toLocaleDateString(\"it-IT\", {\n                year: \"numeric\",\n                month: \"numeric\",\n                day: \"numeric\",\n              })}\n            </small>\n          </div>\n        </div>\n      </Card.Header>\n      <Card.Body>\n        <Card.Title>{question.title}</Card.Title>\n        <MarkdownPreview markdown={question.text} />\n        {question.advice && (\n          <Button\n            className=\"btn-sm mt-5\"\n            onClick={() => {\n              setShowAdvice(!showAdvice);\n            }}\n          >\n            {showAdvice ? \"Hide advice\" : \"Show advice\"}\n          </Button>\n        )}\n        {showAdvice && <h6 className=\"mt-3\">{question.advice}</h6>}\n      </Card.Body>\n    </Card>\n  );\n}\n\nexport default QuestionPreview;\n","import { Row, Col, Container, Image, Button } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport MarkdownPreview from \"./MarkdownPreview\";\nimport remarkGfm from \"remark-gfm\";\nimport remarkMath from \"remark-math\";\nimport rehypeKatex from \"rehype-katex\";\nimport rehypeHighlight from \"rehype-highlight\";\n\nimport \"./ListEntry.css\";\nimport QuestionPreview from \"./QuestionPreview\";\n\nfunction ListEntryDefault(props) {\n  return (\n    <tr>\n      {props.row.map((cell) => (\n        <td>\n          {props.dotted && <span className=\"greenDot\">●</span>}\n          {cell}\n        </td>\n      ))}\n    </tr>\n  );\n}\n\nfunction ListEntryCourses(props) {\n  return (\n    <tr>\n      <td>{props.row.code}</td>\n      <td>\n        <Link\n          to={\"/course/\" + props.row.code}\n          state={{ courseId: props.row.code, title: props.row.course }}\n        >\n          {props.row.course}\n        </Link>\n      </td>\n      <td>{props.row.professor}</td>\n      <td>{props.row.cfu}</td>\n    </tr>\n  );\n}\n\nfunction ListEntryQuestions(props) {\n  return (\n    <div className=\"questionEntry\">\n      <Row>\n        <Col>\n          <Link to={\"/question/\" + props.row.id} className=\"question\">\n            {props.row.question}\n          </Link>\n        </Col>\n      </Row>\n      <Row>\n        <Col>from {props.row.author}</Col>\n        <Col>Created at: {props.row.createdat}</Col>\n      </Row>\n      <Row>\n        <Col>\n          {props.row.tags.map((t) => (\n            <Link to=\"\" className=\"tags\">\n              #{t}\n            </Link>\n          ))}\n        </Col>\n      </Row>\n      <Row>\n        <Col>{props.row.excerpt}</Col>\n      </Row>\n    </div>\n  );\n}\n\nfunction ListEntryAnswers(props) {\n  return (\n    <>\n      <tr>\n        <td colSpan=\"2\">\n          {props.row.author}, {props.row.createdat}\n          {props.row.replies > 0 && (\n            <span className=\"reply-link mx-3\">\n              {props.row.replies + \" \"}\n              <Image\n                src={process.env.PUBLIC_URL + \"/icons/DISCUSSION.svg\"}\n                width=\"28px\"\n              />\n            </span>\n          )}\n        </td>\n      </tr>\n      <tr>\n        <td className=\"answerEntry\">\n          <Link to=\"\">\n            <Image\n              src={process.env.PUBLIC_URL + \"/icons/UP ARROW.svg\"}\n              width=\"18px\"\n              onClick={() => {}}\n            />\n          </Link>\n        </td>\n        <MarkdownPreview rowspan=\"3\" markdown={props.row.answer} />\n      </tr>\n      <tr>\n        <td className=\"answerEntry\">\n          {props.row.like - props.row.dislike > 0 && \"+\"}\n          {props.row.like - props.row.dislike}\n        </td>\n      </tr>\n      <tr>\n        <td className=\"answerEntry\">\n          <Link to=\"\">\n            <Image\n              src={process.env.PUBLIC_URL + \"/icons/DOWN ARROW.svg\"}\n              width=\"18px\"\n              onClick={() => {}}\n            />\n          </Link>\n        </td>\n        <td>\n          <Link to=\"/discussion/1\">\n            <Button className=\"reply-link\">Reply</Button>\n          </Link>\n        </td>\n      </tr>\n    </>\n  );\n}\n\nfunction ListEntryReplies(props) {\n  return (\n    <div className=\"questionEntry\">\n      <Row>\n        <Col>{props.row.reply}</Col>\n      </Row>\n      <Row className=\"tags\">\n        <Col>from {props.row.author}</Col>\n        <Col>Created at: {props.row.createdat}</Col>\n      </Row>\n    </div>\n  );\n}\n\nfunction ListEntryTest(props) {\n  return (\n    <tr>\n      <td>{props.row.a}</td>\n      <td>{props.row.b}</td>\n      <td>{props.row.c}</td>\n    </tr>\n  );\n}\n\nfunction ListEntrySuggestion(props) {\n  return (\n    <Container>\n      <Col>\n        <Col>\n          <Link\n            to={\"/suggestion/\" + props.row.id}\n            className=\"suggestion-question\"\n          >\n            {props.row.question}\n          </Link>\n        </Col>\n        <Col>from {props.row.author}</Col>\n        <Col>Created at: {props.row.createdat}</Col>\n      </Col>\n    </Container>\n  );\n}\n\nfunction ListEntrySelection(props) {\n  return <option value={props.key + 1}>{props.row}</option>;\n}\n\nfunction ListEntry(props) {\n  return (\n    <>\n      {props.scope === \"default\" && (\n        <ListEntryDefault row={props.row} dotted={props.dotted} />\n      )}\n      {props.scope === \"courses\" && <ListEntryCourses row={props.row} />}\n      {props.scope === \"questions\" && <ListEntryQuestions row={props.row} />}\n      {props.scope === \"answers\" && <ListEntryAnswers row={props.row} />}\n      {props.scope === \"replies\" && <ListEntryReplies row={props.row} />}\n      {props.scope === \"test\" && <ListEntryTest row={props.row} />}\n      {props.scope === \"suggestion\" && <ListEntrySuggestion row={props.row} />}\n      {props.scope === \"selection\" && <ListEntrySelection row={props.row} />}\n    </>\n  );\n}\n\nexport default ListEntry;\n","import { Container, Row, Col } from \"react-bootstrap\";\nimport { List } from \"./\";\nimport \"./ListGroup.css\";\nimport { Link } from \"react-router-dom\";\n\nfunction ListGroup(props) {\n  return (\n    <Container>\n      {props.lists\n        .filter((useless, i) => i % props.cols === 0)\n        .map((useless, i) => (\n          <Row>\n            {props.lists\n              .slice(i * props.cols, (i + 1) * props.cols)\n              .map((l) => (\n                <Col>\n                  <Link\n                    className=\"list-attributes\"\n                    to={{\n                      pathname:\n                        \"/listfullpage/\" +\n                        l.title.replace(/\\s/g, \"\").toLowerCase(),\n                    }}\n                    state={{ scope: l.scope, title: l.title, rows: l.rows }}\n                  >\n                    <List\n                      scope={l.scope}\n                      title={l.title}\n                      rows={l.rows}\n                      rounded={props.rounded}\n                      dotted={props.dotted}\n                    />\n                  </Link>\n                </Col>\n              ))}\n            {props.tiled &&\n              (i + 1) * props.cols > props.lists.length - 1 &&\n              props.lists.length % props.cols > 0 &&\n              [\n                ...Array(props.cols - (props.lists.length % props.cols)).keys(),\n              ].map((key) => <Col></Col>)}\n          </Row>\n        ))}\n    </Container>\n  );\n}\n\nexport default ListGroup;\n","import React from \"react\";\nimport { MarkdownUtil } from \"@sahircansurmeli/react-mde\";\n\nconst insertTex = {\n  name: \"insert-tex\",\n  icon: () => (\n    <img\n      src={process.env.PUBLIC_URL + \"/icons/TeX_logo.svg\"}\n      width=\"26\"\n      height=\"15\"\n      alt=\"Insert TeX\"\n    />\n  ),\n  buttonProps: {\n    \"aria-label\": \"Add TeX\",\n    title: \"Add TeX\",\n  },\n  execute: ({ textApi, initialState }) => {\n    const newSelectionRange = MarkdownUtil.selectWord({\n      text: initialState.text,\n      selection: initialState.selection,\n    });\n\n    const state1 = textApi.setSelectionRange(newSelectionRange);\n\n    const s1 = state1.selection;\n    const text = state1.text;\n    const selectedText = state1.selectedText;\n    let state2;\n\n    if (\n      selectedText.substring(0, 1) === \"$\" &&\n      selectedText.substring(selectedText.length - 1, selectedText.length) ===\n        \"$\"\n    ) {\n      state2 = textApi.replaceSelection(\n        selectedText.substring(1, selectedText.length - 1)\n      );\n      textApi.setSelectionRange({\n        start: s1.start,\n        end: s1.end - 1,\n      });\n    } else if (\n      s1.start >= 1 &&\n      text.substring(s1.start - 1, s1.start) === \"$\" &&\n      text.substring(s1.end, s1.end + 1) === \"$\"\n    ) {\n      textApi.setSelectionRange({\n        start: s1.start - 1,\n        end: s1.end + 1,\n      });\n      state2 = textApi.replaceSelection(state1.selectedText);\n      textApi.setSelectionRange({\n        start: state2.selection.start - state1.selectedText.length,\n        end: state2.selection.end,\n      });\n    } else {\n      // Replaces the current selection with the italic mark up\n      state2 = textApi.replaceSelection(`$${state1.selectedText}$`);\n      // Adjust the selection to not contain the *\n      textApi.setSelectionRange({\n        start: state2.selection.end - 1 - state1.selectedText.length,\n        end: state2.selection.end - 1,\n      });\n    }\n  },\n};\n\nexport default insertTex;\n","import { MarkdownUtil } from \"@sahircansurmeli/react-mde\";\n\nconst saveImage = {\n  execute: async ({ initialState, textApi, context, l18n }) => {\n    if (!context) {\n      throw new Error(\"wrong context\");\n    }\n\n    const {\n      event,\n      pasteOptions: { saveImage, multiple, accept },\n    } = context;\n\n    const items = isPasteEvent(context)\n      ? dataTransferToArray(event.clipboardData.items)\n      : isDragEvent(context)\n      ? dataTransferToArray(event.dataTransfer.items)\n      : fileListToArray(event.target.files);\n\n    const filteredItems = filterItems(items, { multiple, accept });\n\n    for (const index in filteredItems) {\n      const initialState = textApi.getState();\n      const breaksBeforeCount = MarkdownUtil.getBreaksNeededForEmptyLineBefore(\n        initialState.text,\n        initialState.selection.start\n      );\n\n      const breaksBefore = Array(breaksBeforeCount + 1).join(\"\\n\");\n      const placeHolder = `${breaksBefore}![${l18n.uploadingImage}]()`;\n\n      textApi.replaceSelection(placeHolder);\n\n      const blob = items[index];\n      const blobContents = await readFileAsync(blob);\n      const savingImage = saveImage(blobContents, blob);\n      const imageUrl = (await savingImage.next()).value;\n\n      const newState = textApi.getState();\n      const uploadingText = newState.text.slice(\n        initialState.selection.start,\n        initialState.selection.start + placeHolder.length\n      );\n\n      if (uploadingText === placeHolder) {\n        textApi.setSelectionRange({\n          start: initialState.selection.start,\n          end: initialState.selection.start + placeHolder.length,\n        });\n\n        const realImageMarkdown = imageUrl\n          ? `${breaksBefore}![image](${imageUrl})`\n          : \"\";\n\n        const selectionDelta = realImageMarkdown.length - placeHolder.length;\n\n        textApi.replaceSelection(realImageMarkdown);\n        textApi.setSelectionRange({\n          start: newState.selection.start + selectionDelta,\n          end: newState.selection.end + selectionDelta,\n        });\n      }\n    }\n  },\n};\n\nasync function readFileAsync(file) {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n\n    reader.onload = () => {\n      resolve(reader.result);\n    };\n\n    reader.onerror = reject;\n    reader.readAsDataURL(file);\n  });\n}\n\nfunction filterItems(items, { multiple, accept }) {\n  let filteredItems = items;\n\n  if (!multiple) {\n    filteredItems = filteredItems.slice(0, 1);\n  }\n\n  if (accept) {\n    const acceptedTypes = accept.split(\",\");\n    const fileExtensions = new Set(\n      acceptedTypes.filter((t) => /^\\.\\w+/.test(t)).map((t) => t.split(\".\")[1])\n    );\n    const mimeTypes = new Set(\n      acceptedTypes.filter((t) => /^[-\\w.]+\\/[-\\w.]+$/.test(t))\n    );\n    const anyTypes = new Set(\n      acceptedTypes\n        .filter((t) => /(audio|video|image)\\/\\*/.test(t))\n        .map((t) => t.split(\"/\")[0])\n    );\n\n    filteredItems = filteredItems.filter(\n      (f) =>\n        fileExtensions.has(f.name.split(\".\")[1]) ||\n        mimeTypes.has(f.type) ||\n        anyTypes.has(f.type.split(\"/\")[0])\n    );\n  }\n\n  return filteredItems;\n}\n\nfunction dataTransferToArray(items) {\n  const result = [];\n  for (const index in items) {\n    const item = items[index];\n    if (item.kind === \"file\") {\n      result.push(item.getAsFile());\n    }\n  }\n  return result;\n}\n\nfunction fileListToArray(list) {\n  const result = [];\n  for (let i = 0; i < list.length; i++) {\n    result.push(list[i]);\n  }\n  return result;\n}\n\nfunction isPasteEvent(context) {\n  return context.event.clipboardData !== undefined;\n}\n\nfunction isDragEvent(context) {\n  return context.event.dataTransfer !== undefined;\n}\n\nexport default saveImage;\n","import React, { useState } from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport ReactMde, {\n  getDefaultToolbarCommands,\n} from \"@sahircansurmeli/react-mde\";\nimport ReactMarkdown from \"react-markdown\";\nimport remarkGfm from \"remark-gfm\";\nimport remarkMath from \"remark-math\";\nimport rehypeKatex from \"rehype-katex\";\nimport rehypeHighlight from \"rehype-highlight\";\nimport { insertTex, saveImage } from \"./textInput/commands\";\n\nimport \"@sahircansurmeli/react-mde/lib/styles/css/react-mde-all.css\";\nimport \"./textInput/textInput.css\";\nimport \"katex/dist/katex.min.css\";\nimport \"highlight.js/styles/github.css\";\nimport \"./MarkdownPreview.css\";\n\nfunction TextInput({ value, onChange, selectedTab, onTabChange, childProps }) {\n  const [val, setVal] = useState(\"\");\n  const [selTab, setSelTab] = useState(\"write\");\n  const [base64Imgs, setBase64Imgs] = useState({});\n\n  const uploadImage = async function* (data, file) {\n    setBase64Imgs((prev) => {\n      return {\n        ...prev,\n        [file.name]: data,\n      };\n    });\n    yield file.name;\n  };\n\n  const generatePreviewMarkdown = async (markdown) => {\n    const filenamesToReplace = Object.keys(base64Imgs);\n\n    if (filenamesToReplace.length < 1) {\n      return markdown;\n    }\n\n    const re = new RegExp(\n      Object.keys(base64Imgs)\n        .map((fn) => `!\\\\[.*\\\\]\\\\(${fn}\\\\)`)\n        .join(\"|\"),\n      \"gi\"\n    );\n\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        resolve(\n          markdown.replaceAll(re, (match) => {\n            const alt = match.match(/!\\[.*\\]/);\n            const fn = match.match(/\\]\\(.*\\)/);\n            if (!alt || !fn) {\n              return match;\n            }\n            return `${alt[0]}(${base64Imgs[fn[0].slice(2, fn[0].length - 1)]})`;\n          })\n        );\n      });\n    });\n  };\n\n  return (\n    <Container>\n      <ReactMde\n        loadingPreview=\"Loading preview...\"\n        value={value || val}\n        onChange={onChange || setVal}\n        selectedTab={selectedTab || selTab}\n        onTabChange={onTabChange || setSelTab}\n        commands={{ \"insert-tex\": insertTex, \"upload-img\": saveImage }}\n        toolbarCommands={[...getDefaultToolbarCommands(), [\"insert-tex\"]]}\n        generateMarkdownPreview={async (markdown) => {\n          const previewMarkdown = await generatePreviewMarkdown(markdown);\n          return Promise.resolve(\n            <ReactMarkdown\n              remarkPlugins={[remarkGfm, remarkMath]}\n              rehypePlugins={[rehypeKatex, rehypeHighlight]}\n            >\n              {previewMarkdown}\n            </ReactMarkdown>\n          );\n        }}\n        childProps={childProps}\n        paste={{\n          saveImage: uploadImage,\n          command: \"upload-img\",\n          multiple: true,\n        }}\n      />\n    </Container>\n  );\n}\n\nexport default TextInput;\n","import React, { useState } from \"react\";\nimport { Collapse, Row, Col, Form, Pagination, Button } from \"react-bootstrap\";\n\nimport List from \"./List\";\n\nconst fakeAnswers = [\n  {\n    id: 1,\n    answer: \"$\\\\int_{a}^{b}{x^2 dx}$\",\n    author: \"Donato\",\n    createdat: \"15:20 12/01/2021\",\n    like: 5,\n    dislike: 2,\n    replies: 3,\n  },\n  {\n    id: 2,\n    answer: \"Morbi leo risus porta ac consectetur ac\",\n    author: \"Jim\",\n    createdat: \"17:30 13/02/2021\",\n    like: 5,\n    dislike: 7,\n    replies: 0,\n  },\n  {\n    id: 3,\n    answer: \"Vestibulum at eros\",\n    author: \"Derek\",\n    createdat: \"19:40 14/03/2021\",\n    like: 9,\n    dislike: 1,\n    replies: 1,\n  },\n];\n\nconst no_pages = 5;\n\nfunction Discussion(props) {\n  const [showDiscussion, setShowDiscussion] = useState(\n    props.showdiscussion || false\n  );\n  const [answers, setAnswers] = useState(fakeAnswers);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  return (\n    <>\n      <Row>\n        <Col lg=\"12\">\n          <Button\n            onClick={() => setShowDiscussion((value) => !value)}\n            aria-controls=\"example-collapse-text\"\n            aria-expanded={showDiscussion}\n            className={`w-100 ${\n              showDiscussion ? \"btn-warning\" : \"btn-success\"\n            }`}\n          >\n            {showDiscussion ? \"Hide discussion\" : \"Show discusssion\"}\n          </Button>\n        </Col>\n      </Row>\n\n      <Collapse className=\"collapse\" in={showDiscussion}>\n        <Row>\n          <Col lg=\"12\">\n            <Form.Group controlId=\"formGridState\">\n              <Form.Control placeholder=\"Search\" />\n            </Form.Group>\n          </Col>\n          <Col lg=\"12\">\n            <List scope=\"answers\" rows={answers} />\n          </Col>\n          <Col lg=\"12\" sm=\"12\" md=\"12\">\n            <Pagination>\n              {[...Array(no_pages)].map((_, idx) => (\n                <Pagination.Item\n                  key={idx + 1}\n                  active={currentPage === idx + 1}\n                  onClick={() => setCurrentPage(idx + 1)}\n                >\n                  {idx + 1}\n                </Pagination.Item>\n              ))}\n            </Pagination>\n          </Col>\n        </Row>\n      </Collapse>\n    </>\n  );\n}\n\nexport default Discussion;\n","import React, { useRef, useState } from \"react\";\nimport { InputGroup, Button } from \"react-bootstrap\";\nimport { AsyncTypeahead } from \"react-bootstrap-typeahead\";\n\nimport styles from \"./searchBar/searchBar.module.scss\";\nimport \"react-bootstrap-typeahead/css/Typeahead.css\";\nimport \"react-bootstrap-typeahead/css/Typeahead.bs5.css\";\n\nfunction SearchBar({ apiCall }) {\n  /* Mock search suggestions */\n  const fakeSuggestions = [\n    { label: \"duckduckgo\" },\n    { label: \"duckduck\" },\n    { label: \"duckduckgo browser\" },\n    { label: \"duckduckgo download\" },\n  ];\n\n  const [suggestions, setSuggestions] = useState([]);\n  const [value, setValue] = useState(\"\");\n\n  const onSearch = (inputText) => {\n    setValue(inputText);\n    if (inputText.length > 0) {\n      setSuggestions(fakeSuggestions);\n    } else {\n      setSuggestions([]);\n    }\n  };\n\n  const ref = useRef();\n\n  return (\n    <InputGroup>\n      <AsyncTypeahead\n        id=\"Search bar\"\n        placeholder=\"Search courses\"\n        isLoading={false}\n        searchText=\"\"\n        emptyLabel=\"\"\n        promptText=\"\"\n        options={suggestions}\n        filterBy={() => true}\n        renderMenuItemChildren={(option) => <span>{option.label}</span>}\n        ref={ref}\n        onInputChange={onSearch}\n        onSearch={() => {}}\n      />\n      {value.length > 0 && (\n        <Button\n          variant=\"link\"\n          onClick={() => {\n            ref.current.clear();\n            setValue(\"\");\n          }}\n          className={\n            \"btn-outline-primary border-left-0 border \" + styles.clearButton\n          }\n        >\n          <img\n            width=\"20\"\n            height=\"20\"\n            src={process.env.PUBLIC_URL + \"/icons/x.svg\"}\n            alt=\"Search\"\n          />\n        </Button>\n      )}\n      <Button\n        variant={value.length > 0 ? \"primary\" : \"link\"}\n        className=\"btn-outline-primary border-left-0 border\"\n      >\n        <img\n          width=\"20\"\n          height=\"20\"\n          src={process.env.PUBLIC_URL + \"/icons/SEARCH.svg\"}\n          alt=\"Search\"\n        />\n      </Button>\n    </InputGroup>\n  );\n}\n\nexport default SearchBar;\n","import List from \"./List\";\nimport { ListEntry } from \"./index\";\nimport { Card, Container, Row } from \"react-bootstrap\";\nimport \"./Suggestion.css\";\n\nfunction Suggestion(props) {\n  return (\n    <Container className=\"suggestion-container\" fluid>\n      <Card className=\"suggestion-card\">\n        <Card.Body>\n          <List scope={props.scope} title={props.title} rows={props.rows} />\n        </Card.Body>\n      </Card>\n    </Container>\n  );\n}\n\nexport default Suggestion;\n","import { Alert, Button } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\n\nfunction DebugPaths() {\n  const style = { padding: \"5px\" };\n  return (\n    <Alert dismissible>\n      <b>Dev only: </b>\n      <Link style={style} to=\"/login\">\n        Login\n      </Link>\n      <Link style={style} to=\"/\">\n        Home\n      </Link>\n      <Link style={style} to=\"/profile\">\n        Profile\n      </Link>\n      <Link style={style} to=\"/courses\">\n        Courses\n      </Link>\n      <Link\n        style={style}\n        to=\"/course/ABCDEF\"\n        state={{ courseId: \"courseId\", title: \"Course Name\" }}\n      >\n        Course\n      </Link>\n      <Link style={style} to=\"/question/QUESTID\">\n        Question\n      </Link>\n      <Link style={style} to=\"/myquestions\">\n        MyQuestions\n      </Link>\n      <Link style={style} to=\"/discussion/QUESTID\">\n        Discussion\n      </Link>\n      <Link style={style} to=\"/startsimulation/\">\n        Simulation\n      </Link>\n      <Link style={style} to=\"/settings\">\n        UserSettings\n      </Link>\n      <Link style={style} to=\"/todel\">\n        Exam\n      </Link>\n    </Alert>\n  );\n}\n\nexport default DebugPaths;\n","import { useState } from \"react\";\nimport { Button, Form } from \"react-bootstrap\";\nimport { List, TextInput } from \"../base\";\nimport \"./AddQuestion.css\";\n\nfunction AddQuestion(props) {\n  const fakeCourses = [\"Analysis 1\", \"Physics 1\", \"Geometry\"];\n\n  const [courses, setCourses] = useState(fakeCourses /*[]*/);\n  return (\n    <>\n      <Form.Label size=\"lg\">Choose moodle XML file</Form.Label>\n      <Form.Control type=\"file\" size=\"lg\" />\n      <List scope=\"selection\" title=\"Select course\" rows={courses} />\n      <Form.Check type=\"checkbox\" label=\"This is an exam simulation\" />\n      {/* <TextInput/> */}\n      <Button type=\"submit\" className=\"submit-button my-4\" onClick={() => {}}>\n        Upload\n      </Button>\n    </>\n  );\n}\n\nexport default AddQuestion;\n","import { useState } from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { QuestionPreview, Discussion, TextInput } from \"../base\";\nimport \"./Answers.css\";\n\nconst fakeQuestion = {\n  course_code: \"01UROLM\",\n  course_name: \"Mathematical methods for Computer Science\",\n  title: \"Theory of distributions\",\n  author: \"Sahircan Sürmeli\",\n  tags: [\"distributions\", \"functionals\", \"test functions\"],\n  text: \"Find all distributions $T \\\\in D^\\\\prime$ such that $T^\\\\prime = \\\\delta_0 + \\\\delta_2 - 2\\\\delta^\\\\prime_1$.\",\n  date: new Date(\"April 23, 2022\"),\n  advice: \"You have to integrate something.\",\n};\n\nfunction Answers(props) {\n  const [question, setQuestion] = useState(fakeQuestion);\n\n  return (\n    <Container className=\"container\">\n      <Row lg={12} className=\"header\">\n        <Col>\n          <QuestionPreview question={question} />\n        </Col>\n      </Row>\n\n      <Row className=\"header\">\n        <Col>\n          <TextInput\n            childProps={{\n              textArea: {\n                placeholder: \"Leave a comment\",\n              },\n            }}\n          />\n        </Col>\n      </Row>\n\n      <Discussion showdiscussion={props.showdiscussion} />\n    </Container>\n  );\n}\n\nexport default Answers;\n","import {\n  Row,\n  Col,\n  Card,\n  Pagination,\n  Form,\n  Button,\n  Stack,\n} from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { useState /* , useEffect */ } from \"react\";\nimport { Recent, List, SearchBar } from \"../base/\";\nimport Suggestion from \"../base/Suggestion\";\n// import API from \"../api/API\";\n\nconst PaginationRow = () => {\n  let [active, setActive] = useState(1);\n  let items = [];\n  for (let num = 1; num <= 5; num++) {\n    items.push(\n      <Pagination.Item\n        key={num}\n        active={num === active}\n        onClick={() => {\n          setActive((active = num));\n        }}\n      >\n        {num}\n      </Pagination.Item>\n    );\n  }\n\n  return (\n    <Pagination>\n      <Pagination.First />\n      {items}\n      <Pagination.Last />\n    </Pagination>\n  );\n};\n\nfunction CoursesList() {\n  /** Mock courses and questions **/\n  const fakeCourses = [\n    { code: \"A0B1C2\", course: \"Analysis 1\", cfu: 10, professor: \"Mario Rossi\" },\n    {\n      code: \"D3E4F5\",\n      course: \"Physics 1\",\n      cfu: 10,\n      professor: \"Stefano Bianchi\",\n    },\n    {\n      code: \"G6H7I8\",\n      course: \"Geometry\",\n      cfu: 10,\n      professor: \"Giuseppe Verdi\",\n    },\n  ];\n\n  const fakeQuestions = [\n    {\n      id: 1,\n      question: \"What is a vector?\",\n      author: \"Donato\",\n      createdat: \"15:20 12/01/2021\",\n      tags: [\"vectors\"],\n      excerpt: \"Cras justo odio...\",\n    },\n    {\n      id: 2,\n      question: \"Who is Maxwell?\",\n      author: \"Jim\",\n      createdat: \"17:30 13/02/2021\",\n      tags: [\"physics\"],\n      excerpt: \"Cras justo odio...\",\n    },\n    {\n      id: 3,\n      question: \"How many meters per second?\",\n      author: \"Derek\",\n      createdat: \"19:40 14/03/2021\",\n      tags: [\"physics\", \"kinematic\"],\n      excerpt: \"Cras justo odio...\",\n    },\n  ];\n\n  const [courses, setCourses] = useState(fakeCourses /*[]*/);\n  const [myCourses, setMyCourses] = useState([]);\n  const [suggestions, setSuggestions] = useState(fakeQuestions /*[]*/);\n  const suggestionType = [\"Latest\", \"Hottest\"];\n  const coursesType = [\"My Courses\", \"All Courses\"];\n\n  /**Courses and questions related**/\n  /*\n\t// courses\n\tuseEffect(()=> {\n\t\tAPI.getCourses()\n\t\t\t.then(courses => setCourses(courses))\n\t\t\t.catch(err => console.log(err));\n\t}, []);\n\n\t// myCourses\n\tuseEffect(() => {\n\t\tAPI.getMyCourses()\n\t\t\t.then(myCourses => setMyCourses(myCourses))\n\t\t\t.catch(err => console.log(err));\n\t}, []);\n\t*/\n\n  // useEffect(() => {\n  //     const getCourses = async () => {\n  //         const courses = await API.getAllCourses();\n  //         setCourses(courses);\n  //     }\n  //     getCourses();\n  // },[]);\n\n  return (\n    <Row>\n      <Col>\n        <Card body>\n          <Row lg={12} className=\"py-0 header\">\n            <h3>Courses</h3>\n          </Row>\n          <Row>\n            <SearchBar />\n          </Row>\n          {coursesType.map((type) => {\n            return (\n              <Link\n                className=\"list-attributes\"\n                to={{\n                  pathname:\n                    \"/listfullpage/\" + type.replace(/\\s/g, \"\").toLowerCase(),\n                }}\n                state={{ scope: \"courses\", title: type, rows: courses }}\n              >\n                <List scope=\"courses\" title={type} rows={courses} />\n              </Link>\n            );\n          })}\n          <PaginationRow />\n        </Card>\n      </Col>\n      <Col className=\"d-none d-md-inline-block col-md-4\">\n        <Stack gap={4}>\n          {suggestionType.map((type) => {\n            return (\n              <Row>\n                <Suggestion\n                  scope={\"suggestion\"}\n                  title={type + \" Questions\"}\n                  rows={suggestions}\n                />\n              </Row>\n            );\n          })}\n        </Stack>\n      </Col>\n    </Row>\n  );\n}\n\nexport default CoursesList;\n","import parse from \"html-react-parser\";\nimport { Button, Container, Row, Col, Card, Form } from \"react-bootstrap\";\nimport \"./Exam.css\";\n\nconst MultipleChoice = ({ index, questiontext, answer, ...rest }) => {\n  console.log({ answer });\n  return (\n    <Form className=\"multipleChoice\">\n      <Form.Label>\n        {index})\n        {questiontext\n          ? questiontext[\"@format\"] === \"html\"\n            ? parse(questiontext.text)\n            : `${index}) ${questiontext.text}`\n          : null}\n      </Form.Label>\n      {answer &&\n        answer.map(\n          (ans, index) =>\n            ans && (\n              <div key={`inline-${ans}`} className=\"mb-3\">\n                <Form.Check\n                  inline\n                  label={ans[\"@format\"] === \"html\" ? parse(ans.text) : ans.text}\n                  name=\"group1\"\n                  type=\"checkbox\"\n                  id={`inline-${index}-1`}\n                />\n              </div>\n            )\n        )}\n    </Form>\n  );\n};\n\nconst Exam = ({ question }) => {\n  return (\n    <Container className=\"container\">\n      <Card body>\n        <Row lg={12} className=\"header\">\n          <Col>\n            <h3>Exam</h3>\n          </Col>\n        </Row>\n        {/* {question.map(\n\t\t\t\t\t(item, index) =>\n\t\t\t\t\t\t(item[\"@type\"] = \"multichoice\" && (\n\t\t\t\t\t\t\t<Row className='mt-10'>\n\t\t\t\t\t\t\t\t<Col lg='12'>\n\t\t\t\t\t\t\t\t\t<MultipleChoice {...{ index, ...item }} />\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t))\n\t\t\t\t)} */}\n      </Card>\n    </Container>\n  );\n};\n\nexport default Exam;\n","import { Row, Col, Card } from \"react-bootstrap\";\nimport { useState } from \"react\";\nimport \"./Home.css\";\nimport { ListGroup, SearchBar } from \"../base/\";\n\nfunction Home() {\n  const fake = [\n    {\n      scope: \"default\",\n      title: \"New questions in courses I'm enrolled in\",\n      rows: [\n        [\"Cras justo odio\"],\n        [\"Dapibus ac facilisis in\"],\n        [\"Morbi leo risus\"],\n        [\"Porta ac consectetur ac\"],\n        [\"Vestibulum at eros\"],\n      ],\n    },\n    {\n      scope: \"default\",\n      title: \"Replies\",\n      rows: [\n        [\"Cras justo odio\"],\n        [\"Dapibus ac facilisis in\"],\n        [\"Morbi leo risus\"],\n        [\"Porta ac consectetur ac\"],\n        [\"Vestibulum at eros\"],\n      ],\n    },\n    {\n      scope: \"test\",\n      title: \"My questions\",\n      rows: [\n        { a: \"aaa\", b: \"bbb\", c: \"ccc\" },\n        { a: \"aaa\", b: \"bbb\", c: \"ccc\" },\n        { a: \"aaa\", b: \"bbb\", c: \"ccc\" },\n      ],\n    },\n    {\n      scope: \"test\",\n      title: \"My answers\",\n      rows: [\n        { a: \"aaa\", b: \"bbb\", c: \"ccc\" },\n        { a: \"aaa\", b: \"bbb\", c: \"ccc\" },\n        { a: \"aaa\", b: \"bbb\", c: \"ccc\" },\n      ],\n    },\n  ];\n\n  const [tests, setTests] = useState(fake);\n\n  return (\n    <Card body>\n      <Row lg={12} className=\"py-0 header\">\n        <Col>\n          <h3>Hi, Name Surname!</h3>\n        </Col>\n      </Row>\n      <ListGroup lists={tests} cols={2} tiled rounded dotted />\n    </Card>\n  );\n}\n\nexport default Home;\n","import { useState } from \"react\";\nimport { Modal, Form, Button, Alert } from \"react-bootstrap\";\n\nfunction LoginForm(props) {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  function checkPassword(password) {\n    if (password.length >= 6) return true;\n    return false;\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    setErrorMessage(\"\");\n    const credentials = { username, password };\n    let valid = true;\n    if (username === \"\" || !checkPassword(password)) valid = false;\n    if (valid) {\n      props.login(credentials);\n    } else {\n      setErrorMessage(\"Errors in the form\");\n    }\n  };\n\n  return (\n    <Modal.Dialog>\n      <Modal.Header>\n        <Modal.Title>Login</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        {errorMessage ? <Alert variant=\"danger\">{errorMessage}</Alert> : null}\n        <Form.Group controlId=\"username\">\n          <Form.Label>Email</Form.Label>\n          <Form.Control\n            type=\"email\"\n            value={username}\n            onChange={(ev) => setUsername(ev.target.value)}\n          />\n        </Form.Group>\n        <Form.Group controlId=\"password\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            value={password}\n            onChange={(ev) => setPassword(ev.target.value)}\n          />\n        </Form.Group>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button onClick={handleSubmit}>Login</Button>\n      </Modal.Footer>\n    </Modal.Dialog>\n  );\n}\n\nexport default LoginForm;\n","import { Row, Col, Card, Image } from \"react-bootstrap\";\nimport { useState } from \"react\";\nimport \"./Profile.css\";\nimport { ListGroup, SearchBar } from \"../base/\";\n\nfunction Profile() {\n  const fake = [\n    {\n      scope: \"default\",\n      title: \"My questions\",\n      rows: [\n        [\"Cras justo odio\"],\n        [\"Dapibus ac facilisis in\"],\n        [\"Morbi leo risus\"],\n        [\"Porta ac consectetur ac\"],\n        [\"Vestibulum at eros\"],\n      ],\n    },\n    {\n      scope: \"default\",\n      title: \"My answers\",\n      rows: [\n        [\"Cras justo odio\"],\n        [\"Dapibus ac facilisis in\"],\n        [\"Morbi leo risus\"],\n        [\"Porta ac consectetur ac\"],\n        [\"Vestibulum at eros\"],\n      ],\n    },\n    {\n      scope: \"default\",\n      title: \"My simulation results\",\n      rows: [\n        [\"aaa\", \"bbb\", \"ccc\"],\n        [\"aaa\", \"bbb\", \"ccc\"],\n        [\"aaa\", \"bbb\", \"ccc\"],\n      ],\n    },\n  ];\n\n  const [tests, setTests] = useState(fake);\n\n  return (\n    <Card body>\n      <Row lg={12} className=\"py-0 header\">\n        <Col xs={2}>\n          <Image src={process.env.PUBLIC_URL + \"/icons/PERSON.svg\"} />\n        </Col>\n        <Col>\n          <h3>Name Surname</h3>\n          <h4>@Nickname</h4>\n        </Col>\n      </Row>\n      <ListGroup lists={tests} cols={2} rounded dotted />\n    </Card>\n  );\n}\n\nexport default Profile;\n","import {\n  Button,\n  Container,\n  Row,\n  Col,\n  Pagination,\n  Card,\n  Image,\n  Stack,\n} from \"react-bootstrap\";\n\nimport { useEffect, useState } from \"react\";\nimport \"./Questions.css\";\nimport { List, Recent, SearchBar, Suggestion } from \"../base/\";\nimport { Link, useLocation } from \"react-router-dom\";\n\nfunction PaginationRow(props) {\n  let [active, setActive] = useState(1);\n  let items = [];\n  for (let num = 1; num <= 5; num++) {\n    items.push(\n      <Pagination.Item\n        key={num}\n        active={num === active}\n        onClick={() => {\n          setActive((active = num));\n        }}\n      >\n        {num}\n      </Pagination.Item>\n    );\n  }\n\n  return (\n    <Pagination>\n      <Pagination.First />\n      {items}\n      <Pagination.Last />\n    </Pagination>\n  );\n}\n\nconst Questions = () => {\n  const fakeQuestions = [\n    {\n      id: 1,\n      question: \"What is a vector?\",\n      author: \"Donato\",\n      createdat: \"15:20 12/01/2021\",\n      tags: [\"vectors\"],\n      excerpt: \"Cras justo odio...\",\n    },\n    {\n      id: 2,\n      question: \"Who is Maxwell?\",\n      author: \"Jim\",\n      createdat: \"17:30 13/02/2021\",\n      tags: [\"physics\"],\n      excerpt: \"Cras justo odio...\",\n    },\n    {\n      id: 3,\n      question: \"How many meters per second?\",\n      author: \"Derek\",\n      createdat: \"19:40 14/03/2021\",\n      tags: [\"physics\", \"kinematic\"],\n      excerpt: \"Cras justo odio...\",\n    },\n  ];\n\n  const [questions, setQuestions] = useState(fakeQuestions /*[]*/);\n  const [suggestions, setSuggestions] = useState(fakeQuestions /*[]*/);\n  const suggestionType = [\"Latest\", \"Hottest\"];\n\n  // hook for responsive react\n  const useMediaQuery = (query) => {\n    const [matches, setMatches] = useState(false);\n\n    useEffect(() => {\n      const media = window.matchMedia(query);\n      if (media.matches !== matches) {\n        setMatches(media.matches);\n      }\n      const listener = () => {\n        setMatches(media.matches);\n      };\n      window.addEventListener(\"resize\", listener);\n      return () => window.removeEventListener(\"resize\", listener);\n    }, [matches, query]);\n\n    return matches;\n  };\n\n  // TODO: also take a look at Bootstrap class infixes to detect the current breakpoint\n  // to see which approach is better -- https://getbootstrap.com/docs/5.1/layout/breakpoints/\n  const isDesktop = useMediaQuery(\"(min-width: 960px)\");\n\n  const locationState = useLocation().state;\n\n  return (\n    <>\n      <Container>\n        <Stack gap={4}>\n          <Row>\n            <Col>\n              <Card body>\n                <Row lg={12} className=\"header\">\n                  <Col>\n                    <h3 className=\"listQuestionsTitle\">\n                      Physics I\n                      <Link to=\"/simulation\">\n                        <Button className=\"right-button\">\n                          Start simulation\n                        </Button>\n                      </Link>\n                      <Button className=\"right-button\" onClick={() => {}}>\n                        <Image\n                          className=\"add-icon\"\n                          src={process.env.PUBLIC_URL + \"/icons/ADD_WHITE.svg\"}\n                          width=\"13px\"\n                        />\n                        {\" Add course\"}\n                      </Button>\n                    </h3>\n                    <Row>\n                      <Col className=\"listQuestionsTitle\">\n                        <SearchBar />\n                      </Col>\n                    </Row>\n                    <List\n                      scope=\"questions\"\n                      title=\"Physics I\"\n                      rows={questions}\n                    />\n                  </Col>\n                  <Col className=\"pagination\" lg=\"12\" sm=\"12\" md=\"12\">\n                    <PaginationRow />\n                  </Col>\n                </Row>\n              </Card>\n            </Col>\n            <Col className=\"d-sm-inline-block col-md-4\">\n              <Stack gap={4}>\n                {suggestionType.map((type) => {\n                  return (\n                    <Row>\n                      <Suggestion\n                        scope={\"suggestion\"}\n                        title={type + \" Questions\"}\n                        rows={suggestions}\n                      />\n                    </Row>\n                  );\n                })}\n              </Stack>\n            </Col>\n          </Row>\n        </Stack>\n      </Container>\n    </>\n  );\n};\n\nexport default Questions;\n","import { Row, Col, Card, Button } from \"react-bootstrap\";\nimport { useEffect, useState } from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { List, ListEntry, Recent, SearchBar, TextInput } from \"../base\";\nimport \"./Replies.css\";\n\nfunction Answer(props) {\n  return (\n    <div className=\"questionEntry\">\n      <Row>\n        <Col>\n          <h4>{props.ans.answer}</h4>\n        </Col>\n      </Row>\n      <Row>\n        <Col>from {props.ans.author}</Col>\n        <Col>Created at: {props.ans.createdat}</Col>\n      </Row>\n    </div>\n  );\n}\n\nfunction Replies() {\n  const answer = {\n    answer: \"Lorem ipsum dolor sit amet\",\n    author: \"Jim\",\n    createdat: \"10/10/1010\",\n  };\n  const fakeReplies = [\n    {\n      id: 1,\n      reply: \"I think it's correct\",\n      author: \"Donato\",\n      createdat: \"15:20 12/01/2021\",\n    },\n    {\n      id: 2,\n      reply: \"Maybe is wrong\",\n      author: \"Jim\",\n      createdat: \"17:30 13/02/2021\",\n    },\n    {\n      id: 3,\n      reply: \"idk\",\n      author: \"Derek\",\n      createdat: \"19:40 14/03/2021\",\n    },\n  ];\n\n  const [replies, setReplies] = useState(fakeReplies);\n\n  return (\n    <>\n      <Answer ans={answer} />\n      <List scope=\"replies\" rows={replies} />\n      <TextInput />\n      <Button className=\"reply-button my-2\">Reply</Button>\n    </>\n  );\n}\n\nexport default Replies;\n","import { Row, Col, Card, Image, Form, Button } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport \"./UserSettings.css\";\nimport { List } from \"../base/\";\n\nfunction UserSettings() {\n  const fake = [\n    [<Form.Check />, \"Analisys I\"],\n    [<Form.Check />, \"Physics I\"],\n    [<Form.Check />, \"Geometry\"],\n  ];\n  const [courses, setCourses] = useState(fake);\n\n  return (\n    <Card body>\n      <Row lg={12} className=\"py-0 header\">\n        <Col xs={2}>\n          <Image src={process.env.PUBLIC_URL + \"/icons/PERSON.svg\"} />\n        </Col>\n        <Col>\n          <h3>Name Surname</h3>\n          <h4>@Nickname</h4>\n          <Form.Control placeholder=\"Change nickname\" />\n          <Form.Check label=\"Public profile\" />\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <List rows={courses} title={\"Enrolled in\"} scope={\"default\"} />\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Link to=\"/courses\">\n            <Button>Add new course</Button>\n          </Link>\n          <Button className=\"saveButton\">Save</Button>\n        </Col>\n      </Row>\n    </Card>\n  );\n}\n\nexport default UserSettings;\n","import { List } from \"../base\";\nimport { Card, Container, Pagination } from \"react-bootstrap\";\nimport { useLocation } from \"react-router-dom\";\nimport { useState } from \"react\";\n\nfunction PaginationRow() {\n  let [active, setActive] = useState(1);\n  let items = [];\n  for (let num = 1; num <= 5; num++) {\n    items.push(\n      <Pagination.Item\n        key={num}\n        active={num === active}\n        onClick={() => {\n          setActive((active = num));\n        }}\n      >\n        {num}\n      </Pagination.Item>\n    );\n  }\n\n  return (\n    <Pagination>\n      <Pagination.First />\n      {items}\n      <Pagination.Last />\n    </Pagination>\n  );\n}\n\nexport default function ListFullPage() {\n  const location = useLocation();\n  return (\n    <>\n      <Container>\n        <Card body>\n          <h2>{location.state.title}</h2>\n          <List\n            scope={location.state.scope}\n            title={\"\"}\n            rows={location.state.rows}\n          />\n          {location.state.title === \"My courses\" ? <></> : <PaginationRow />}\n        </Card>\n      </Container>\n    </>\n  );\n}\n","import { Card, Container, Pagination } from \"react-bootstrap\";\nimport { List, SearchBar } from \"../base\";\nimport { useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nfunction PaginationRow() {\n  let [active, setActive] = useState(1);\n  let items = [];\n  for (let num = 1; num <= 5; num++) {\n    items.push(\n      <Pagination.Item\n        key={num}\n        active={num === active}\n        onClick={() => {\n          setActive((active = num));\n        }}\n      >\n        {num}\n      </Pagination.Item>\n    );\n  }\n\n  return (\n    <Pagination>\n      <Pagination.First />\n      {items}\n      <Pagination.Last />\n    </Pagination>\n  );\n}\n\nexport default function Bookmarks() {\n  const location = useLocation();\n  return (\n    <>\n      <Container>\n        <Card body>\n          <h2>{location.state.title}</h2>\n          <SearchBar />\n          <List\n            scope={location.state.scope}\n            title={\"\"}\n            rows={location.state.rows}\n          />\n          <PaginationRow />\n        </Card>\n      </Container>\n    </>\n  );\n}\n","import {\n  Card,\n  Container,\n  Form,\n  Row,\n  Col,\n  Button,\n  Stack,\n  FloatingLabel,\n  InputGroup,\n  FormControl,\n  Alert,\n} from \"react-bootstrap\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport \"./StartSimulation.css\";\n\nexport default function StartSimulation() {\n  const simulationTypes = [\"Random\", \"Exam\"];\n\n  const [isMulti, setIsMulti] = useState(false);\n\n  const [numQuestions, setNumQuestions] = useState(10);\n  const [penaltyScore, setPenaltyScore] = useState(-0.5);\n  const [maxScore, setMaxScore] = useState(30);\n  const [userInput, setUserInput] = useState(1);\n\n  const locationState = useLocation().state;\n\n  useEffect(() => {\n    userInput ? console.log(userInput) : console.log(\"x\");\n  }, [userInput]);\n\n  return (\n    <>\n      <Container>\n        <Card className=\"simulation-card\">\n          <Card.Body>\n            <Stack gap={4}>\n              <h3>Simulation Set Up</h3>\n              <Col>\n                <Stack gap={2}>\n                  <Row>\n                    <div key=\"checkbox-ratio\" className=\"mb-3\">\n                      <Form.Switch\n                        className=\"multiquiz-toggle\"\n                        type=\"switch\"\n                        label=\"Multiple Choice Questions Only (With Grade)\"\n                        onChange={() => setIsMulti(!isMulti)}\n                      />\n                    </div>\n                  </Row>\n                  {userInput || userInput === 0 ? (\n                    <></>\n                  ) : (\n                    <Alert variant=\"danger\">\n                      Only Number Inputs Are Allowed\n                    </Alert>\n                  )}\n                  <Stack gap={4}>\n                    {isMulti ? (\n                      <Row>\n                        <Card>\n                          <Card.Body>\n                            <Stack gap={2}>\n                              <h6>\n                                ( Number of Question and Maximum Score Must Not\n                                Be Zero )\n                              </h6>\n                              <InputGroup>\n                                <InputGroup.Text>\n                                  Number of Questions{\" \"}\n                                </InputGroup.Text>\n                                <FormControl\n                                  aria-label={numQuestions}\n                                  placeholder={numQuestions}\n                                  onChange={(e) => {\n                                    setUserInput(Number(e.target.value));\n                                    setNumQuestions(Number(e.target.value));\n                                  }}\n                                />\n                              </InputGroup>\n                              <InputGroup>\n                                <InputGroup.Text>Penalty </InputGroup.Text>\n                                <FormControl\n                                  aria-label={penaltyScore}\n                                  placeholder={penaltyScore}\n                                  onChange={(e) => {\n                                    setUserInput(Number(e.target.value));\n                                    setPenaltyScore(Number(e.target.value));\n                                  }}\n                                />\n                              </InputGroup>\n                              <InputGroup>\n                                <InputGroup.Text>\n                                  Maximum Score{\" \"}\n                                </InputGroup.Text>\n                                <FormControl\n                                  aria-label={maxScore}\n                                  placeholder={maxScore}\n                                  onChange={(e) => {\n                                    setUserInput(Number(e.target.value));\n                                    setMaxScore(Number(e.target.value));\n                                  }}\n                                />\n                              </InputGroup>\n                            </Stack>\n                          </Card.Body>\n                        </Card>\n                      </Row>\n                    ) : (\n                      <></>\n                    )}\n                    <Row className=\"bottom-group\">\n                      {numQuestions && maxScore && !isNaN(penaltyScore) ? (\n                        simulationTypes.map((type) => {\n                          return (\n                            <Col>\n                              <Link\n                                to={{\n                                  pathname:\n                                    \"/simulation/\" + locationState.courseId,\n                                }}\n                                state={{\n                                  type: type,\n                                  title: locationState.title,\n                                  courseId: locationState.course,\n                                  num: numQuestions,\n                                  penalty: penaltyScore,\n                                  max: maxScore,\n                                  isMulti: isMulti,\n                                }}\n                              >\n                                <Button\n                                  className=\"btn-outline-success\"\n                                  variant=\"outline-success\"\n                                >\n                                  {type + \" Question\"}\n                                </Button>\n                              </Link>\n                            </Col>\n                          );\n                        })\n                      ) : (\n                        <Alert variant=\"danger\">Invalid Inputs</Alert>\n                      )}\n                    </Row>\n                  </Stack>\n                </Stack>\n              </Col>\n            </Stack>\n          </Card.Body>\n        </Card>\n      </Container>\n    </>\n  );\n}\n","import { Link, useLocation } from \"react-router-dom\";\nimport { useCallback, useEffect, useState, Component } from \"react\";\nimport {\n  Card,\n  Row,\n  Col,\n  Pagination,\n  Container,\n  Button,\n  Form,\n  Stack,\n  Modal,\n} from \"react-bootstrap\";\nimport \"./Simulation.css\";\nimport { List, ListEntry, TextInput } from \"../base\";\n\nexport default function Simulation(props) {\n  const simulationRandomQuizType = [\"open\", \"close\"];\n  const [pageNum, setPageNum] = useState(1);\n\n  const randomizer =\n    simulationRandomQuizType[\n      Math.floor(Math.random() * simulationRandomQuizType.length)\n    ];\n  const [quizType, setQuizType] = useState(randomizer);\n\n  const locationState = useLocation().state;\n\n  const FinishModal = () => {\n    const [show, setShow] = useState(false);\n\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    return (\n      <>\n        <Button\n          className=\"btn-outline-success\"\n          variant=\"outline-success\"\n          onClick={handleShow}\n        >\n          Finish\n        </Button>\n        <Modal show={show} onHide={handleClose}>\n          <Modal.Header closeButton>\n            <Modal.Title>Submit Before the Time Limit?</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>Confirm your submission to see the result.</Modal.Body>\n          <Modal.Footer>\n            <Link\n              className=\"outline-secondary\"\n              to={{ pathname: \"/simulationresult/\" + locationState.courseId }}\n              state={{\n                courseId: locationState.courseId,\n                title: locationState.title,\n                num: locationState.num,\n                penalty: locationState.penalty,\n                max: locationState.max,\n                isMulti: locationState.isMulti,\n                pointPerCorrectAns: locationState.max / locationState.num,\n              }}\n            >\n              <Button className=\"btn-outline-success\" variant=\"outline-success\">\n                Confirm\n              </Button>\n            </Link>\n          </Modal.Footer>\n        </Modal>\n      </>\n    );\n  };\n\n  const PaginationRow = (props) => {\n    let items = [];\n    for (let num = 1; num <= props.numPage; num++) {\n      items.push(\n        <Pagination.Item\n          key={num}\n          active={num === pageNum}\n          onClick={() => {\n            setPageNum(num);\n          }}\n        >\n          {num}\n        </Pagination.Item>\n      );\n    }\n\n    return (\n      <Pagination>\n        <Pagination.First />\n        {items}\n        <Pagination.Last />\n      </Pagination>\n    );\n  };\n\n  useEffect(() => {\n    locationState.isMulti ? setQuizType(\"close\") : setQuizType(randomizer);\n  }, [pageNum]);\n\n  return (\n    <Container>\n      <h3>{locationState.type + \" Questions of \" + locationState.title}</h3>\n      <Row className=\"pagination-finish\">\n        <Col>\n          <PaginationRow numPage={locationState.num} />\n        </Col>\n        <Col>\n          <FinishModal />\n        </Col>\n      </Row>\n      <Card className=\"simulation-question-card\">\n        <Stack gap={3}>\n          <Card className=\"simulation-question-text-card\">\n            <h3>{\"Question \" + pageNum}</h3>\n            <Card.Text>\n              \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n              eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut\n              enim ad minim veniam, quis nostrud exercitation ullamco laboris\n              nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in\n              reprehenderit in voluptate velit esse cillum dolore eu fugiat\n              nulla pariatur. Excepteur sint occaecat cupidatat non proident,\n              sunt in culpa qui officia deserunt mollit anim id est laborum.\"\n            </Card.Text>\n          </Card>\n          <Card.Body className=\"simulation-question-answer\">\n            {quizType === \"open\" ? (\n              <TextInput />\n            ) : (\n              <Card className=\"simulation-question-answer-ratio-card\">\n                <Stack gap={1}>\n                  {[\"A\", \"B\", \"C\", \"D\"].map((e) => {\n                    return <Form.Check type=\"checkbox\" label={e} />;\n                  })}\n                </Stack>\n              </Card>\n            )}\n          </Card.Body>\n        </Stack>\n      </Card>\n    </Container>\n  );\n}\n","import { useLocation } from \"react-router-dom\";\nimport { Card, Container, Table, Stack } from \"react-bootstrap\";\nimport \"./SimulationResult.css\";\nimport { useState } from \"react\";\n\nexport default function SimulationResult() {\n  const locationState = useLocation().state;\n\n  const [numCorrect, setNumCorrect] = useState(locationState.num);\n  const [numPenalty, setNumPenalty] = useState(0);\n\n  const numNotGiven = locationState.num - numCorrect - numPenalty;\n  const numQuiz = locationState.num;\n  const maxScore = locationState.max;\n  const pointPerWrong = locationState.penalty;\n  const pointPerCorrect = locationState.pointPerCorrectAns;\n\n  return (\n    <>\n      <Container>\n        <h3>Simulation Result of {locationState.title}</h3>\n        <Card className=\"result-table-card\">\n          <h3>\n            {numCorrect * pointPerCorrect -\n              numPenalty * Math.abs(pointPerWrong)}\n            /{maxScore}\n          </h3>\n          <Table striped bordered hover size=\"lg\">\n            <thead>\n              <tr>\n                <th>Result</th>\n                <th>Number</th>\n                <th>Points Each</th>\n                <th>Total</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                <td>Correct Answer</td>\n                <td>{numCorrect}</td>\n                <td>{pointPerCorrect}</td>\n                <td>{numCorrect * pointPerCorrect}</td>\n              </tr>\n              <tr>\n                <td>Not Given</td>\n                <td>{numNotGiven}</td>\n                <td>0</td>\n                <td>{numNotGiven * 0}</td>\n              </tr>\n              <tr>\n                <td>Wrong Answer</td>\n                <td>{numPenalty}</td>\n                <td>{pointPerWrong}</td>\n                <td>{numPenalty * pointPerWrong}</td>\n              </tr>\n            </tbody>\n          </Table>\n        </Card>\n      </Container>\n    </>\n  );\n}\n","import \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { useState, useEffect } from \"react\";\nimport { Container, Row, Col, Alert, Button } from \"react-bootstrap\";\nimport { Routes, Route, Navigate as Redirect, Link } from \"react-router-dom\";\nimport { NavigationBar, Footer, DebugPaths, TextInput } from \"./base/\";\nimport {\n  AddQuestion,\n  Answers,\n  CoursesList,\n  Exam,\n  Home,\n  LoginForm,\n  MyQuestions,\n  Profile,\n  Questions,\n  Replies,\n  UserSettings,\n  ListFullPage,\n  Bookmarks,\n  StartSimulation,\n  Simulation,\n} from \"./pages/\";\nimport SimulationResult from \"./pages/SimulationResult\";\n// import parsedQuestions from \"./constants/parsed\";\n// import API from './api/API'\n\nfunction App() {\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [showHints, setShowHints] = useState(false);\n  const [showDiscussion, setShowDiscussion] = useState(false);\n  const [admin, setAdmin] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const [dark, setDark] = useState(false);\n\n  useEffect(() => {\n    if (!loggedIn) setMessage(\"\");\n  }, [loggedIn]);\n\n  // useEffect(() => {\n  // \tconst checkAuth = async () => {\n  // \t\ttry {\n  // \t\t\tconst user = await API.getUserInfo()\n  // \t\t\tsetLoggedIn(true)\n  // \t\t\tuser.admin ? setAdmin(true) : setAdmin(false)\n  // \t\t} catch (err) {\n  // \t\t\tconsole.error(err.error)\n  // \t\t}\n  // \t}\n  // \tcheckAuth()\n  // }, [])\n\n  // const doLogin = async credentials => {\n  // \ttry {\n  // \t\tconst username = await API.login(credentials)\n  // \t\tsetLoggedIn(true)\n  // \t\tsetMessage({ msg: `Welcome, ${username}!`, type: 'success' })\n  // \t\tconst user = await API.getUserInfo()\n  // \t\tuser.admin ? setAdmin(true) : setAdmin(false)\n  // \t} catch (err) {\n  // \t\tsetMessage({ msg: err, type: 'danger' })\n  // \t}\n  // }\n\n  const doLogout = async () => {\n    // await API.logout()\n    setLoggedIn(false);\n    setAdmin(false);\n  };\n\n  return (\n    <Container fluid>\n      <Row>\n        <Col className=\"px-0\">\n          <NavigationBar\n            dark={dark}\n            setdark={setDark}\n            logged={loggedIn}\n            setlogged={setLoggedIn}\n            showhints={showHints}\n            setshowhints={setShowHints}\n            showdiscussion={showDiscussion}\n            setshowdiscussion={setShowDiscussion}\n            logout={doLogout}\n          />\n        </Col>\n      </Row>\n      <Row className=\"my-4\">\n        <Col xs={6} className=\"mx-auto\">\n          {message && (\n            <Alert\n              variant={message.type}\n              onClose={() => setMessage(\"\")}\n              dismissible={!message.noclose}\n            >\n              {message.msg}\n            </Alert>\n          )}\n        </Col>\n      </Row>\n      <DebugPaths />\n      <Row className=\"my-4\">\n        <Col xs={10} md={8} className=\"mx-auto\">\n          {/*\n\t\t\t\t\t<Exam question={parsedQuestions.quiz.question} />\n\t\t\t\t\t*/}\n          {loggedIn ? (\n            <Routes>\n              <Route path=\"/*\" element={<Redirect to=\"/\" />} />\n              <Route path=\"/\" element={<Home />} />\n              <Route path=\"/profile\" element={<Profile />} />\n              <Route path=\"/settings\" element={<UserSettings />} />\n              <Route path=\"/courses\" element={<CoursesList />} />\n              <Route path=\"/course/:coursecode\" element={<Questions />} />\n              <Route\n                path=\"/question/:questionid\"\n                element={\n                  <Answers\n                    showhints={showHints}\n                    setshowhints={setShowHints}\n                    showdiscussion={showDiscussion}\n                    setshowdiscussion={setShowDiscussion}\n                  />\n                }\n              />\n              <Route path=\"/discussion/:questionid\" element={<Replies />} />\n              <Route\n                path=\"/simulation/:simulationType\"\n                element={<Simulation />}\n              />\n              <Route path=\"/addquestion\" element={<AddQuestion />} />\n              <Route path=\"/todel\" element={<Exam />} />\n              <Route\n                path=\"/listfullpage/:listName\"\n                element={<ListFullPage />}\n              />\n              <Route path=\"/bookmarks\" element={<Bookmarks />} />\n              <Route\n                path=\"/startsimulation/:courseName\"\n                element={<StartSimulation />}\n              />\n              <Route\n                path=\"/simulationresult/:courseName\"\n                element={<SimulationResult />}\n              />\n              {/* <MyQuestions /> */}\n            </Routes>\n          ) : (\n            <Routes>\n              <Route path=\"/*\" element={<Redirect to=\"/login\" />} />\n              <Route\n                path=\"/login\"\n                element={<LoginForm login={() => setLoggedIn(true)} />}\n              />\n            </Routes>\n          )}\n        </Col>\n      </Row>\n      <Row>\n        <Footer />\n      </Row>\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nlet basename = \"\";\nconst { PUBLIC_URL } = process.env;\n\nif (PUBLIC_URL) {\n  const splitArray = PUBLIC_URL.split(\"://\")[1].split(\"/\");\n  basename =\n    (splitArray.length > 1 && `/${splitArray[splitArray.length - 1]}`) || \"\";\n}\n\nReactDOM.render(\n  // <React.StrictMode>\n  <Router basename={basename}>\n    <App />\n  </Router>,\n  // </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}