{"version":3,"sources":["base/searchBar/searchBar.module.scss","icons.js","base/NavigationBar.js","img/logoSkeeellLight.svg","img/logoSkeeelledLight.svg","img/logoSkeeelledDark.svg","img/logoWeeeOpen.svg","img/logoSkeeellDark.svg","img/logoSkeeelledLightFooter.svg","img/logoSkeeelledDarkFooter.svg","base/Footer.js","base/List.js","base/ListEntry.js","base/ListGroup.js","base/TextInput.js","base/SearchBar.js","base/DebugPaths.js","pages/Answers.js","base/Suggestion.js","pages/CoursesList.js","pages/Exam.js","pages/Home.js","pages/LoginForm.js","pages/Profile.js","pages/Questions.js","pages/UserSettings.js","pages/ListFullPage.js","pages/Bookmarks.js","pages/StartSimulation.js","pages/Simulation.js","pages/SimulationResult.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","iconUser","xmlns","width","height","fill","className","viewBox","d","fillRule","iconLogout","stroke","strokeWidth","strokeLinecap","strokeLinejoin","iconAdmin","fakeQuestions","id","question","author","createdat","tags","excerpt","NavigationBar","props","useState","questions","Navbar","bg","dark","variant","to","Brand","Image","src","process","admin","Nav","Link","as","Collapse","NavDropdown","title","align","lg","Item","href","pathname","state","scope","rows","Divider","Form","Switch","label","defaultChecked","onChange","setdark","showhints","setshowhints","showdiscussion","setshowdiscussion","logged","onClick","logout","Footer","logoSkeeelledLightFooter","alt","logoWeeeOpen","logoSkeeellLight","HeaderColspan","ListDefault","rounded","colSpan","map","r","row","Table","striped","bordered","borderless","ListQuestions","ListAnswers","ListSuggestion","Container","List","ListEntryDefault","cell","length","ListEntryCourses","code","courseId","course","professor","cfu","ListEntryQuestions","Row","Col","t","ListEntryAnswers","rowspan","answer","like","dislike","ListEntryTest","a","b","c","ListEntrySuggestion","ListEntry","ListGroup","lists","filter","useless","i","cols","slice","l","replace","toLowerCase","tiled","Array","keys","key","insertTex","name","icon","execute","state2","textApi","initialState","newSelectionRange","MarkdownUtil","selectWord","text","selection","state1","setSelectionRange","s1","selectedText","substring","replaceSelection","start","end","TextInput","value","selectedTab","onTabChange","val","setVal","selTab","setSelTab","commands","toolbarCommands","getDefaultToolbarCommands","generateMarkdownPreview","markdown","Promise","resolve","remarkPlugins","remarkGfm","remarkMath","rehypePlugins","rehypeKatex","rehypeHighlight","SearchBar","apiCall","fakeSuggestions","suggestions","setSuggestions","setValue","ref","useRef","InputGroup","placeholder","isLoading","searchText","emptyLabel","promptText","options","filterBy","renderMenuItemChildren","option","onInputChange","inputText","onSearch","Button","current","clear","styles","clearButton","DebugPaths","style","padding","Alert","dismissible","Answers","answers","adviceIsHidden","setAdviceIsHidden","answersAreHidden","setAnswersAreHidden","Card","body","in","Group","controlId","Control","sm","md","Pagination","active","Suggestion","fluid","Body","PaginationRow","setActive","items","num","push","First","Last","CoursesList","courses","type","Stack","gap","Exam","Home","tests","LoginForm","username","setUsername","password","setPassword","errorMessage","setErrorMessage","Modal","Dialog","Header","Title","Label","ev","target","event","preventDefault","credentials","valid","checkPassword","login","Profile","xs","Questions","suggestionType","isDesktop","query","matches","setMatches","useEffect","media","window","matchMedia","listener","addEventListener","removeEventListener","useMediaQuery","locationState","useLocation","UserSettings","fake","Check","ListFullPage","location","Bookmarks","StartSimulation","isMulti","setIsMulti","Text","Simulation","simulationQuizType","pageNum","setPageNum","radomizer","Math","floor","random","randomQuizType","setRandomQuizType","e","SimulationResult","App","loggedIn","setLoggedIn","showHints","setShowHints","showDiscussion","setShowDiscussion","setAdmin","message","setMessage","setDark","doLogout","setlogged","onClose","noclose","msg","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","basename","PUBLIC_URL","splitArray","split","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.50dd15ed.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"clearButton\":\"searchBar_clearButton__2N0gd\",\"textInput\":\"searchBar_textInput__2HyW8\"};","const iconUser = (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"24\"\n    height=\"24\"\n    fill=\"currentColor\"\n    className=\"bi bi-person-circle\"\n    viewBox=\"0 0 16 16\"\n  >\n    <path d=\"M11 6a3 3 0 1 1-6 0 3 3 0 0 1 6 0z\" />\n    <path\n      fillRule=\"evenodd\"\n      d=\"M0 8a8 8 0 1 1 16 0A8 8 0 0 1 0 8zm8-7a7 7 0 0 0-5.468 11.37C3.242 11.226 4.805 10 8 10s4.757 1.225 5.468 2.37A7 7 0 0 0 8 1z\"\n    />\n  </svg>\n);\n\nconst iconLogo = (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"24\"\n    height=\"20\"\n    fill=\"currentColor\"\n    className=\"bi bi-book\"\n    viewBox=\"0 1 16 16\"\n  >\n    <path d=\"M1 2.828c.885-.37 2.154-.769 3.388-.893 1.33-.134 2.458.063 3.112.752v9.746c-.935-.53-2.12-.603-3.213-.493-1.18.12-2.37.461-3.287.811V2.828zm7.5-.141c.654-.689 1.782-.886 3.112-.752 1.234.124 2.503.523 3.388.893v9.923c-.918-.35-2.107-.692-3.287-.81-1.094-.111-2.278-.039-3.213.492V2.687zM8 1.783C7.015.936 5.587.81 4.287.94c-1.514.153-3.042.672-3.994 1.105A.5.5 0 0 0 0 2.5v11a.5.5 0 0 0 .707.455c.882-.4 2.303-.881 3.68-1.02 1.409-.142 2.59.087 3.223.877a.5.5 0 0 0 .78 0c.633-.79 1.814-1.019 3.222-.877 1.378.139 2.8.62 3.681 1.02A.5.5 0 0 0 16 13.5v-11a.5.5 0 0 0-.293-.455c-.952-.433-2.48-.952-3.994-1.105C10.413.809 8.985.936 8 1.783z\" />\n  </svg>\n);\n\nconst iconLogout = (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"24\"\n    height=\"24\"\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    stroke=\"currentColor\"\n    strokeWidth=\"2\"\n    strokeLinecap=\"round\"\n    strokeLinejoin=\"round\"\n  >\n    <path d=\"M10 3H6a2 2 0 0 0-2 2v14c0 1.1.9 2 2 2h4M16 17l5-5-5-5M19.8 12H9\" />\n  </svg>\n);\n\nconst iconAdmin = (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"16\"\n    height=\"24\"\n    fill=\"currentColor\"\n    className=\"bi bi-gear-fill\"\n    viewBox=\"0 2 16 16\"\n  >\n    <path d=\"M9.405 1.05c-.413-1.4-2.397-1.4-2.81 0l-.1.34a1.464 1.464 0 0 1-2.105.872l-.31-.17c-1.283-.698-2.686.705-1.987 1.987l.169.311c.446.82.023 1.841-.872 2.105l-.34.1c-1.4.413-1.4 2.397 0 2.81l.34.1a1.464 1.464 0 0 1 .872 2.105l-.17.31c-.698 1.283.705 2.686 1.987 1.987l.311-.169a1.464 1.464 0 0 1 2.105.872l.1.34c.413 1.4 2.397 1.4 2.81 0l.1-.34a1.464 1.464 0 0 1 2.105-.872l.31.17c1.283.698 2.686-.705 1.987-1.987l-.169-.311a1.464 1.464 0 0 1 .872-2.105l.34-.1c1.4-.413 1.4-2.397 0-2.81l-.34-.1a1.464 1.464 0 0 1-.872-2.105l.17-.31c.698-1.283-.705-2.686-1.987-1.987l-.311.169a1.464 1.464 0 0 1-2.105-.872l-.1-.34zM8 10.93a2.929 2.929 0 1 1 0-5.86 2.929 2.929 0 0 1 0 5.858z\" />\n  </svg>\n);\n\nconst iconMeeting = (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"16\"\n    height=\"16\"\n    viewBox=\"0 4 28 24\"\n    fill=\"none\"\n    stroke=\"#ffffff\"\n    strokeWidth=\"2\"\n    strokeLinecap=\"round\"\n    strokeLinejoin=\"round\"\n  >\n    <path d=\"M20 14.66V20a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h5.34\"></path>\n    <polygon points=\"18 2 22 6 12 16 8 16 8 12 18 2\"></polygon>\n  </svg>\n);\n\nconst iconAdd = (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"20\"\n    height=\"20\"\n    fill=\"currentColor\"\n    className=\"bi bi-plus-circle-fill\"\n    viewBox=\"0 0 16 18\"\n  >\n    <path d=\"M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zM8.5 4.5a.5.5 0 0 0-1 0v3h-3a.5.5 0 0 0 0 1h3v3a.5.5 0 0 0 1 0v-3h3a.5.5 0 0 0 0-1h-3v-3z\" />\n  </svg>\n);\n\nconst iconDelete = (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"24\"\n    height=\"24\"\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    stroke=\"#ffffff\"\n    strokeWidth=\"2\"\n    strokeLinecap=\"round\"\n    strokeLinejoin=\"round\"\n  >\n    <polyline points=\"3 6 5 6 21 6\"></polyline>\n    <path d=\"M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2\"></path>\n    <line x1=\"10\" y1=\"11\" x2=\"10\" y2=\"17\"></line>\n    <line x1=\"14\" y1=\"11\" x2=\"14\" y2=\"17\"></line>\n  </svg>\n);\n\nexport {\n  iconUser,\n  iconLogo,\n  iconLogout,\n  iconAdmin,\n  iconMeeting,\n  iconAdd,\n  iconDelete,\n};\n","import {\n  Navbar,\n  Nav,\n  NavDropdown,\n  Image,\n  Form,\n  OverlayTrigger,\n  Popover,\n} from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { iconUser, iconLogout, iconAdmin } from \"../icons.js\";\nimport \"./NavigationBar.css\";\nimport {useState} from \"react\";\n\nconst fakeQuestions = [\n  {\n    id: 1,\n    question: \"What is a vector?\",\n    author: \"Donato\",\n    createdat: \"15:20 12/01/2021\",\n    tags: [\"vectors\"],\n    excerpt: \"Cras justo odio...\",\n  },\n  {\n    id: 2,\n    question: \"Who is Maxwell?\",\n    author: \"Jim\",\n    createdat: \"17:30 13/02/2021\",\n    tags: [\"physics\"],\n    excerpt: \"Cras justo odio...\",\n  },\n  {\n    id: 3,\n    question: \"How many meters per second?\",\n    author: \"Derek\",\n    createdat: \"19:40 14/03/2021\",\n    tags: [\"physics\", \"kinematic\"],\n    excerpt: \"Cras justo odio...\",\n  },\n];\n\nfunction NavigationBar(props) {\n\n  const [questions, setQuestions] = useState(fakeQuestions /*[]*/);\n\n  return (\n    <Navbar\n      id={\"navbar\"}\n      bg={props.dark ? \"dark\" : \"light\"}\n      variant={props.dark ? \"dark\" : \"light\"}\n    >\n      <Link to={\"/\"}>\n        <Navbar.Brand>\n          <Image\n            id={\"navbar-logo-skeeelled\"}\n            src={\n              props.dark\n                ? process.env.PUBLIC_URL + \"/img/logoSkeeelledDark.svg\"\n                : process.env.PUBLIC_URL + \"/img/logoSkeeelledLight.svg\"\n            }\n            className=\"logo\"\n          />\n        </Navbar.Brand>\n      </Link>\n\n      {props.admin ? (\n        <Link to=\"/admin/list\">\n          <Navbar.Brand>{iconAdmin} Admin panel </Navbar.Brand>\n        </Link>\n      ) : null}\n\n      <Nav.Link\n        as={Link}\n        id={props.dark ? \"course-link-dark\" : \"course-link\"}\n        to=\"/courses\"\n      >\n        Courses\n      </Nav.Link>\n\n      <Nav.Link\n        as={Link}\n        id={props.dark ? \"add-question-link-dark\" : \"add-question-link\"}\n        to=\"/addquestion\"\n      >\n        Add question\n      </Nav.Link>\n\n      <Nav id={\"user-dropdown\"}>\n        <Navbar.Collapse className=\"mr-4 mt-0\">\n          <NavDropdown\n            id=\"dropdown-menu-align-responsive-2\"\n            title={iconUser}\n            align={{ lg: \"end\" }}\n          >\n            <Link to=\"/profile\" className=\"dropdown-link\">\n              <NavDropdown.Item href=\"#action/3.1\">Profile</NavDropdown.Item>\n            </Link>\n            <Link to={{pathname:\"/bookmarks\"}} state={{scope: \"questions\", title: \"Bookmarked Questions\", rows: questions}}>\n              <NavDropdown.Item href=\"#action/3.2\">Bookmarks</NavDropdown.Item>\n            </Link>\n            <Link to=\"/settings\" className=\"dropdown-link\">\n              <NavDropdown.Item href=\"#action/3.3\">Settings</NavDropdown.Item>\n            </Link>\n            <NavDropdown.Divider />\n            <div className=\"dropdown-item\">\n              <Form.Switch\n                label=\"Dark\"\n                id=\"custom-switch-dark\"\n                defaultChecked={props.dark}\n                onChange={() => props.setdark(!props.dark)}\n              />\n            </div>\n            <div className=\"dropdown-item\">\n              <Form.Switch\n                label=\"Show hints\"\n                id=\"custom-switch-hint\"\n                defaultChecked={props.showhints}\n                onChange={() => props.setshowhints(!props.showhints)}\n              />\n            </div>\n            <div className=\"dropdown-item\">\n              <Form.Switch\n                label=\"Show discussion\"\n                id=\"custom-switch-disc\"\n                defaultChecked={props.showdiscussion}\n                onChange={() => props.setshowdiscussion(!props.showdiscussion)}\n              />\n            </div>\n            {props.logged && (\n              <>\n                <NavDropdown.Divider />\n                <NavDropdown.Item onClick={props.logout}>\n                  Logout {iconLogout}\n                </NavDropdown.Item>\n              </>\n            )}\n          </NavDropdown>\n        </Navbar.Collapse>\n      </Nav>\n\n      {/* <Form.Switch label=\"Check this switch\" type=\"switch\" id=\"custom-switch\"/> */}\n\n      {/* <OverlayTrigger\n\t\t\t\ttrigger=\"click\"\n\t\t\t\tkey=\"bottom\"\n\t\t\t\tplacement=\"bottom\"\n\t\t\t\toverlay={\n\t\t\t\t\t<Popover id=\"popover-positioned-bottom\">\n\t\t\t\t\t<Popover.Header as=\"h3\">Popover bottom</Popover.Header>\n\t\t\t\t\t<Popover.Body>\n\t\t\t\t\t\t<strong>Holy guacamole!</strong> Check this info.\n\t\t\t\t\t</Popover.Body>\n\t\t\t\t\t</Popover>\n\t\t\t\t}\n\t\t\t\t>\n\t\t\t\t<Button variant=\"secondary\">Popover on bottom</Button>\n\t\t\t\t</OverlayTrigger>\n\t\t\t*/}\n    </Navbar>\n  );\n}\n\nexport default NavigationBar;\n","export default __webpack_public_path__ + \"static/media/logoSkeeellLight.196ac81d.svg\";","export default __webpack_public_path__ + \"static/media/logoSkeeelledLight.89a46839.svg\";","export default __webpack_public_path__ + \"static/media/logoSkeeelledDark.8ee41200.svg\";","export default __webpack_public_path__ + \"static/media/logoWeeeOpen.a7c8f3ee.svg\";","export default __webpack_public_path__ + \"static/media/logoSkeeellDark.aa3ae18b.svg\";","export default __webpack_public_path__ + \"static/media/logoSkeeelledLightFooter.79648b4a.svg\";","export default __webpack_public_path__ + \"static/media/logoSkeeelledDarkFooter.e5149d82.svg\";","import { Image } from \"react-bootstrap\";\nimport {\n  logoSkeeelledLight,\n  logoSkeeellLight,\n  logoSkeeelledDark,\n  logoSkeeellDark,\n  logoWeeeOpen,\n} from \"../img/\";\nimport {\n  logoSkeeelledLightFooter,\n  logoSkeeellLightFooter,\n  logoSkeeelledDarkFooter,\n  logoSkeeellDarkFooter,\n} from \"../img/\";\nimport \"./Footer.css\";\n\nfunction Footer() {\n  return (\n    <div id={\"footer\"} className=\"mx-auto\">\n      <h5 id={\"skeeelled\"} className=\"mx-auto\">\n        <a\n          id={\"skeeelled-logo-link\"}\n          href={\"https://github.com/weee-open/skeeelled\"}\n        >\n          <Image\n            id={\"skeeelled-logo\"}\n            src={logoSkeeelledLightFooter}\n            alt={\"skeeelled\"}\n          />\n        </a>\n        is a tool realized by\n        <a href={\"https://weeeopen.polito.it\"}>\n          <Image id={\"weee-open-logo\"} src={logoWeeeOpen} alt={\"WEEE Open\"} />\n        </a>\n      </h5>\n      <h5 id={\"skeeell\"} className=\"mx-auto\">\n        See more about\n        <a href={\"https://weeeopen.polito.it/skeeell\"}>\n          <Image id={\"skeeell-logo\"} src={logoSkeeellLight} alt={\"skeeell\"} />\n        </a>\n      </h5>\n    </div>\n  );\n}\n\nexport default Footer;\n","import { Col, Container, Row, Table } from \"react-bootstrap\";\nimport { ListEntry } from \"./\";\nimport \"./List.css\";\n\nfunction HeaderColspan(scope) {\n  switch (scope) {\n    case \"courses\":\n      return \"4\";\n    case \"questions\":\n      return \"4\";\n    default:\n      return \"10\";\n  }\n}\n\nfunction ListDefault({ props }) {\n  return (\n    <>\n      {props.rounded ? (\n        <table className=\"list roundedList\">\n          <thead>\n            <tr>\n              <th className=\"listTitle\" colSpan={HeaderColspan(props.scope)}>\n                {props.title}\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            {props.rows.map((r) => (\n              <ListEntry scope={props.scope} row={r} />\n            ))}\n          </tbody>\n        </table>\n      ) : (\n        <Table striped bordered borderless className=\"list\">\n          <thead className=\"listTitle\">\n            <tr>\n              <th colSpan={HeaderColspan(props.scope)}>{props.title}</th>\n            </tr>\n          </thead>\n          <tbody>\n            {props.rows.map((r) => (\n              <ListEntry scope={props.scope} row={r} />\n            ))}\n          </tbody>\n        </Table>\n      )}\n    </>\n  );\n}\n\nfunction ListQuestions({ props }) {\n  return (\n    <>\n      <h3 className=\"listQuestionsTitle\">{props.title}</h3>\n      {props.rows.map((r) => (\n        <ListEntry scope={props.scope} row={r} />\n      ))}\n    </>\n  );\n}\n\nfunction ListAnswers({ props }) {\n  return (\n    <Table borderless className=\"list listAnswers\">\n      <tbody>\n        {props.rows.map((r) => (\n          <ListEntry scope={props.scope} row={r} />\n        ))}\n      </tbody>\n    </Table>\n  );\n}\n\nfunction ListSuggestion({ props }) {\n  return (\n    <>\n      <Container>\n        <h3 className=\"listSuggestionTitle\">{props.title}</h3>\n        <div className=\"listSuggestion-questions\">\n          {props.rows.map((r) => (\n            <ListEntry scope={props.scope} row={r} />\n          ))}\n        </div>\n      </Container>\n    </>\n  );\n}\n\nfunction List(props) {\n  if (props.scope === \"questions\") return <ListQuestions props={props} />;\n  if (props.scope === \"answers\") return <ListAnswers props={props} />;\n  if (props.scope === \"suggestion\") return <ListSuggestion props={props} />;\n  return <ListDefault props={props} />;\n}\n\nexport default List;\n","import {Row, Col, Container, Image, Card} from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport \"./ListEntry.css\";\n\nfunction ListEntryDefault(props) {\n  return (\n    <tr>\n      {props.row.map((cell) => (\n        <td>\n          {props.row.length === 1 && <span className=\"greenDot\">●</span>}\n          {cell}\n        </td>\n      ))}\n    </tr>\n  );\n}\n\nfunction ListEntryCourses(props) {\n  return (\n    <tr>\n      <td>{props.row.code}</td>\n      <td>\n        <Link to={\"/course/\" + props.row.code} state={{ courseId:props.row.code, title:props.row.course}}>{props.row.course}</Link>\n      </td>\n      <td>{props.row.professor}</td>\n      <td>{props.row.cfu}</td>\n    </tr>\n  );\n}\n\nfunction ListEntryQuestions(props) {\n  return (\n    <div className=\"questionEntry\">\n      <Row>\n        <Col>\n          <Link to={\"/question/\" + props.row.id} className=\"question\">\n            {props.row.question}\n          </Link>\n        </Col>\n      </Row>\n      <Row>\n        <Col>from {props.row.author}</Col>\n        <Col>Created at: {props.row.createdat}</Col>\n      </Row>\n      <Row>\n        <Col>\n          {props.row.tags.map((t) => (\n            <Link to=\"\" className=\"tags\">\n              #{t}\n            </Link>\n          ))}\n        </Col>\n      </Row>\n      <Row>\n        <Col>{props.row.excerpt}</Col>\n      </Row>\n    </div>\n  );\n}\n\nfunction ListEntryAnswers(props) {\n  return (\n    <>\n      <tr>\n        <td colSpan=\"2\">\n          {props.row.author}, {props.row.createdat}\n        </td>\n      </tr>\n      <tr>\n        <td className=\"answerEntry\">\n          <Link to=\"\">\n            <Image\n              src={process.env.PUBLIC_URL + \"/icons/UP ARROW.svg\"}\n              width=\"90%\"\n              onClick={() => {}}\n            />\n          </Link>\n        </td>\n        <td rowspan=\"3\">{props.row.answer}</td>\n      </tr>\n      <tr>\n        <td className=\"answerEntry\">\n          {props.row.like - props.row.dislike > 0 && \"+\"}\n          {props.row.like - props.row.dislike}\n        </td>\n      </tr>\n      <tr>\n        <td className=\"answerEntry\">\n          <Link to=\"\">\n            <Image\n              src={process.env.PUBLIC_URL + \"/icons/DOWN ARROW.svg\"}\n              width=\"90%\"\n              onClick={() => {}}\n            />\n          </Link>\n        </td>\n      </tr>\n    </>\n  );\n}\n\nfunction ListEntryTest(props) {\n  return (\n    <tr>\n      <td>{props.row.a}</td>\n      <td>{props.row.b}</td>\n      <td>{props.row.c}</td>\n    </tr>\n  );\n}\n\nfunction ListEntrySuggestion(props) {\n  return (\n    <Container>\n      <Col>\n        <Col>\n          <Link\n            to={\"/suggestion/\" + props.row.id}\n            className=\"suggestion-question\"\n          >\n            {props.row.question}\n          </Link>\n        </Col>\n        <Col>from {props.row.author}</Col>\n        <Col>Created at: {props.row.createdat}</Col>\n      </Col>\n    </Container>\n  );\n}\n\nfunction ListEntry(props) {\n  return (\n    <>\n      {props.scope === \"default\" && <ListEntryDefault row={props.row} />}\n      {props.scope === \"courses\" && <ListEntryCourses row={props.row} />}\n      {props.scope === \"questions\" && <ListEntryQuestions row={props.row} />}\n      {props.scope === \"answers\" && <ListEntryAnswers row={props.row} />}\n      {props.scope === \"test\" && <ListEntryTest row={props.row} />}\n      {props.scope === \"suggestion\" && <ListEntrySuggestion row={props.row} />}\n    </>\n  );\n}\n\nexport default ListEntry;\n","import { Container, Row, Col } from \"react-bootstrap\";\nimport { List } from \"./\";\nimport \"./ListGroup.css\";\nimport {Link} from \"react-router-dom\";\n\nfunction ListGroup(props) {\n  return (\n    <Container>\n      {props.lists\n        .filter((useless, i) => i % props.cols === 0)\n        .map((useless, i) => (\n          <Row>\n            {props.lists\n              .slice(i * props.cols, (i + 1) * props.cols)\n              .map((l) => (\n                    <Col>\n                      <Link className=\"list-attributes\" to={{pathname:\"/listfullpage/\" + (l.title).replace(/\\s/g, '').toLowerCase()}} state={{ scope: l.scope, title: l.title, rows: l.rows }}>\n                        <List\n                            scope={l.scope}\n                            title={l.title}\n                            rows={l.rows}\n                            rounded={props.rounded}\n                        />\n                      </Link>\n                    </Col>\n              ))}\n            {props.tiled &&\n              (i + 1) * props.cols > props.lists.length - 1 &&\n              props.lists.length % props.cols > 0 &&\n              [\n                ...Array(props.cols - (props.lists.length % props.cols)).keys(),\n              ].map((key) => <Col></Col>)}\n          </Row>\n        ))}\n    </Container>\n  );\n}\n\nexport default ListGroup;\n","import React, { useState } from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport ReactMde, {\n  getDefaultToolbarCommands,\n  MarkdownUtil,\n} from \"@sahircansurmeli/react-mde\";\nimport ReactMarkdown from \"react-markdown\";\nimport remarkGfm from \"remark-gfm\";\nimport remarkMath from \"remark-math\";\nimport rehypeKatex from \"rehype-katex\";\nimport rehypeHighlight from \"rehype-highlight\";\n\nimport \"@sahircansurmeli/react-mde/lib/styles/css/react-mde-all.css\";\nimport \"katex/dist/katex.min.css\";\nimport \"./textInput/textInput.css\";\nimport \"highlight.js/styles/github.css\";\n\nconst insertTex = {\n  name: \"insert-tex\",\n  icon: () => (\n    <img\n      src={process.env.PUBLIC_URL + \"/icons/TeX_logo.svg\"}\n      width=\"26\"\n      height=\"15\"\n      alt=\"Insert TeX\"\n    />\n  ),\n  execute: ({ textApi, initialState }) => {\n    const newSelectionRange = MarkdownUtil.selectWord({\n      text: initialState.text,\n      selection: initialState.selection,\n    });\n\n    const state1 = textApi.setSelectionRange(newSelectionRange);\n\n    const s1 = state1.selection;\n    const text = state1.text;\n    const selectedText = state1.selectedText;\n    let state2;\n\n    if (\n      selectedText.substring(0, 1) === \"$\" &&\n      selectedText.substring(selectedText.length - 1, selectedText.length) ===\n        \"$\"\n    ) {\n      state2 = textApi.replaceSelection(\n        selectedText.substring(1, selectedText.length - 1)\n      );\n      textApi.setSelectionRange({\n        start: s1.start,\n        end: s1.end - 1,\n      });\n    } else if (\n      s1.start >= 1 &&\n      text.substring(s1.start - 1, s1.start) === \"$\" &&\n      text.substring(s1.end, s1.end + 1) === \"$\"\n    ) {\n      textApi.setSelectionRange({\n        start: s1.start - 1,\n        end: s1.end + 1,\n      });\n      state2 = textApi.replaceSelection(state1.selectedText);\n      textApi.setSelectionRange({\n        start: state2.selection.start - state1.selectedText.length,\n        end: state2.selection.end,\n      });\n    } else {\n      // Replaces the current selection with the italic mark up\n      state2 = textApi.replaceSelection(`$${state1.selectedText}$`);\n      // Adjust the selection to not contain the *\n      textApi.setSelectionRange({\n        start: state2.selection.end - 1 - state1.selectedText.length,\n        end: state2.selection.end - 1,\n      });\n    }\n  },\n};\n\nfunction TextInput({ value, onChange, selectedTab, onTabChange }) {\n\n  const [val, setVal] = useState(\"\");\n  const [selTab, setSelTab] = useState(\"write\");\n\n  return (\n    <Container>\n      <ReactMde\n        value={value || val}\n        onChange={onChange || setVal}\n        selectedTab={selectedTab || selTab}\n        onTabChange={onTabChange || setSelTab}\n        commands={{ \"insert-tex\": insertTex }}\n        toolbarCommands={[...getDefaultToolbarCommands(), [\"insert-tex\"]]}\n        generateMarkdownPreview={(markdown) =>\n          Promise.resolve(\n            <ReactMarkdown\n              remarkPlugins={[remarkGfm, remarkMath]}\n              rehypePlugins={[rehypeKatex, rehypeHighlight]}\n            >\n              {markdown}\n            </ReactMarkdown>\n          )\n        }\n      />\n    </Container>\n  );\n}\n\nexport default TextInput;\n","import React, { useRef, useState } from \"react\";\nimport { InputGroup, Button } from \"react-bootstrap\";\nimport { AsyncTypeahead } from \"react-bootstrap-typeahead\";\n\nimport styles from \"./searchBar/searchBar.module.scss\";\nimport \"react-bootstrap-typeahead/css/Typeahead.css\";\nimport \"react-bootstrap-typeahead/css/Typeahead.bs5.css\";\n\nfunction SearchBar({ apiCall }) {\n  /* Mock search suggestions */\n  const fakeSuggestions = [\n    { label: \"duckduckgo\" },\n    { label: \"duckduck\" },\n    { label: \"duckduckgo browser\" },\n    { label: \"duckduckgo download\" },\n  ];\n\n  const [suggestions, setSuggestions] = useState([]);\n  const [value, setValue] = useState(\"\");\n\n  const onSearch = (inputText) => {\n    setValue(inputText);\n    if (inputText.length > 0) {\n      setSuggestions(fakeSuggestions);\n    } else {\n      setSuggestions([]);\n    }\n  };\n\n  const ref = useRef();\n\n  return (\n    <InputGroup>\n      <AsyncTypeahead\n        id=\"Search bar\"\n        placeholder=\"Search courses\"\n        isLoading={false}\n        searchText=\"\"\n        emptyLabel=\"\"\n        promptText=\"\"\n        options={suggestions}\n        filterBy={() => true}\n        renderMenuItemChildren={(option) => <span>{option.label}</span>}\n        ref={ref}\n        onInputChange={onSearch}\n        onSearch={() => {}}\n      />\n      {value.length > 0 && (\n        <Button\n          variant=\"link\"\n          onClick={() => {\n            ref.current.clear();\n            setValue(\"\");\n          }}\n          className={\n            \"btn-outline-primary border-left-0 border \" + styles.clearButton\n          }\n        >\n          <img\n            width=\"20\"\n            height=\"20\"\n            src={process.env.PUBLIC_URL + \"/icons/x.svg\"}\n            alt=\"Search\"\n          />\n        </Button>\n      )}\n      <Button\n        variant={value.length > 0 ? \"primary\" : \"link\"}\n        className=\"btn-outline-primary border-left-0 border\"\n      >\n        <img\n          width=\"20\"\n          height=\"20\"\n          src={process.env.PUBLIC_URL + \"/icons/SEARCH.svg\"}\n          alt=\"Search\"\n        />\n      </Button>\n    </InputGroup>\n  );\n}\n\nexport default SearchBar;\n","import { Alert, Button } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\n\nfunction DebugPaths() {\n  const style = { padding: \"5px\" };\n  return (\n    <Alert dismissible>\n      <b>Dev only: </b>\n      <Link style={style} to=\"/login\">\n        Login\n      </Link>\n      <Link style={style} to=\"/\">\n        Home\n      </Link>\n      <Link style={style} to=\"/profile\">\n        Profile\n      </Link>\n      <Link style={style} to=\"/courses\">\n        Courses\n      </Link>\n      <Link style={style} to=\"/course/ABCDEF\" state={{courseId:\"courseId\", title:\"Course Name\"}}>\n        Course\n      </Link>\n      <Link style={style} to=\"/question/QUESTID\">\n        Question\n      </Link>\n      <Link style={style} to=\"/myquestions\">\n        MyQuestions\n      </Link>\n      <Link style={style} to=\"/discussion/QUESTID\">\n        Discussion\n      </Link>\n      <Link style={style} to=\"/startsimulation/\">\n        Simulation\n      </Link>\n      <Link style={style} to=\"/settings\">\n        UserSettings\n      </Link>\n      <Link style={style} to=\"/todel\">\n        Exam\n      </Link>\n    </Alert>\n  );\n}\n\nexport default DebugPaths;\n","import { useState } from \"react\";\nimport {\n  Button,\n  Container,\n  Card,\n  Row,\n  Col,\n  Pagination,\n  FloatingLabel,\n  Collapse,\n  Form,\n} from \"react-bootstrap\";\nimport { List } from \"../base\";\nimport \"./Answers.css\";\n\nfunction Answers(props) {\n  const fakeAnswers = [\n    {\n      id: 1,\n      answer: \"Cras justo odio dapibus ac facilisis in\",\n      author: \"Donato\",\n      createdat: \"15:20 12/01/2021\",\n      like: 5,\n      dislike: 2,\n    },\n    {\n      id: 2,\n      answer: \"Morbi leo risus porta ac consectetur ac\",\n      author: \"Jim\",\n      createdat: \"17:30 13/02/2021\",\n      like: 5,\n      dislike: 7,\n    },\n    {\n      id: 3,\n      answer: \"Vestibulum at eros\",\n      author: \"Derek\",\n      createdat: \"19:40 14/03/2021\",\n      like: 9,\n      dislike: 1,\n    },\n  ];\n\n  const [answers, setAnswers] = useState(fakeAnswers);\n  const [adviceIsHidden, setAdviceIsHidden] = useState(!props.showhints);\n  const [answersAreHidden, setAnswersAreHidden] = useState(\n    !props.showdiscussion\n  );\n\n  return (\n    <Container className=\"container\">\n      <Card body>\n        <Row lg={12} className=\"header\">\n          <Col>\n            <h5>\n              Dolor sit amet consectetur adipiscing elit pellentesque habitant ?\n              {adviceIsHidden ? (\n                <Button\n                  id={\"hint-button\"}\n                  className=\"btn-sm\"\n                  onClick={() => {\n                    setAdviceIsHidden(!adviceIsHidden);\n                  }}\n                >\n                  Show hint\n                </Button>\n              ) : (\n                <Button\n                  id={\"hint-button\"}\n                  className=\"btn-sm\"\n                  onClick={() => {\n                    setAdviceIsHidden(!adviceIsHidden);\n                  }}\n                >\n                  Hide hint\n                </Button>\n              )}\n            </h5>\n            {!adviceIsHidden && (\n              <h6>\n                habitant morbi tristique senectus et netus. Lorem sed risus\n                ultricies tristique nulla aliquet enim. Blandit cursus risus at\n                ultrices mi tempus.\n              </h6>\n            )}\n          </Col>\n        </Row>\n\n        <Row>\n          <Col lg=\"12\">\n            <Button\n              onClick={() => setAnswersAreHidden((value) => !value)}\n              aria-controls=\"example-collapse-text\"\n              aria-expanded={!answersAreHidden}\n              className={`w-100 ${\n                answersAreHidden ? \"btn-success\" : \"btn-warning\"\n              }`}\n            >\n              {answersAreHidden ? \"Show answers\" : \"Hide answers\"}\n            </Button>\n          </Col>\n        </Row>\n        <Collapse className=\"collapse\" in={!answersAreHidden}>\n          <Row>\n            <Col lg=\"12\">\n              <Form.Group controlId=\"formGridState\">\n                <Form.Control placeholder=\"Search\" />\n              </Form.Group>\n            </Col>\n            <Col lg=\"12\">\n              <List scope=\"answers\" title=\"Physics I\" rows={answers} />\n            </Col>\n            <Col lg=\"12\" sm=\"12\" md=\"12\">\n              <Pagination>\n                {[\n                  <Pagination.Item key={1} active>\n                    {1}\n                  </Pagination.Item>,\n                  <Pagination.Item key={2} active={false}>\n                    {2}\n                  </Pagination.Item>,\n                  <Pagination.Item key={3} active={false}>\n                    {3}\n                  </Pagination.Item>,\n                  <Pagination.Item key={4} active={false}>\n                    {4}\n                  </Pagination.Item>,\n                  <Pagination.Item key={5} active={false}>\n                    {5}\n                  </Pagination.Item>,\n                  <Pagination.Item key={6} active={false}>\n                    {6}\n                  </Pagination.Item>,\n                ]}\n              </Pagination>\n            </Col>\n          </Row>\n        </Collapse>\n      </Card>\n    </Container>\n  );\n}\n\nexport default Answers;\n","import List from \"./List\";\nimport { ListEntry } from \"./index\";\nimport { Card, Container, Row } from \"react-bootstrap\";\nimport \"./Suggestion.css\";\n\nfunction Suggestion(props) {\n  return (\n    <Container className=\"suggestion-container\" fluid>\n      <Card className=\"suggestion-card\">\n        <Card.Body>\n          <List\n            scope={props.scope}\n            title={props.title}\n            rows={props.rows}\n          />\n        </Card.Body>\n      </Card>\n    </Container>\n  );\n}\n\nexport default Suggestion;\n","import {Row, Col, Card, Pagination, Form, Button, Stack} from \"react-bootstrap\";\nimport {Link} from \"react-router-dom\";\nimport { useState /* , useEffect */ } from \"react\";\nimport { Recent, List, SearchBar } from \"../base/\";\nimport Suggestion from \"../base/Suggestion\";\n// import API from \"../api/API\";\n\nconst PaginationRow = () => {\n  let [active, setActive] = useState(1)\n  let items = [];\n  for( let num = 1; num <= 5; num++) {\n    items.push(\n        <Pagination.Item key={num} active={num === active} onClick={()=>{\n          setActive(active = num)\n        }}>\n          {num}\n        </Pagination.Item>\n    )\n  }\n\n  return (\n      <Pagination>\n        <Pagination.First />\n        {items}\n        <Pagination.Last />\n      </Pagination>\n  )\n}\n\nfunction CoursesList() {\n  /** Mock courses and questions **/\n  const fakeCourses = [\n    { code: \"A0B1C2\",\n      course: \"Analysis 1\",\n      cfu: 10,\n      professor: \"Mario Rossi\",\n    },\n    {\n      code: \"D3E4F5\",\n      course: \"Physics 1\",\n      cfu: 10,\n      professor: \"Stefano Bianchi\",\n    },\n    {\n      code: \"G6H7I8\",\n      course: \"Geometry\",\n      cfu: 10,\n      professor: \"Giuseppe Verdi\",\n    },\n  ];\n\n  const fakeQuestions = [\n    {\n      id: 1,\n      question: \"What is a vector?\",\n      author: \"Donato\",\n      createdat: \"15:20 12/01/2021\",\n      tags: [\"vectors\"],\n      excerpt: \"Cras justo odio...\",\n    },\n    {\n      id: 2,\n      question: \"Who is Maxwell?\",\n      author: \"Jim\",\n      createdat: \"17:30 13/02/2021\",\n      tags: [\"physics\"],\n      excerpt: \"Cras justo odio...\",\n    },\n    {\n      id: 3,\n      question: \"How many meters per second?\",\n      author: \"Derek\",\n      createdat: \"19:40 14/03/2021\",\n      tags: [\"physics\", \"kinematic\"],\n      excerpt: \"Cras justo odio...\",\n    },\n  ];\n\n  const [courses, setCourses] = useState(fakeCourses /*[]*/);\n  const [myCourses, setMyCourses] = useState([]);\n  const [suggestions, setSuggestions] = useState(fakeQuestions /*[]*/);\n  const suggestionType = [\"Latest\", \"Hottest\"];\n  const coursesType = [\"My Courses\", \"All Courses\"]\n\n\n  /**Courses and questions related**/\n  /*\n\t// courses\n\tuseEffect(()=> {\n\t\tAPI.getCourses()\n\t\t\t.then(courses => setCourses(courses))\n\t\t\t.catch(err => console.log(err));\n\t}, []);\n\n\t// myCourses\n\tuseEffect(() => {\n\t\tAPI.getMyCourses()\n\t\t\t.then(myCourses => setMyCourses(myCourses))\n\t\t\t.catch(err => console.log(err));\n\t}, []);\n\t*/\n\n  // useEffect(() => {\n  //     const getCourses = async () => {\n  //         const courses = await API.getAllCourses();\n  //         setCourses(courses);\n  //     }\n  //     getCourses();\n  // },[]);\n\n  return (\n    <Row>\n      <Col>\n        <Card body>\n          <Row lg={12} className=\"py-0 header\">\n              <h3>Courses</h3>\n          </Row>\n          <Row>\n            <SearchBar />\n          </Row>\n          {coursesType.map(type => {\n            return (\n                <Link className=\"list-attributes\" to={{pathname:\"/listfullpage/\" + type.toLowerCase()}} state={{ scope: \"courses\", title: type, rows: courses }}>\n                  <List scope=\"courses\" title={type} rows={courses} />\n                </Link>\n            )\n          })}\n          <PaginationRow />\n        </Card>\n      </Col>\n        <Col className=\"d-none d-md-inline-block col-md-4\">\n          <Stack gap={4}>\n            {suggestionType.map(type => {\n              return (\n                  <Row>\n                    <Suggestion\n                        scope={\"suggestion\"}\n                        title={ type + \" Questions\"}\n                        rows={suggestions}\n                    />\n                  </Row>\n              )\n            })}\n          </Stack>\n        </Col>\n    </Row>\n  );\n}\n\nexport default CoursesList;\n","import parse from \"html-react-parser\";\nimport { Button, Container, Row, Col, Card, Form } from \"react-bootstrap\";\nimport \"./Exam.css\";\n\nconst MultipleChoice = ({ index, questiontext, answer, ...rest }) => {\n  console.log({ answer });\n  return (\n    <Form className=\"multipleChoice\">\n      <Form.Label>\n        {index})\n        {questiontext\n          ? questiontext[\"@format\"] === \"html\"\n            ? parse(questiontext.text)\n            : `${index}) ${questiontext.text}`\n          : null}\n      </Form.Label>\n      {answer &&\n        answer.map(\n          (ans, index) =>\n            ans && (\n              <div key={`inline-${ans}`} className=\"mb-3\">\n                <Form.Check\n                  inline\n                  label={ans[\"@format\"] === \"html\" ? parse(ans.text) : ans.text}\n                  name=\"group1\"\n                  type=\"checkbox\"\n                  id={`inline-${index}-1`}\n                />\n              </div>\n            )\n        )}\n    </Form>\n  );\n};\n\nconst Exam = ({ question }) => {\n  return (\n    <Container className=\"container\">\n      <Card body>\n        <Row lg={12} className=\"header\">\n          <Col>\n            <h3>Exam</h3>\n          </Col>\n        </Row>\n        {/* {question.map(\n\t\t\t\t\t(item, index) =>\n\t\t\t\t\t\t(item[\"@type\"] = \"multichoice\" && (\n\t\t\t\t\t\t\t<Row className='mt-10'>\n\t\t\t\t\t\t\t\t<Col lg='12'>\n\t\t\t\t\t\t\t\t\t<MultipleChoice {...{ index, ...item }} />\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t))\n\t\t\t\t)} */}\n      </Card>\n    </Container>\n  );\n};\n\nexport default Exam;\n","import { Row, Col, Card } from \"react-bootstrap\";\nimport { useState } from \"react\";\nimport \"./Home.css\";\nimport { ListGroup, SearchBar } from \"../base/\";\n\nfunction Home() {\n  const fake = [\n    {\n      scope: \"default\",\n      title: \"New questions in courses I'm enrolled in\",\n      rows: [\n        [\"Cras justo odio\"],\n        [\"Dapibus ac facilisis in\"],\n        [\"Morbi leo risus\"],\n        [\"Porta ac consectetur ac\"],\n        [\"Vestibulum at eros\"],\n      ],\n    },\n    {\n      scope: \"default\",\n      title: \"Replies\",\n      rows: [\n        [\"Cras justo odio\"],\n        [\"Dapibus ac facilisis in\"],\n        [\"Morbi leo risus\"],\n        [\"Porta ac consectetur ac\"],\n        [\"Vestibulum at eros\"],\n      ],\n    },\n    {\n      scope: \"test\",\n      title: \"My questions\",\n      rows: [\n        { a: \"aaa\", b: \"bbb\", c: \"ccc\" },\n        { a: \"aaa\", b: \"bbb\", c: \"ccc\" },\n        { a: \"aaa\", b: \"bbb\", c: \"ccc\" },\n      ],\n    },\n    {\n      scope: \"test\",\n      title: \"My answers\",\n      rows: [\n        { a: \"aaa\", b: \"bbb\", c: \"ccc\" },\n        { a: \"aaa\", b: \"bbb\", c: \"ccc\" },\n        { a: \"aaa\", b: \"bbb\", c: \"ccc\" },\n      ],\n    },\n  ];\n\n  const [tests, setTests] = useState(fake);\n\n  return (\n    <Card body>\n      <Row lg={12} className=\"py-0 header\">\n        <Col>\n          <h3>Hi, Name Surname!</h3>\n        </Col>\n      </Row>\n      <ListGroup lists={tests} cols={2} tiled rounded />\n    </Card>\n  );\n}\n\nexport default Home;\n","import { useState } from \"react\";\nimport { Modal, Form, Button, Alert } from \"react-bootstrap\";\n\nfunction LoginForm(props) {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  function checkPassword(password) {\n    if (password.length >= 6) return true;\n    return false;\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    setErrorMessage(\"\");\n    const credentials = { username, password };\n    let valid = true;\n    if (username === \"\" || !checkPassword(password)) valid = false;\n    if (valid) {\n      props.login(credentials);\n    } else {\n      setErrorMessage(\"Errors in the form\");\n    }\n  };\n\n  return (\n    <Modal.Dialog>\n      <Modal.Header>\n        <Modal.Title>Login</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        {errorMessage ? <Alert variant=\"danger\">{errorMessage}</Alert> : null}\n        <Form.Group controlId=\"username\">\n          <Form.Label>Email</Form.Label>\n          <Form.Control\n            type=\"email\"\n            value={username}\n            onChange={(ev) => setUsername(ev.target.value)}\n          />\n        </Form.Group>\n        <Form.Group controlId=\"password\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            value={password}\n            onChange={(ev) => setPassword(ev.target.value)}\n          />\n        </Form.Group>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button onClick={handleSubmit}>Login</Button>\n      </Modal.Footer>\n    </Modal.Dialog>\n  );\n}\n\nexport default LoginForm;\n","import { Row, Col, Card, Image } from \"react-bootstrap\";\nimport { useState } from \"react\";\nimport \"./Profile.css\";\nimport { ListGroup, SearchBar } from \"../base/\";\n\nfunction Profile() {\n  const fake = [\n    {\n      scope: \"default\",\n      title: \"My questions\",\n      rows: [\n        [\"Cras justo odio\"],\n        [\"Dapibus ac facilisis in\"],\n        [\"Morbi leo risus\"],\n        [\"Porta ac consectetur ac\"],\n        [\"Vestibulum at eros\"],\n      ],\n    },\n    {\n      scope: \"default\",\n      title: \"My answers\",\n      rows: [\n        [\"Cras justo odio\"],\n        [\"Dapibus ac facilisis in\"],\n        [\"Morbi leo risus\"],\n        [\"Porta ac consectetur ac\"],\n        [\"Vestibulum at eros\"],\n      ],\n    },\n    {\n      scope: \"default\",\n      title: \"My simulation results\",\n      rows: [\n        [\"aaa\", \"bbb\", \"ccc\"],\n        [\"aaa\", \"bbb\", \"ccc\"],\n        [\"aaa\", \"bbb\", \"ccc\"],\n      ],\n    },\n  ];\n\n  const [tests, setTests] = useState(fake);\n\n  return (\n    <Card body>\n      <Row lg={12} className=\"py-0 header\">\n        <Col xs={2}>\n          <Image src={process.env.PUBLIC_URL + \"/icons/PERSON.svg\"} />\n        </Col>\n        <Col>\n          <h3>Name Surname</h3>\n          <h4>@Nickname</h4>\n        </Col>\n      </Row>\n      <ListGroup lists={tests} cols={2} rounded />\n    </Card>\n  );\n}\n\nexport default Profile;\n","import { List, Recent } from \"../base\";\nimport {\n  Button,\n  Container,\n  Row,\n  Col,\n  Pagination,\n  Card, Stack,\n} from \"react-bootstrap\";\n\nimport { useEffect, useState } from \"react\";\nimport \"./Questions.css\";\nimport Suggestion from \"../base/Suggestion\";\nimport {Link, useLocation} from \"react-router-dom\";\n\n\nfunction PaginationRow (props) {\n  let [active, setActive] = useState(1)\n  let items = [];\n  for( let num = 1; num <= 5; num++) {\n    items.push(\n        <Pagination.Item key={num} active={num === active} onClick={()=>{\n          setActive(active = num)\n        }}>\n          {num}\n        </Pagination.Item>\n    )\n  }\n\n  return (\n      <Pagination>\n        <Pagination.First />\n        {items}\n        <Pagination.Last />\n      </Pagination>\n  )\n}\n\n\n\nconst Questions = () => {\n  /** Mock courses **/\n  const fakeQuestions = [\n    {\n      id: 1,\n      question: \"What is a vector?\",\n      author: \"Donato\",\n      createdat: \"15:20 12/01/2021\",\n      tags: [\"vectors\"],\n      excerpt: \"Cras justo odio...\",\n    },\n    {\n      id: 2,\n      question: \"Who is Maxwell?\",\n      author: \"Jim\",\n      createdat: \"17:30 13/02/2021\",\n      tags: [\"physics\"],\n      excerpt: \"Cras justo odio...\",\n    },\n    {\n      id: 3,\n      question: \"How many meters per second?\",\n      author: \"Derek\",\n      createdat: \"19:40 14/03/2021\",\n      tags: [\"physics\", \"kinematic\"],\n      excerpt: \"Cras justo odio...\",\n    },\n  ];\n\n  const [questions, setQuestions] = useState(fakeQuestions /*[]*/);\n  const [suggestions, setSuggestions] = useState(fakeQuestions /*[]*/);\n  const suggestionType = [\"Latest\", \"Hottest\"]\n\n  // hook for responsive react\n  const useMediaQuery = (query) => {\n    const [matches, setMatches] = useState(false);\n\n    useEffect(() => {\n      const media = window.matchMedia(query);\n      if (media.matches !== matches) {\n        setMatches(media.matches);\n      }\n      const listener = () => {\n        setMatches(media.matches);\n      };\n      window.addEventListener(\"resize\", listener);\n      return () => window.removeEventListener(\"resize\", listener);\n    }, [matches, query]);\n\n    return matches;\n  };\n\n  // TODO: also take a look at Bootstrap class infixes to detect the current breakpoint\n  // to see which approach is better -- https://getbootstrap.com/docs/5.1/layout/breakpoints/\n  const isDesktop = useMediaQuery(\"(min-width: 960px)\");\n\n  const locationState = useLocation().state\n\n  return (\n      <>\n        <Container>\n          <Stack gap={4}>\n            <Row>\n              <Link to={{pathname:\"/startsimulation/\" + locationState.courseId}} state={{ courseId: locationState.courseId, title: locationState.title}}>\n                <Button className=\"flex-md\" variant=\"outline-success\">Start Simulation</Button>\n              </Link>\n            </Row>\n          {isDesktop ? (\n                <Row>\n                  <Col>\n                    <Card body>\n                      <Container className=\"container\">\n                        <Card body>\n                          <Row lg={12} className=\"header\">\n                            <Col>\n                              <List\n                                  scope=\"questions\"\n                                  title= {locationState.title}\n                                  rows={questions}\n                              />\n                            </Col>\n                            <Col className=\"pagination\" lg=\"12\" sm=\"12\" md=\"12\">\n                              <PaginationRow/>\n                            </Col>\n                          </Row>\n                        </Card>\n                      </Container>\n                    </Card>\n                  </Col>\n                  <Col className=\"d-sm-inline-block col-md-4\">\n                    <Stack gap={4}>\n                      {suggestionType.map(type => {\n                        return (\n                            <Row>\n                              <Suggestion\n                                  scope={\"suggestion\"}\n                                  title={ type + \" Questions\"}\n                                  rows={suggestions}\n                              />\n                            </Row>\n                        )\n                      })}\n                    </Stack>\n                  </Col>\n                </Row>\n          ) : (\n              <Stack gap={4}>\n                <Row>\n                  <Card body>\n                    <Container className=\"container\">\n                      <Card body>\n                        <Row lg={12} className=\"header\">\n                          <Col>\n                            <List\n                                scope=\"questions\"\n                                title=\"Physics I\"\n                                rows={questions}\n                            />\n                          </Col>\n                          <Col className=\"pagination\" lg=\"12\" sm=\"12\" md=\"12\">\n                            <PaginationRow/>\n                          </Col>\n                        </Row>\n                      </Card>\n                    </Container>\n                  </Card>\n                </Row>\n                <Row md={2} sm={2}>\n                  {suggestionType.map(type => {\n                    return (\n                        <Col className=\"col-md-6\">\n                          <Suggestion\n                              scope={\"suggestion\"}\n                              title={ type + \" Questions\"}\n                              rows={suggestions}\n                          />\n                        </Col>\n                    )\n                  })}\n                </Row>\n              </Stack>\n          )}\n          </Stack>\n        </Container>\n      </>\n  )\n};\n\nexport default Questions;\n","import { Row, Col, Card, Image, Form, Button } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport \"./UserSettings.css\";\nimport { List } from \"../base/\";\n\nfunction UserSettings() {\n  const fake = [\n    [<Form.Check />, \"Analisys I\"],\n    [<Form.Check />, \"Physics I\"],\n    [<Form.Check />, \"Geometry\"],\n  ];\n  const [courses, setCourses] = useState(fake);\n\n  return (\n    <Card body>\n      <Row lg={12} className=\"py-0 header\">\n        <Col xs={2}>\n          <Image src={process.env.PUBLIC_URL + \"/icons/PERSON.svg\"} />\n        </Col>\n        <Col>\n          <h3>Name Surname</h3>\n          <h4>@Nickname</h4>\n          <Form.Control placeholder=\"Change nickname\" />\n          <Form.Check label=\"Public profile\" />\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <List rows={courses} title={\"Enrolled in\"} scope={\"default\"} />\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Link to=\"/courses\">\n            <Button>Add new course</Button>\n          </Link>\n          <Button className=\"saveButton\">Save</Button>\n        </Col>\n      </Row>\n    </Card>\n  );\n}\n\nexport default UserSettings;\n","import {List} from \"../base\";\nimport {Card, Container, Pagination} from \"react-bootstrap\";\nimport {useLocation} from \"react-router-dom\";\nimport {useState} from \"react\";\n\nfunction PaginationRow() {\n    let [active, setActive] = useState(1)\n    let items = [];\n    for( let num = 1; num <= 5; num++) {\n        items.push(\n            <Pagination.Item key={num} active={num === active} onClick={()=>{\n                setActive(active = num)\n            }}>\n                {num}\n            </Pagination.Item>\n        )\n    }\n\n    return (\n        <Pagination>\n            <Pagination.First />\n            {items}\n            <Pagination.Last />\n        </Pagination>\n    )\n}\n\nexport default function ListFullPage () {\n    const location = useLocation();\n    return (\n        <>\n            <Container>\n                <Card body>\n                    <h2>{location.state.title}</h2>\n                    <List scope={location.state.scope} title={\"\"} rows={location.state.rows}/>\n                    {location.state.title === \"My courses\"? <></>:<PaginationRow/>}\n                </Card>\n            </Container>\n        </>\n    )\n}\n","import {Card, Container, Pagination} from \"react-bootstrap\";\nimport {List, SearchBar} from \"../base\";\nimport {useState} from \"react\";\nimport {useLocation} from \"react-router-dom\";\n\nfunction PaginationRow() {\n    let [active, setActive] = useState(1)\n    let items = [];\n    for( let num = 1; num <= 5; num++) {\n        items.push(\n            <Pagination.Item key={num} active={num === active} onClick={()=>{\n                setActive(active = num)\n            }}>\n                {num}\n            </Pagination.Item>\n        )\n    }\n\n    return (\n        <Pagination>\n            <Pagination.First />\n            {items}\n            <Pagination.Last />\n        </Pagination>\n    )\n}\n\nexport default function Bookmarks() {\n    const location = useLocation();\n    return(\n        <>\n            <Container>\n                <Card body>\n                    <h2>{location.state.title}</h2>\n                    <SearchBar/>\n                    <List scope={location.state.scope} title={\"\"} rows={location.state.rows}/>\n                    <PaginationRow/>\n                </Card>\n            </Container>\n        </>\n    )\n}","import {Card, Container, Form, Row, Col, Button, Stack} from \"react-bootstrap\";\nimport {Link, useLocation} from \"react-router-dom\";\nimport {useState} from \"react\";\nimport \"./StartSimulation.css\"\n\n\n\nexport default function StartSimulation () {\n\n    const simulationTypes = [\"Random\", \"Exam\"]\n\n    const [isMulti, setIsMulti] = useState(false);\n\n\n    const locationState = useLocation().state\n\n    return(\n        <>\n            <Container>\n                <Card className=\"simulation-card\">\n                    <Card.Body>\n                        <Stack gap={4}>\n                            <h3>Simulation Set Up</h3>\n                            <Col>\n                                <Stack gap={2}>\n                                    <Row>\n                                        <div key='checkbox-ratio' className=\"mb-3\">\n                                            <Form.Switch className=\"multiquiz-toggle\" type=\"switch\" label=\"Multiple Choice Questions Only (With Grade)\" onChange={()=>setIsMulti(!isMulti)}/>\n                                        </div>\n                                    </Row>\n                                    <Stack gap={4}>\n                                        {isMulti ?\n                                            <Row>\n                                                <Card>\n                                                    <Card.Body>\n                                                        <Card.Text>\n                                                            Number of Questions 10\n                                                        </Card.Text>\n                                                        <Card.Text>\n                                                            Penalty -0.5\n                                                        </Card.Text>\n                                                        <Card.Text>\n                                                            Maximum Score 30\n                                                        </Card.Text>\n                                                    </Card.Body>\n                                                </Card>\n                                            </Row>\n                                            :\n                                            <></>\n                                        }\n                                        <Row className=\"bottom-group\">\n                                            {simulationTypes.map((type) => {\n                                                return(\n                                                    <Col>\n                                                        <Link to={{pathname:\"/simulation/\" + locationState.courseId}} state={{type:type, title:locationState.title, courseId:locationState.course}}>\n                                                            <Button className=\"btn-outline-success\" variant=\"outline-success\">\n                                                                {type + \" Question\"}\n                                                            </Button>\n                                                        </Link>\n                                                    </Col>\n                                                )\n                                            })}\n                                        </Row>\n                                    </Stack>\n                                </Stack>\n                            </Col>\n                        </Stack>\n                    </Card.Body>\n                </Card>\n            </Container>\n        </>\n    )\n}","import {Link, useLocation} from \"react-router-dom\";\nimport {useCallback, useEffect, useState, Component} from \"react\";\nimport {Card, Row, Col, Pagination, Container, Button, Form} from \"react-bootstrap\";\nimport \"./Simulation.css\"\nimport {List, ListEntry, TextInput} from \"../base\";\n\nexport default function Simulation (props) {\n\n    const fakeQuestions = [\n        {\n            id: 1,\n            question: \"What is a vector?\",\n            author: \"Donato\",\n            createdat: \"15:20 12/01/2021\",\n            tags: [\"vectors\"],\n            excerpt: \"Cras justo odio...\",\n        },\n        {\n            id: 2,\n            question: \"Who is Maxwell?\",\n            author: \"Jim\",\n            createdat: \"17:30 13/02/2021\",\n            tags: [\"physics\"],\n            excerpt: \"Cras justo odio...\",\n        },\n        {\n            id: 3,\n            question: \"How many meters per second?\",\n            author: \"Derek\",\n            createdat: \"19:40 14/03/2021\",\n            tags: [\"physics\", \"kinematic\"],\n            excerpt: \"Cras justo odio...\",\n        },\n    ];\n\n\n\n    const [questions, setQuestions] = useState(fakeQuestions /*[]*/);\n\n    const simulationQuizType = [\"open\", \"close\"];\n    const [pageNum, setPageNum] = useState(1)\n\n    const radomizer = simulationQuizType[Math.floor(Math.random()*simulationQuizType.length)]\n    const [randomQuizType,setRandomQuizType] = useState(radomizer)\n\n    const locationState = useLocation().state\n\n\n\n    const PaginationRow = (props) => {\n\n        let items = [];\n        for( let num = 1; num <= 5; num++) {\n            items.push(\n                <Pagination.Item key={num} active={num === pageNum} onClick={()=>{\n                    setPageNum(num)\n                }}>\n                    {num}\n                </Pagination.Item>\n            )\n        }\n\n        return (\n            <Pagination>\n                <Pagination.First />\n                {items}\n                <Pagination.Last />\n            </Pagination>\n        )\n    }\n\n    useEffect(()=>{\n        setRandomQuizType(radomizer)\n    },[pageNum])\n\n    return (\n        <Container>\n            <h3>{locationState.type + \" Questions of \" + locationState.title}</h3>\n            <Row className=\"pagination-finish\" >\n                <Col>\n                    <PaginationRow/>\n                </Col>\n                <Col>\n                    <Link className=\"outline-secondary\" to={{pathname:\"/simulationresult/\" + locationState.courseId}} state={{courseId:locationState.courseId, title:locationState.title}}>\n                        <Button className=\"btn-outline-success\" variant=\"outline-success\">\n                            Finish\n                        </Button>\n                    </Link>\n                </Col>\n            </Row>\n            <Card>\n                <Card>\n                    <h1>{\"Question \" + pageNum}</h1>\n                    <Card.Text>\n                        \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\"\n                    </Card.Text>\n                </Card>\n                <Card>\n                    { randomQuizType === \"open\"?(\n                        <TextInput/>\n                    ) : (\n\n                            <Card>\n                            {[\"A\",\"B\",\"C\",\"D\"].map(e => {\n                                return(\n                                    <Form.Check type=\"checkbox\" label={e}/>\n                                )\n                            })}\n                            </Card>\n                        ) }\n                </Card>\n            </Card>\n        </Container>\n    )\n}","import {useLocation} from \"react-router-dom\";\n\nexport default function SimulationResult() {\n\n    const locationState = useLocation().state\n\n    return (\n        <>\n            <h1>\n                Simulation Result of {locationState.title}\n            </h1>\n        </>\n    )\n}","import \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { useState, useEffect } from \"react\";\nimport { Container, Row, Col, Alert, Button } from \"react-bootstrap\";\nimport { Routes, Route, Navigate as Redirect, Link } from \"react-router-dom\";\nimport { NavigationBar, Footer, DebugPaths, TextInput } from \"./base/\";\nimport {\n  Answers,\n  CoursesList,\n  Exam,\n  Home,\n  LoginForm,\n  MyQuestions,\n  Profile,\n  Questions,\n  UserSettings,\n  ListFullPage,\n  Bookmarks,\n  StartSimulation,\n  Simulation\n} from \"./pages/\";\nimport SimulationResult from \"./pages/SimulationResult\";\n// import parsedQuestions from \"./constants/parsed\";\n// import API from './api/API'\n\nfunction App() {\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [showHints, setShowHints] = useState(false);\n  const [showDiscussion, setShowDiscussion] = useState(false);\n  const [admin, setAdmin] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const [dark, setDark] = useState(false);\n\n  useEffect(() => {\n    if (!loggedIn) setMessage(\"\");\n  }, [loggedIn]);\n\n  // useEffect(() => {\n  // \tconst checkAuth = async () => {\n  // \t\ttry {\n  // \t\t\tconst user = await API.getUserInfo()\n  // \t\t\tsetLoggedIn(true)\n  // \t\t\tuser.admin ? setAdmin(true) : setAdmin(false)\n  // \t\t} catch (err) {\n  // \t\t\tconsole.error(err.error)\n  // \t\t}\n  // \t}\n  // \tcheckAuth()\n  // }, [])\n\n  // const doLogin = async credentials => {\n  // \ttry {\n  // \t\tconst username = await API.login(credentials)\n  // \t\tsetLoggedIn(true)\n  // \t\tsetMessage({ msg: `Welcome, ${username}!`, type: 'success' })\n  // \t\tconst user = await API.getUserInfo()\n  // \t\tuser.admin ? setAdmin(true) : setAdmin(false)\n  // \t} catch (err) {\n  // \t\tsetMessage({ msg: err, type: 'danger' })\n  // \t}\n  // }\n\n  const doLogout = async () => {\n    // await API.logout()\n    setLoggedIn(false);\n    setAdmin(false);\n  };\n\n  return (\n    <Container fluid>\n      <Row>\n        <Col className=\"px-0\">\n          <NavigationBar\n            dark={dark}\n            setdark={setDark}\n            logged={loggedIn}\n            setlogged={setLoggedIn}\n            showhints={showHints}\n            setshowhints={setShowHints}\n            showdiscussion={showDiscussion}\n            setshowdiscussion={setShowDiscussion}\n            logout={doLogout}\n          />\n        </Col>\n      </Row>\n      <Row className=\"my-4\">\n        <Col xs={6} className=\"mx-auto\">\n          {message && (\n            <Alert\n              variant={message.type}\n              onClose={() => setMessage(\"\")}\n              dismissible={!message.noclose}\n            >\n              {message.msg}\n            </Alert>\n          )}\n        </Col>\n      </Row>\n      <DebugPaths />\n      <Row className=\"my-4\">\n        <Col xs={10} md={8} className=\"mx-auto\">\n          {/*\n\t\t\t\t\t<Exam question={parsedQuestions.quiz.question} />\n\t\t\t\t\t*/}\n          {loggedIn ? (\n            <Routes>\n              <Route path=\"/*\" element={<Redirect to=\"/\" />} />\n              <Route path=\"/\" element={<Home />} />\n              <Route path=\"/profile\" element={<Profile />} />\n              <Route path=\"/settings\" element={<UserSettings />} />\n              <Route path=\"/courses\" element={<CoursesList />} />\n              <Route path=\"/course/:coursecode\" element={<Questions />} />\n              <Route\n                path=\"/question/:questionid\"\n                element={\n                  <Answers\n                    showhints={showHints}\n                    setshowhints={setShowHints}\n                    showdiscussion={showDiscussion}\n                    setshowdiscussion={setShowDiscussion}\n                  />\n                }\n              />\n              <Route\n                path=\"/discussion/:questionid\"\n                element={<p>Work in progress</p>}\n              />\n              <Route path=\"/simulation/:simulationType\" element={<Simulation/>} />\n              <Route path=\"/addquestion\" element={<TextInput />} />\n              <Route path=\"/todel\" element={<Exam />} />\n              <Route path=\"/listfullpage/:listName\" element={<ListFullPage />} />\n              <Route path=\"/bookmarks\" element={<Bookmarks/>} />\n              <Route path=\"/startsimulation/:courseName\" element={<StartSimulation/>}/>\n              <Route path=\"/simulationresult/:courseName\" element={<SimulationResult/>}/>\n              {/* <MyQuestions /> */}\n            </Routes>\n          ) : (\n            <Routes>\n              <Route path=\"/*\" element={<Redirect to=\"/login\" />} />\n              <Route\n                path=\"/login\"\n                element={<LoginForm login={() => setLoggedIn(true)} />}\n              />\n            </Routes>\n          )}\n        </Col>\n      </Row>\n      <Row>\n        <Footer />\n      </Row>\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nlet basename = \"\";\nconst { PUBLIC_URL } = process.env;\n\nif (PUBLIC_URL) {\n  const splitArray = PUBLIC_URL.split(\"://\")[1].split(\"/\");\n  basename =\n    (splitArray.length > 1 && `/${splitArray[splitArray.length - 1]}`) || \"\";\n}\n\nReactDOM.render(\n  // <React.StrictMode>\n  <Router basename={basename}>\n    <App />\n  </Router>,\n  // </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}