{"version":3,"sources":["base/searchBar/searchBar.module.scss","icons.js","base/NavigationBar.js","img/logoSkeeellLight.svg","img/logoSkeeelledLight.svg","img/logoSkeeelledDark.svg","img/logoWeeeOpen.svg","img/logoSkeeellDark.svg","img/logoSkeeelledLightFooter.svg","img/logoSkeeelledDarkFooter.svg","base/Footer.js","base/List.js","base/MarkdownPreview.js","base/QuestionPreview.js","pages/AddQuestion.js","pages/Answers.js","base/Suggestion.js","pages/CoursesList.js","pages/Exam.js","pages/Home.js","pages/LoginForm.js","pages/Profile.js","pages/Questions.js","pages/Replies.js","pages/UserSettings.js","pages/ListFullPage.js","pages/Bookmarks.js","pages/StartSimulation.js","pages/Simulation.js","pages/SimulationResult.js","pages/SimulationAccess.js","base/ListEntry.js","base/ListGroup.js","base/textInput/commands/insertTex.js","base/textInput/commands/saveImage.js","base/TextInput.js","base/Discussion.js","base/SearchBar.js","base/DebugPaths.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","iconUser","xmlns","width","height","fill","className","viewBox","d","fillRule","iconLogout","stroke","strokeWidth","strokeLinecap","strokeLinejoin","iconAdmin","fakeQuestions","id","question","author","createdat","tags","excerpt","NavigationBar","props","useState","questions","Navbar","bg","dark","variant","to","Brand","Image","src","process","admin","Nav","Link","as","Collapse","NavDropdown","title","align","lg","Item","href","pathname","state","scope","rows","Divider","Form","Switch","label","defaultChecked","onChange","setdark","showhints","setshowhints","showdiscussion","setshowdiscussion","logged","onClick","logout","Footer","logoSkeeelledLightFooter","alt","logoWeeeOpen","logoSkeeellLight","HeaderColspan","ListDefault","rounded","colSpan","map","r","i","row","dotted","Table","striped","borderless","ListQuestions","ListAnswers","ListReplies","ListSuggestion","Container","ListSimulationResult","areAllAccordionItemsOpen","setAreAllAccordionItemsOpen","activeKeys","setActiveKeys","useEffect","index","length","Row","Col","Button","value","Accordion","defaultActiveKey","activeKey","onSelect","eventKeys","alwaysOpen","accordionKey","ListSelection","FloatingLabel","Select","List","MarkdownPreview","React","memo","markdown","remarkPlugins","remarkGfm","remarkMath","rehypePlugins","rehypeKatex","rehypeHighlight","QuestionPreview","showAdvice","setShowAdvice","Card","Header","course_code","course_name","date","toLocaleDateString","year","month","day","Body","Title","text","advice","AddQuestion","courses","Label","size","Control","type","Check","fakeQuestion","Date","Answers","childProps","textArea","placeholder","Suggestion","fluid","PaginationRow","active","setActive","items","num","push","Pagination","First","Last","CoursesList","code","course","cfu","professor","suggestions","body","replace","toLowerCase","Stack","gap","Exam","Home","a","b","c","tests","lists","cols","tiled","LoginForm","username","setUsername","password","setPassword","errorMessage","setErrorMessage","Modal","Dialog","Alert","Group","controlId","ev","target","event","preventDefault","credentials","valid","checkPassword","login","Profile","xs","Questions","suggestionType","isDesktop","query","matches","setMatches","media","window","matchMedia","listener","addEventListener","removeEventListener","useMediaQuery","locationState","useLocation","courseId","sm","md","Answer","ans","answer","Replies","reply","replies","UserSettings","fake","ListFullPage","location","Bookmarks","StartSimulation","isMulti","setIsMulti","numQuestions","setNumQuestions","penaltyScore","setPenaltyScore","maxScore","setMaxScore","duration","setDuration","userInput","setUserInput","maxNumOfQuestion","InputGroup","Text","FormControl","e","Number","isNaN","penalty","max","Duration","h","Math","floor","parseInt","m","s","timeIn","setTimeIn","myInterval","setInterval","time","updateTime","clearInterval","toString","padStart","FinishModal","show","setShow","timeRecord","setTimeRecord","pointPerCorrectAns","timeElapsed","onHide","closeButton","Simulation","simulationRandomQuizType","pageNum","setPageNum","randomizer","random","quizType","setQuizType","numPage","SimulationResult","numCorrect","numPenalty","numNotGiven","numQuiz","pointPerWrong","pointPerCorrect","mockCorrectAns","quizNum","score","isCorrect","mockUserAns","randomAns","examDuration","split","n","useAns","left","tot","timeUsedStr","abs","bordered","hover","SimulationAccess","enrolled","coursesEnrolled","simulationResult","courseSelected","setCourseSelected","courseSelectedTitle","setCourseSelectedTitle","DropdownButton","Dropdown","ListGroup","varient","ListEntryDefault","cell","ListEntryCourses","ListEntryQuestions","t","ListEntryAnswers","rowspan","like","dislike","ListEntryReplies","ListEntryTest","ListEntrySuggestion","ListEntrySimulationResult","eventKey","ListEntrySelection","key","ListEntry","filter","useless","slice","l","j","Array","keys","insertTex","name","icon","buttonProps","execute","state2","textApi","initialState","newSelectionRange","MarkdownUtil","selectWord","selection","state1","setSelectionRange","s1","selectedText","substring","replaceSelection","start","end","saveImage","context","l18n","Error","pasteOptions","multiple","accept","isPasteEvent","dataTransferToArray","clipboardData","isDragEvent","dataTransfer","fileListToArray","files","filteredItems","filterItems","getState","breaksBeforeCount","getBreaksNeededForEmptyLineBefore","breaksBefore","join","placeHolder","uploadingImage","blob","readFileAsync","blobContents","savingImage","next","imageUrl","newState","realImageMarkdown","selectionDelta","file","Promise","resolve","reject","reader","FileReader","onload","result","onerror","readAsDataURL","acceptedTypes","fileExtensions","Set","test","mimeTypes","anyTypes","f","has","item","kind","getAsFile","list","undefined","TextInput","selectedTab","onTabChange","val","setVal","selTab","setSelTab","base64Imgs","setBase64Imgs","uploadImage","data","prev","generatePreviewMarkdown","Object","re","RegExp","fn","setTimeout","replaceAll","match","loadingPreview","commands","toolbarCommands","getDefaultToolbarCommands","generateMarkdownPreview","previewMarkdown","paste","command","fakeAnswers","Discussion","showDiscussion","setShowDiscussion","answers","currentPage","setCurrentPage","in","_","idx","SearchBar","apiCall","fakeSuggestions","setSuggestions","setValue","ref","useRef","isLoading","searchText","emptyLabel","promptText","options","filterBy","renderMenuItemChildren","option","onInputChange","inputText","onSearch","current","clear","styles","clearButton","DebugPaths","style","padding","dismissible","App","loggedIn","setLoggedIn","showHints","setShowHints","setAdmin","message","setMessage","setDark","doLogout","setlogged","onClose","noclose","msg","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","basename","PUBLIC_URL","splitArray","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b40c64be.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"clearButton\":\"searchBar_clearButton__2N0gd\",\"textInput\":\"searchBar_textInput__2HyW8\"};","const iconUser = (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"24\"\n    height=\"24\"\n    fill=\"currentColor\"\n    className=\"bi bi-person-circle\"\n    viewBox=\"0 0 16 16\"\n  >\n    <path d=\"M11 6a3 3 0 1 1-6 0 3 3 0 0 1 6 0z\" />\n    <path\n      fillRule=\"evenodd\"\n      d=\"M0 8a8 8 0 1 1 16 0A8 8 0 0 1 0 8zm8-7a7 7 0 0 0-5.468 11.37C3.242 11.226 4.805 10 8 10s4.757 1.225 5.468 2.37A7 7 0 0 0 8 1z\"\n    />\n  </svg>\n);\n\nconst iconLogo = (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"24\"\n    height=\"20\"\n    fill=\"currentColor\"\n    className=\"bi bi-book\"\n    viewBox=\"0 1 16 16\"\n  >\n    <path d=\"M1 2.828c.885-.37 2.154-.769 3.388-.893 1.33-.134 2.458.063 3.112.752v9.746c-.935-.53-2.12-.603-3.213-.493-1.18.12-2.37.461-3.287.811V2.828zm7.5-.141c.654-.689 1.782-.886 3.112-.752 1.234.124 2.503.523 3.388.893v9.923c-.918-.35-2.107-.692-3.287-.81-1.094-.111-2.278-.039-3.213.492V2.687zM8 1.783C7.015.936 5.587.81 4.287.94c-1.514.153-3.042.672-3.994 1.105A.5.5 0 0 0 0 2.5v11a.5.5 0 0 0 .707.455c.882-.4 2.303-.881 3.68-1.02 1.409-.142 2.59.087 3.223.877a.5.5 0 0 0 .78 0c.633-.79 1.814-1.019 3.222-.877 1.378.139 2.8.62 3.681 1.02A.5.5 0 0 0 16 13.5v-11a.5.5 0 0 0-.293-.455c-.952-.433-2.48-.952-3.994-1.105C10.413.809 8.985.936 8 1.783z\" />\n  </svg>\n);\n\nconst iconLogout = (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"24\"\n    height=\"24\"\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    stroke=\"currentColor\"\n    strokeWidth=\"2\"\n    strokeLinecap=\"round\"\n    strokeLinejoin=\"round\"\n  >\n    <path d=\"M10 3H6a2 2 0 0 0-2 2v14c0 1.1.9 2 2 2h4M16 17l5-5-5-5M19.8 12H9\" />\n  </svg>\n);\n\nconst iconAdmin = (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"16\"\n    height=\"24\"\n    fill=\"currentColor\"\n    className=\"bi bi-gear-fill\"\n    viewBox=\"0 2 16 16\"\n  >\n    <path d=\"M9.405 1.05c-.413-1.4-2.397-1.4-2.81 0l-.1.34a1.464 1.464 0 0 1-2.105.872l-.31-.17c-1.283-.698-2.686.705-1.987 1.987l.169.311c.446.82.023 1.841-.872 2.105l-.34.1c-1.4.413-1.4 2.397 0 2.81l.34.1a1.464 1.464 0 0 1 .872 2.105l-.17.31c-.698 1.283.705 2.686 1.987 1.987l.311-.169a1.464 1.464 0 0 1 2.105.872l.1.34c.413 1.4 2.397 1.4 2.81 0l.1-.34a1.464 1.464 0 0 1 2.105-.872l.31.17c1.283.698 2.686-.705 1.987-1.987l-.169-.311a1.464 1.464 0 0 1 .872-2.105l.34-.1c1.4-.413 1.4-2.397 0-2.81l-.34-.1a1.464 1.464 0 0 1-.872-2.105l.17-.31c.698-1.283-.705-2.686-1.987-1.987l-.311.169a1.464 1.464 0 0 1-2.105-.872l-.1-.34zM8 10.93a2.929 2.929 0 1 1 0-5.86 2.929 2.929 0 0 1 0 5.858z\" />\n  </svg>\n);\n\nconst iconMeeting = (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"16\"\n    height=\"16\"\n    viewBox=\"0 4 28 24\"\n    fill=\"none\"\n    stroke=\"#ffffff\"\n    strokeWidth=\"2\"\n    strokeLinecap=\"round\"\n    strokeLinejoin=\"round\"\n  >\n    <path d=\"M20 14.66V20a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h5.34\"></path>\n    <polygon points=\"18 2 22 6 12 16 8 16 8 12 18 2\"></polygon>\n  </svg>\n);\n\nconst iconAdd = (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"20\"\n    height=\"20\"\n    fill=\"currentColor\"\n    className=\"bi bi-plus-circle-fill\"\n    viewBox=\"0 0 16 18\"\n  >\n    <path d=\"M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zM8.5 4.5a.5.5 0 0 0-1 0v3h-3a.5.5 0 0 0 0 1h3v3a.5.5 0 0 0 1 0v-3h3a.5.5 0 0 0 0-1h-3v-3z\" />\n  </svg>\n);\n\nconst iconDelete = (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"24\"\n    height=\"24\"\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    stroke=\"#ffffff\"\n    strokeWidth=\"2\"\n    strokeLinecap=\"round\"\n    strokeLinejoin=\"round\"\n  >\n    <polyline points=\"3 6 5 6 21 6\"></polyline>\n    <path d=\"M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2\"></path>\n    <line x1=\"10\" y1=\"11\" x2=\"10\" y2=\"17\"></line>\n    <line x1=\"14\" y1=\"11\" x2=\"14\" y2=\"17\"></line>\n  </svg>\n);\n\nexport {\n  iconUser,\n  iconLogo,\n  iconLogout,\n  iconAdmin,\n  iconMeeting,\n  iconAdd,\n  iconDelete,\n};\n","import {\n  Navbar,\n  Nav,\n  NavDropdown,\n  Image,\n  Form,\n  OverlayTrigger,\n  Popover,\n} from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { iconUser, iconLogout, iconAdmin } from \"../icons.js\";\nimport \"./NavigationBar.css\";\nimport { useState } from \"react\";\n\nconst fakeQuestions = [\n  {\n    id: 1,\n    question: \"What is a vector?\",\n    author: \"Donato\",\n    createdat: \"15:20 12/01/2021\",\n    tags: [\"vectors\"],\n    excerpt: \"Cras justo odio...\",\n  },\n  {\n    id: 2,\n    question: \"Who is Maxwell?\",\n    author: \"Jim\",\n    createdat: \"17:30 13/02/2021\",\n    tags: [\"physics\"],\n    excerpt: \"Cras justo odio...\",\n  },\n  {\n    id: 3,\n    question: \"How many meters per second?\",\n    author: \"Derek\",\n    createdat: \"19:40 14/03/2021\",\n    tags: [\"physics\", \"kinematic\"],\n    excerpt: \"Cras justo odio...\",\n  },\n];\n\nfunction NavigationBar(props) {\n  const [questions, setQuestions] = useState(fakeQuestions /*[]*/);\n\n  return (\n    <Navbar\n      id={\"navbar\"}\n      bg={props.dark ? \"dark\" : \"light\"}\n      variant={props.dark ? \"dark\" : \"light\"}\n    >\n      <Link to={\"/\"}>\n        <Navbar.Brand>\n          <Image\n            id={\"navbar-logo-skeeelled\"}\n            src={\n              props.dark\n                ? process.env.PUBLIC_URL + \"/img/logoSkeeelledDark.svg\"\n                : process.env.PUBLIC_URL + \"/img/logoSkeeelledLight.svg\"\n            }\n            className=\"logo\"\n          />\n        </Navbar.Brand>\n      </Link>\n\n      {props.admin ? (\n        <Link to=\"/admin/list\">\n          <Navbar.Brand>{iconAdmin} Admin panel </Navbar.Brand>\n        </Link>\n      ) : null}\n\n      <Nav.Link\n          as={Link}\n          className={props.dark ? \"home-link-dark\" : \"home-link\"}\n          to=\"/\"\n      >\n        Home\n      </Nav.Link>\n\n      <Nav.Link\n        as={Link}\n        className={props.dark ? \"course-link-dark\" : \"course-link\"}\n        to=\"/courses\"\n      >\n        Courses\n      </Nav.Link>\n\n      <Nav.Link\n          as={Link}\n          className={props.dark ? \"simulation-link-dark\" : \"simulation-link\"}\n          to=\"/simulationview\"\n      >\n        Simulation\n      </Nav.Link>\n\n      <Nav.Link\n        as={Link}\n        className={props.dark ? \"add-question-link-dark\" : \"add-question-link\"}\n        to=\"/addquestion\"\n      >\n        Add question\n      </Nav.Link>\n\n      <Nav id={\"user-dropdown\"}>\n        <Navbar.Collapse className=\"mr-4 mt-0\">\n          <NavDropdown\n            id=\"dropdown-menu-align-responsive-2\"\n            title={iconUser}\n            align={{ lg: \"end\" }}\n          >\n            <Link to=\"/profile\" className=\"dropdown-link\">\n              <NavDropdown.Item href=\"#action/3.1\">Profile</NavDropdown.Item>\n            </Link>\n            <Link\n                className=\"dropdown-link\"\n              to={{ pathname: \"/bookmarks\" }}\n              state={{\n                scope: \"questions\",\n                title: \"Bookmarked Questions\",\n                rows: questions,\n              }}\n            >\n              <NavDropdown.Item href=\"#action/3.2\">Bookmarks</NavDropdown.Item>\n            </Link>\n            <Link to=\"/settings\" className=\"dropdown-link\">\n              <NavDropdown.Item href=\"#action/3.3\">Settings</NavDropdown.Item>\n            </Link>\n            <NavDropdown.Divider />\n            <div className=\"dropdown-item\">\n              <Form.Switch\n                label=\"Dark\"\n                id=\"custom-switch-dark\"\n                defaultChecked={props.dark}\n                onChange={() => props.setdark(!props.dark)}\n              />\n            </div>\n            <div className=\"dropdown-item\">\n              <Form.Switch\n                label=\"Show hints\"\n                id=\"custom-switch-hint\"\n                defaultChecked={props.showhints}\n                onChange={() => props.setshowhints(!props.showhints)}\n              />\n            </div>\n            <div className=\"dropdown-item\">\n              <Form.Switch\n                label=\"Show discussion\"\n                id=\"custom-switch-disc\"\n                defaultChecked={props.showdiscussion}\n                onChange={() => props.setshowdiscussion(!props.showdiscussion)}\n              />\n            </div>\n            {props.logged && (\n              <>\n                <NavDropdown.Divider />\n                <NavDropdown.Item onClick={props.logout}>\n                  Logout {iconLogout}\n                </NavDropdown.Item>\n              </>\n            )}\n          </NavDropdown>\n        </Navbar.Collapse>\n      </Nav>\n\n      {/* <Form.Switch label=\"Check this switch\" type=\"switch\" id=\"custom-switch\"/> */}\n\n      {/* <OverlayTrigger\n\t\t\t\ttrigger=\"click\"\n\t\t\t\tkey=\"bottom\"\n\t\t\t\tplacement=\"bottom\"\n\t\t\t\toverlay={\n\t\t\t\t\t<Popover id=\"popover-positioned-bottom\">\n\t\t\t\t\t<Popover.Header as=\"h3\">Popover bottom</Popover.Header>\n\t\t\t\t\t<Popover.Body>\n\t\t\t\t\t\t<strong>Holy guacamole!</strong> Check this info.\n\t\t\t\t\t</Popover.Body>\n\t\t\t\t\t</Popover>\n\t\t\t\t}\n\t\t\t\t>\n\t\t\t\t<Button variant=\"secondary\">Popover on bottom</Button>\n\t\t\t\t</OverlayTrigger>\n\t\t\t*/}\n    </Navbar>\n  );\n}\n\nexport default NavigationBar;\n","export default __webpack_public_path__ + \"static/media/logoSkeeellLight.196ac81d.svg\";","export default __webpack_public_path__ + \"static/media/logoSkeeelledLight.89a46839.svg\";","export default __webpack_public_path__ + \"static/media/logoSkeeelledDark.8ee41200.svg\";","export default __webpack_public_path__ + \"static/media/logoWeeeOpen.a7c8f3ee.svg\";","export default __webpack_public_path__ + \"static/media/logoSkeeellDark.aa3ae18b.svg\";","export default __webpack_public_path__ + \"static/media/logoSkeeelledLightFooter.79648b4a.svg\";","export default __webpack_public_path__ + \"static/media/logoSkeeelledDarkFooter.e5149d82.svg\";","import { Image } from \"react-bootstrap\";\nimport {\n  logoSkeeelledLight,\n  logoSkeeellLight,\n  logoSkeeelledDark,\n  logoSkeeellDark,\n  logoWeeeOpen,\n} from \"../img/\";\nimport {\n  logoSkeeelledLightFooter,\n  logoSkeeellLightFooter,\n  logoSkeeelledDarkFooter,\n  logoSkeeellDarkFooter,\n} from \"../img/\";\nimport \"./Footer.css\";\n\nfunction Footer() {\n  return (\n    <div id={\"footer\"} className=\"mx-auto\">\n      <h5 id={\"skeeelled\"} className=\"mx-auto\">\n        <a\n          id={\"skeeelled-logo-link\"}\n          href={\"https://github.com/weee-open/skeeelled\"}\n        >\n          <Image\n            id={\"skeeelled-logo\"}\n            src={logoSkeeelledLightFooter}\n            alt={\"skeeelled\"}\n          />\n        </a>\n        is a tool realized by\n        <a href={\"https://weeeopen.polito.it\"}>\n          <Image id={\"weee-open-logo\"} src={logoWeeeOpen} alt={\"WEEE Open\"} />\n        </a>\n      </h5>\n      <h5 id={\"skeeell\"} className=\"mx-auto\">\n        See more about\n        <a href={\"https://weeeopen.polito.it/skeeell\"}>\n          <Image id={\"skeeell-logo\"} src={logoSkeeellLight} alt={\"skeeell\"} />\n        </a>\n      </h5>\n    </div>\n  );\n}\n\nexport default Footer;\n","import {\n  Accordion,\n  Col,\n  Container,\n  Row,\n  Table,\n  Form,\n  FloatingLabel,\n  Button,\n  Image,\n} from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { ListEntry, SearchBar } from \"./\";\nimport \"./List.css\";\nimport { useEffect, useState } from \"react\";\n\nfunction HeaderColspan(scope) {\n  switch (scope) {\n    case \"courses\":\n      return \"4\";\n    case \"questions\":\n      return \"4\";\n    default:\n      return \"10\";\n  }\n}\n\nfunction ListDefault({ props }) {\n  return (\n    <>\n      {props.rounded ? (\n        <table className=\"list roundedList\">\n          <thead>\n            <tr>\n              <th className=\"listTitle\" colSpan={HeaderColspan(props.scope)}>\n                {props.title}\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            {props.rows.map((r, i) => (\n              <ListEntry\n                key={i}\n                row={r}\n                scope={props.scope}\n                dotted={props.dotted}\n              />\n            ))}\n          </tbody>\n        </table>\n      ) : (\n        <Table striped borderless className=\"list\">\n          <thead className=\"listTitle\">\n            <tr>\n              <th colSpan={HeaderColspan(props.scope)}>{props.title}</th>\n            </tr>\n          </thead>\n          <tbody>\n            {props.rows.map((r, i) => (\n              <ListEntry key={i} scope={props.scope} row={r} />\n            ))}\n          </tbody>\n        </Table>\n      )}\n    </>\n  );\n}\n\nfunction ListQuestions({ props }) {\n  return (\n    <>\n      <h3 className=\"listQuestionsTitle\">{props.title}</h3>\n      {props.rows.map((r, i) => (\n        <ListEntry key={i} scope={props.scope} row={r} />\n      ))}\n    </>\n  );\n}\n\nfunction ListAnswers({ props }) {\n  return (\n    <Table borderless className=\"list listAnswers\">\n      <tbody>\n        {props.rows.map((r, i) => (\n          <ListEntry key={i} scope={props.scope} row={r} />\n        ))}\n      </tbody>\n    </Table>\n  );\n}\n\nfunction ListReplies({ props }) {\n  return (\n    <>\n      <h4>{props.title}</h4>\n      <hr />\n      {props.rows.map((r) => (\n        <ListEntry scope={props.scope} row={r} />\n      ))}\n    </>\n  );\n}\n\nfunction ListSuggestion({ props }) {\n  return (\n    <>\n      <Container>\n        <h3 className=\"listSuggestionTitle\">{props.title}</h3>\n        <div className=\"listSuggestion-questions\">\n          {props.rows.map((r, i) => (\n            <ListEntry key={i} scope={props.scope} row={r} />\n          ))}\n        </div>\n      </Container>\n    </>\n  );\n}\n\nfunction ListSimulationResult({ props }) {\n  const [areAllAccordionItemsOpen, setAreAllAccordionItemsOpen] =\n    useState(false);\n  const [activeKeys, setActiveKeys] = useState([]);\n\n  // when the boolean changes, either add all available activeKeys or remove them all\n  useEffect(() => {\n    if (areAllAccordionItemsOpen) {\n      setActiveKeys(props.rows.map((row, index) => index));\n    } else {\n      setActiveKeys([]);\n    }\n  }, [areAllAccordionItemsOpen, props.rows]);\n\n  // handle cases when user manually opens / closes all accordion items\n  useEffect(() => {\n    if (activeKeys.length === 0) {\n      setAreAllAccordionItemsOpen(false);\n    }\n    if (activeKeys.length === props.rows.length) {\n      setAreAllAccordionItemsOpen(true);\n    }\n  }, [activeKeys.length, props.rows.length]);\n\n  const updateActiveKeys = (eventKeys) => {\n    setActiveKeys(eventKeys);\n  };\n\n  return (\n    <>\n      <Container className=\"list-simulation-result\">\n        <Row>\n          <Col>\n            <h4 className=\"listSimulationResultTitle\">Your Answers</h4>\n          </Col>\n          <Col className=\"col-md-2\">\n            <Button\n                className=\"btn-outline-success-simulation-result\"\n                variant=\"outline-success\"\n                value=\"Show/Close\"\n                onClick={() => {\n                  setAreAllAccordionItemsOpen(!areAllAccordionItemsOpen);\n                }}\n            >\n              {areAllAccordionItemsOpen ? \"Close All\" : \"Show All\"}\n            </Button>\n          </Col>\n        </Row>\n        <Row>\n          <Accordion\n            className=\"listSimulationResults\"\n            defaultActiveKey={[]}\n            activeKey={activeKeys}\n            onSelect={updateActiveKeys}\n            alwaysOpen\n          >\n            {props.rows.map((row, index) => (\n              <ListEntry\n                key={index}\n                scope={props.scope}\n                row={row}\n                accordionKey={index}\n              />\n            ))}\n          </Accordion>\n        </Row>\n      </Container>\n    </>\n  );\n}\n\nfunction ListSelection({ props }) {\n  return (\n    <FloatingLabel label={props.title}>\n      <Form.Select aria-label=\"Selection\" className=\"my-4\">\n        {props.rows.map((r, i) => (\n          <ListEntry scope={props.scope} row={r} key={i} />\n        ))}\n      </Form.Select>\n    </FloatingLabel>\n  );\n}\n\nfunction List(props) {\n  if (props.scope === \"questions\") return <ListQuestions props={props} />;\n  if (props.scope === \"answers\") return <ListAnswers props={props} />;\n  if (props.scope === \"replies\") return <ListReplies props={props} />;\n  if (props.scope === \"suggestion\") return <ListSuggestion props={props} />;\n  if (props.scope === \"simulationResult\")\n    return <ListSimulationResult props={props} />;\n  if (props.scope === \"selection\") return <ListSelection props={props} />;\n  return <ListDefault props={props} />;\n}\n\nexport default List;\n","import React from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport remarkGfm from \"remark-gfm\";\nimport remarkMath from \"remark-math\";\nimport rehypeKatex from \"rehype-katex\";\nimport rehypeHighlight from \"rehype-highlight\";\n\nimport \"./MarkdownPreview.css\";\n\nconst MarkdownPreview = React.memo(({ markdown }) => {\n  return (\n    <ReactMarkdown\n      remarkPlugins={[remarkGfm, remarkMath]}\n      rehypePlugins={[rehypeKatex, rehypeHighlight]}\n    >\n      {markdown}\n    </ReactMarkdown>\n  );\n});\n\nexport default MarkdownPreview;\n","import React, { useState } from \"react\";\nimport MarkdownPreview from \"./MarkdownPreview\";\nimport remarkGfm from \"remark-gfm\";\nimport remarkMath from \"remark-math\";\nimport rehypeKatex from \"rehype-katex\";\nimport rehypeHighlight from \"rehype-highlight\";\n\nimport { Card, Button } from \"react-bootstrap\";\n\nimport \"katex/dist/katex.min.css\";\nimport \"highlight.js/styles/github.css\";\n\nfunction QuestionPreview({ question }) {\n  const [showAdvice, setShowAdvice] = useState(false);\n\n  return (\n    <Card>\n      <Card.Header>\n        <div className=\"d-flex justify-content-between\">\n          <div className=\"p2\">{`${question.course_code} ${question.course_name}`}</div>\n          <div className=\"p2\">\n            <small>\n              Posted by {question.author} on&nbsp;\n              {question.date.toLocaleDateString(\"it-IT\", {\n                year: \"numeric\",\n                month: \"numeric\",\n                day: \"numeric\",\n              })}\n            </small>\n          </div>\n        </div>\n      </Card.Header>\n      <Card.Body>\n        <Card.Title>{question.title}</Card.Title>\n        <MarkdownPreview markdown={question.text} />\n        {question.advice && (\n          <Button\n            className=\"btn-sm mt-5\"\n            onClick={() => {\n              setShowAdvice(!showAdvice);\n            }}\n          >\n            {showAdvice ? \"Hide advice\" : \"Show advice\"}\n          </Button>\n        )}\n        {showAdvice && <h6 className=\"mt-3\">{question.advice}</h6>}\n      </Card.Body>\n    </Card>\n  );\n}\n\nexport default QuestionPreview;\n","import { useState } from \"react\";\nimport { Button, Form } from \"react-bootstrap\";\nimport { List, TextInput } from \"../base\";\nimport \"./AddQuestion.css\";\n\nfunction AddQuestion(props) {\n  const fakeCourses = [\"Analysis 1\", \"Physics 1\", \"Geometry\"];\n\n  const [courses, setCourses] = useState(fakeCourses /*[]*/);\n  return (\n    <>\n      <Form.Label size=\"lg\">Choose moodle XML file</Form.Label>\n      <Form.Control type=\"file\" size=\"lg\" />\n      <List scope=\"selection\" title=\"Select course\" rows={courses} />\n      <Form.Check type=\"checkbox\" label=\"This is an exam simulation\" />\n      {/* <TextInput/> */}\n      <Button type=\"submit\" className=\"submit-button my-4\" onClick={() => {}}>\n        Upload\n      </Button>\n    </>\n  );\n}\n\nexport default AddQuestion;\n","import { useState } from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { QuestionPreview, Discussion, TextInput } from \"../base\";\nimport \"./Answers.css\";\n\nconst fakeQuestion = {\n  course_code: \"01UROLM\",\n  course_name: \"Mathematical methods for Computer Science\",\n  title: \"Theory of distributions\",\n  author: \"Sahircan Sürmeli\",\n  tags: [\"distributions\", \"functionals\", \"test functions\"],\n  text: \"Find all distributions $T \\\\in D^\\\\prime$ such that $T^\\\\prime = \\\\delta_0 + \\\\delta_2 - 2\\\\delta^\\\\prime_1$.\",\n  date: new Date(\"April 23, 2022\"),\n  advice: \"You have to integrate something.\",\n};\n\nfunction Answers(props) {\n  const [question, setQuestion] = useState(fakeQuestion);\n\n  return (\n    <Container className=\"container\">\n      <Row lg={12} className=\"header\">\n        <Col>\n          <QuestionPreview question={question} />\n        </Col>\n      </Row>\n\n      <Row className=\"header\">\n        <Col>\n          <TextInput\n            childProps={{\n              textArea: {\n                placeholder: \"Leave a comment\",\n              },\n            }}\n          />\n        </Col>\n      </Row>\n\n      <Discussion showdiscussion={props.showdiscussion} />\n    </Container>\n  );\n}\n\nexport default Answers;\n","import List from \"./List\";\nimport { ListEntry } from \"./index\";\nimport { Card, Container, Row } from \"react-bootstrap\";\nimport \"./Suggestion.css\";\n\nfunction Suggestion(props) {\n  return (\n    <Container className=\"suggestion-container\" fluid>\n      <Card className=\"suggestion-card\">\n        <Card.Body>\n          <List scope={props.scope} title={props.title} rows={props.rows} />\n        </Card.Body>\n      </Card>\n    </Container>\n  );\n}\n\nexport default Suggestion;\n","import {\n  Row,\n  Col,\n  Card,\n  Pagination,\n  Form,\n  Button,\n  Stack,\n} from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { useState /* , useEffect */ } from \"react\";\nimport { Recent, List, SearchBar } from \"../base/\";\nimport Suggestion from \"../base/Suggestion\";\n// import API from \"../api/API\";\n\nconst PaginationRow = () => {\n  let [active, setActive] = useState(1);\n  let items = [];\n  for (let num = 1; num <= 5; num++) {\n    items.push(\n      <Pagination.Item\n        key={num}\n        active={num === active}\n        onClick={() => {\n          setActive((active = num));\n        }}\n      >\n        {num}\n      </Pagination.Item>\n    );\n  }\n\n  return (\n    <Pagination>\n      <Pagination.First />\n      {items}\n      <Pagination.Last />\n    </Pagination>\n  );\n};\n\nfunction CoursesList() {\n  /** Mock courses and questions **/\n  const fakeCourses = [\n    { code: \"A0B1C2\", course: \"Analysis 1\", cfu: 10, professor: \"Mario Rossi\" },\n    {\n      code: \"D3E4F5\",\n      course: \"Physics 1\",\n      cfu: 10,\n      professor: \"Stefano Bianchi\",\n    },\n    {\n      code: \"G6H7I8\",\n      course: \"Geometry\",\n      cfu: 10,\n      professor: \"Giuseppe Verdi\",\n    },\n  ];\n\n  const fakeQuestions = [\n    {\n      id: 1,\n      question: \"What is a vector?\",\n      author: \"Donato\",\n      createdat: \"15:20 12/01/2021\",\n      tags: [\"vectors\"],\n      excerpt: \"Cras justo odio...\",\n    },\n    {\n      id: 2,\n      question: \"Who is Maxwell?\",\n      author: \"Jim\",\n      createdat: \"17:30 13/02/2021\",\n      tags: [\"physics\"],\n      excerpt: \"Cras justo odio...\",\n    },\n    {\n      id: 3,\n      question: \"How many meters per second?\",\n      author: \"Derek\",\n      createdat: \"19:40 14/03/2021\",\n      tags: [\"physics\", \"kinematic\"],\n      excerpt: \"Cras justo odio...\",\n    },\n  ];\n\n  const [courses, setCourses] = useState(fakeCourses /*[]*/);\n  const [myCourses, setMyCourses] = useState([]);\n  const [suggestions, setSuggestions] = useState(fakeQuestions /*[]*/);\n  const suggestionType = [\"Latest\", \"Hottest\"];\n  const coursesType = [\"My Courses\", \"All Courses\"];\n\n  /**Courses and questions related**/\n  /*\n\t// courses\n\tuseEffect(()=> {\n\t\tAPI.getCourses()\n\t\t\t.then(courses => setCourses(courses))\n\t\t\t.catch(err => console.log(err));\n\t}, []);\n\n\t// myCourses\n\tuseEffect(() => {\n\t\tAPI.getMyCourses()\n\t\t\t.then(myCourses => setMyCourses(myCourses))\n\t\t\t.catch(err => console.log(err));\n\t}, []);\n\t*/\n\n  // useEffect(() => {\n  //     const getCourses = async () => {\n  //         const courses = await API.getAllCourses();\n  //         setCourses(courses);\n  //     }\n  //     getCourses();\n  // },[]);\n\n  return (\n    <Row>\n      <Col>\n        <Card body>\n          <Row lg={12} className=\"py-0 header\">\n            <h3>Courses</h3>\n          </Row>\n          <Row>\n            <SearchBar />\n          </Row>\n          {coursesType.map((type, i) => {\n            return (\n              <Link\n                key={i}\n                className=\"list-attributes\"\n                to={{\n                  pathname:\n                    \"/listfullpage/\" + type.replace(/\\s/g, \"\").toLowerCase(),\n                }}\n                state={{ scope: \"courses\", title: type, rows: courses }}\n              >\n                <List key={i} scope=\"courses\" title={type} rows={courses} />\n              </Link>\n            );\n          })}\n          <PaginationRow />\n        </Card>\n      </Col>\n      <Col className=\"d-none d-md-inline-block col-md-4\">\n        <Stack gap={4}>\n          {suggestionType.map((type, i) => {\n            return (\n              <Row key={i}>\n                <Suggestion\n                  scope={\"suggestion\"}\n                  title={type + \" Questions\"}\n                  rows={suggestions}\n                />\n              </Row>\n            );\n          })}\n        </Stack>\n      </Col>\n    </Row>\n  );\n}\n\nexport default CoursesList;\n","import parse from \"html-react-parser\";\nimport { Button, Container, Row, Col, Card, Form } from \"react-bootstrap\";\nimport \"./Exam.css\";\n\nconst MultipleChoice = ({ index, questiontext, answer, ...rest }) => {\n  console.log({ answer });\n  return (\n    <Form className=\"multipleChoice\">\n      <Form.Label>\n        {index})\n        {questiontext\n          ? questiontext[\"@format\"] === \"html\"\n            ? parse(questiontext.text)\n            : `${index}) ${questiontext.text}`\n          : null}\n      </Form.Label>\n      {answer &&\n        answer.map(\n          (ans, index) =>\n            ans && (\n              <div key={`inline-${ans}`} className=\"mb-3\">\n                <Form.Check\n                  inline\n                  label={ans[\"@format\"] === \"html\" ? parse(ans.text) : ans.text}\n                  name=\"group1\"\n                  type=\"checkbox\"\n                  id={`inline-${index}-1`}\n                />\n              </div>\n            )\n        )}\n    </Form>\n  );\n};\n\nconst Exam = ({ question }) => {\n  return (\n    <Container className=\"container\">\n      <Card body>\n        <Row lg={12} className=\"header\">\n          <Col>\n            <h3>Exam</h3>\n          </Col>\n        </Row>\n        {/* {question.map(\n\t\t\t\t\t(item, index) =>\n\t\t\t\t\t\t(item[\"@type\"] = \"multichoice\" && (\n\t\t\t\t\t\t\t<Row className='mt-10'>\n\t\t\t\t\t\t\t\t<Col lg='12'>\n\t\t\t\t\t\t\t\t\t<MultipleChoice {...{ index, ...item }} />\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t))\n\t\t\t\t)} */}\n      </Card>\n    </Container>\n  );\n};\n\nexport default Exam;\n","import { Row, Col, Card } from \"react-bootstrap\";\nimport { useState } from \"react\";\nimport \"./Home.css\";\nimport { ListGroup, SearchBar } from \"../base/\";\n\nfunction Home() {\n  const fake = [\n    {\n      scope: \"default\",\n      title: \"New questions in courses I'm enrolled in\",\n      rows: [\n        [\"Cras justo odio\"],\n        [\"Dapibus ac facilisis in\"],\n        [\"Morbi leo risus\"],\n        [\"Porta ac consectetur ac\"],\n        [\"Vestibulum at eros\"],\n      ],\n    },\n    {\n      scope: \"default\",\n      title: \"Replies\",\n      rows: [\n        [\"Cras justo odio\"],\n        [\"Dapibus ac facilisis in\"],\n        [\"Morbi leo risus\"],\n        [\"Porta ac consectetur ac\"],\n        [\"Vestibulum at eros\"],\n      ],\n    },\n    {\n      scope: \"test\",\n      title: \"My questions\",\n      rows: [\n        { a: \"aaa\", b: \"bbb\", c: \"ccc\" },\n        { a: \"aaa\", b: \"bbb\", c: \"ccc\" },\n        { a: \"aaa\", b: \"bbb\", c: \"ccc\" },\n      ],\n    },\n    {\n      scope: \"test\",\n      title: \"My answers\",\n      rows: [\n        { a: \"aaa\", b: \"bbb\", c: \"ccc\" },\n        { a: \"aaa\", b: \"bbb\", c: \"ccc\" },\n        { a: \"aaa\", b: \"bbb\", c: \"ccc\" },\n      ],\n    },\n  ];\n\n  const [tests, setTests] = useState(fake);\n\n  return (\n    <Card body>\n      <Row lg={12} className=\"py-0 header\">\n        <Col>\n          <h3>Hi, Name Surname!</h3>\n        </Col>\n      </Row>\n      <ListGroup lists={tests} cols={2} tiled rounded dotted />\n    </Card>\n  );\n}\n\nexport default Home;\n","import { useState } from \"react\";\nimport { Modal, Form, Button, Alert } from \"react-bootstrap\";\n\nfunction LoginForm(props) {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  function checkPassword(password) {\n    if (password.length >= 6) return true;\n    return false;\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    setErrorMessage(\"\");\n    const credentials = { username, password };\n    let valid = true;\n    if (username === \"\" || !checkPassword(password)) valid = false;\n    if (valid) {\n      props.login(credentials);\n    } else {\n      setErrorMessage(\"Errors in the form\");\n    }\n  };\n\n  return (\n    <Modal.Dialog>\n      <Modal.Header>\n        <Modal.Title>Login</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        {errorMessage ? <Alert variant=\"danger\">{errorMessage}</Alert> : null}\n        <Form.Group controlId=\"username\">\n          <Form.Label>Email</Form.Label>\n          <Form.Control\n            type=\"email\"\n            value={username}\n            onChange={(ev) => setUsername(ev.target.value)}\n          />\n        </Form.Group>\n        <Form.Group controlId=\"password\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            value={password}\n            onChange={(ev) => setPassword(ev.target.value)}\n          />\n        </Form.Group>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button onClick={handleSubmit}>Login</Button>\n      </Modal.Footer>\n    </Modal.Dialog>\n  );\n}\n\nexport default LoginForm;\n","import { Row, Col, Card, Image } from \"react-bootstrap\";\nimport { useState } from \"react\";\nimport \"./Profile.css\";\nimport { ListGroup, SearchBar } from \"../base/\";\n\nfunction Profile() {\n  const fake = [\n    {\n      scope: \"default\",\n      title: \"My questions\",\n      rows: [\n        [\"Cras justo odio\"],\n        [\"Dapibus ac facilisis in\"],\n        [\"Morbi leo risus\"],\n        [\"Porta ac consectetur ac\"],\n        [\"Vestibulum at eros\"],\n      ],\n    },\n    {\n      scope: \"default\",\n      title: \"My answers\",\n      rows: [\n        [\"Cras justo odio\"],\n        [\"Dapibus ac facilisis in\"],\n        [\"Morbi leo risus\"],\n        [\"Porta ac consectetur ac\"],\n        [\"Vestibulum at eros\"],\n      ],\n    },\n    {\n      scope: \"default\",\n      title: \"My simulation results\",\n      rows: [\n        [\"aaa\", \"bbb\", \"ccc\"],\n        [\"aaa\", \"bbb\", \"ccc\"],\n        [\"aaa\", \"bbb\", \"ccc\"],\n      ],\n    },\n  ];\n\n  const [tests, setTests] = useState(fake);\n\n  return (\n    <Card body>\n      <Row lg={12} className=\"py-0 header\">\n        <Col xs={2}>\n          <Image src={process.env.PUBLIC_URL + \"/icons/PERSON.svg\"} />\n        </Col>\n        <Col>\n          <h3>Name Surname</h3>\n          <h4>@Nickname</h4>\n        </Col>\n      </Row>\n      <ListGroup lists={tests} cols={2} rounded dotted />\n    </Card>\n  );\n}\n\nexport default Profile;\n","import {\n  Button,\n  Container,\n  Row,\n  Col,\n  Pagination,\n  Card,\n  Image,\n  Stack,\n} from \"react-bootstrap\";\n\nimport { useEffect, useState } from \"react\";\nimport \"./Questions.css\";\nimport { List, Recent, SearchBar, Suggestion } from \"../base/\";\nimport { Link, useLocation } from \"react-router-dom\";\n\nfunction PaginationRow(props) {\n  let [active, setActive] = useState(1);\n  let items = [];\n  for (let num = 1; num <= 5; num++) {\n    items.push(\n      <Pagination.Item\n        key={num}\n        active={num === active}\n        onClick={() => {\n          setActive((active = num));\n        }}\n      >\n        {num}\n      </Pagination.Item>\n    );\n  }\n\n  return (\n    <Pagination>\n      <Pagination.First />\n      {items}\n      <Pagination.Last />\n    </Pagination>\n  );\n}\n\nconst Questions = () => {\n  const fakeQuestions = [\n    {\n      id: 1,\n      question: \"What is a vector?\",\n      author: \"Donato\",\n      createdat: \"15:20 12/01/2021\",\n      tags: [\"vectors\"],\n      excerpt: \"Cras justo odio...\",\n    },\n    {\n      id: 2,\n      question: \"Who is Maxwell?\",\n      author: \"Jim\",\n      createdat: \"17:30 13/02/2021\",\n      tags: [\"physics\"],\n      excerpt: \"Cras justo odio...\",\n    },\n    {\n      id: 3,\n      question: \"How many meters per second?\",\n      author: \"Derek\",\n      createdat: \"19:40 14/03/2021\",\n      tags: [\"physics\", \"kinematic\"],\n      excerpt: \"Cras justo odio...\",\n    },\n  ];\n\n  const [questions, setQuestions] = useState(fakeQuestions /*[]*/);\n  const [suggestions, setSuggestions] = useState(fakeQuestions /*[]*/);\n  const suggestionType = [\"Latest\", \"Hottest\"];\n\n  // hook for responsive react\n  const useMediaQuery = (query) => {\n    const [matches, setMatches] = useState(false);\n\n    useEffect(() => {\n      const media = window.matchMedia(query);\n      if (media.matches !== matches) {\n        setMatches(media.matches);\n      }\n      const listener = () => {\n        setMatches(media.matches);\n      };\n      window.addEventListener(\"resize\", listener);\n      return () => window.removeEventListener(\"resize\", listener);\n    }, [matches, query]);\n\n    return matches;\n  };\n\n  // TODO: also take a look at Bootstrap class infixes to detect the current breakpoint\n  // to see which approach is better -- https://getbootstrap.com/docs/5.1/layout/breakpoints/\n  const isDesktop = useMediaQuery(\"(min-width: 960px)\");\n\n  const locationState = useLocation().state;\n\n  return (\n    <>\n      <Container>\n        <Stack gap={4}>\n          {isDesktop ? (\n            <Row key={isDesktop}>\n              <Col>\n                <Container className=\"container\">\n                  <Card body>\n                    <Row lg={12} className=\"header\">\n                      <Col>\n                        <Link\n                          className=\"right-button\"\n                          to={{\n                            pathname:\n                              \"/startsimulation/\" + locationState.courseId,\n                          }}\n                          state={{\n                            courseId: locationState.courseId,\n                            title: locationState.title,\n                          }}\n                        >\n                          <Button>\n                            <Image\n                              className=\"add-icon\"\n                              src={\n                                process.env.PUBLIC_URL +\n                                \"/icons/SIMULATION RESULTS_WHITE.svg\"\n                              }\n                              width=\"13px\"\n                            />\n                            {\" Start Simulation\"}\n                          </Button>\n                        </Link>\n\n                        <Button className=\"right-button\" onClick={() => {}}>\n                          <Image\n                            className=\"add-icon\"\n                            src={\n                              process.env.PUBLIC_URL + \"/icons/ADD_WHITE.svg\"\n                            }\n                            width=\"13px\"\n                          />\n                          {\" Add course\"}\n                        </Button>\n\n                        <Row>\n                          <Col className=\"listQuestionsTitle\">\n                            <SearchBar />\n                          </Col>\n                        </Row>\n                        <List\n                          scope=\"questions\"\n                          title={locationState.title}\n                          rows={questions}\n                        />\n                      </Col>\n\n                      <Col className=\"pagination\" lg=\"12\" sm=\"12\" md=\"12\">\n                        <PaginationRow />\n                      </Col>\n                    </Row>\n                  </Card>\n                </Container>\n              </Col>\n              <Col className=\"d-sm-inline-block col-md-4\">\n                <Stack gap={4}>\n                  {suggestionType.map((type, i) => {\n                    return (\n                      <Row key={i}>\n                        <Suggestion\n                          scope={\"suggestion\"}\n                          title={type + \" Questions\"}\n                          rows={suggestions}\n                        />\n                      </Row>\n                    );\n                  })}\n                </Stack>\n              </Col>\n            </Row>\n          ) : (\n              <>\n                <Row>\n                  <Container className=\"container\">\n                    <Card body>\n\n                      <Row lg={12} className=\"header\">\n                        <Col>\n\n                          <Link\n                              to={{ pathname: \"/startsimulation/\" + locationState.courseId }}\n                              state={{\n                                courseId: locationState.courseId,\n                                title: locationState.title,\n                              }}\n                          >\n                            <Button className=\"right-button\" onClick={() => {}}>\n                              <Image\n                                  className=\"add-icon\"\n                                  src={process.env.PUBLIC_URL + \"/icons/SIMULATION RESULTS_WHITE.svg\"}\n                                  width=\"13px\"\n                              />\n                              {\" Start Simulation\"}\n                            </Button>\n                          </Link>\n\n\n                        <Button className=\"right-button\" onClick={() => {}}>\n                          <Image\n                            className=\"add-icon\"\n                            src={\n                              process.env.PUBLIC_URL + \"/icons/ADD_WHITE.svg\"\n                            }\n                            width=\"13px\"\n                          />\n                          {\" Add course\"}\n                        </Button>\n\n                        <Row>\n                          <Col className=\"listQuestionsTitle\">\n                            <SearchBar />\n                          </Col>\n                        </Row>\n                        <List\n                          scope=\"questions\"\n                          title={locationState.title}\n                          rows={questions}\n                        />\n                      </Col>\n\n                      <Col className=\"pagination\" lg=\"12\" sm=\"12\" md=\"12\">\n                        <PaginationRow />\n                      </Col>\n                    </Row>\n                  </Card>\n                </Container>\n              </Row>\n              <Row>\n                <Stack gap={4}>\n                  {suggestionType.map((type, i) => {\n                    return (\n                      <Col key={i}>\n                        <Suggestion\n                          scope={\"suggestion\"}\n                          title={type + \" Questions\"}\n                          rows={suggestions}\n                        />\n                      </Col>\n                    );\n                  })}\n                </Stack>\n              </Row>\n            </>\n          )}\n        </Stack>\n      </Container>\n    </>\n  );\n};\n\nexport default Questions;\n","import { Row, Col, Card, Button } from \"react-bootstrap\";\nimport { useEffect, useState } from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { List, ListEntry, Recent, SearchBar, TextInput } from \"../base\";\nimport \"./Replies.css\";\n\nfunction Answer(props) {\n  return (\n    <div className=\"questionEntry\">\n      <Row>\n        <Col>\n          <h4>{props.ans.answer}</h4>\n        </Col>\n      </Row>\n      <Row>\n        <Col>from {props.ans.author}</Col>\n        <Col>Created at: {props.ans.createdat}</Col>\n      </Row>\n    </div>\n  );\n}\n\nfunction Replies() {\n  const answer = {\n    answer: \"Lorem ipsum dolor sit amet\",\n    author: \"Jim\",\n    createdat: \"10/10/1010\",\n  };\n  const fakeReplies = [\n    {\n      id: 1,\n      reply: \"I think it's correct\",\n      author: \"Donato\",\n      createdat: \"15:20 12/01/2021\",\n    },\n    {\n      id: 2,\n      reply: \"Maybe is wrong\",\n      author: \"Jim\",\n      createdat: \"17:30 13/02/2021\",\n    },\n    {\n      id: 3,\n      reply: \"idk\",\n      author: \"Derek\",\n      createdat: \"19:40 14/03/2021\",\n    },\n  ];\n\n  const [replies, setReplies] = useState(fakeReplies);\n\n  return (\n    <>\n      <Answer ans={answer} />\n      <List scope=\"replies\" rows={replies} />\n      <TextInput />\n      <Button className=\"reply-button my-2\">Reply</Button>\n    </>\n  );\n}\n\nexport default Replies;\n","import { Row, Col, Card, Image, Form, Button } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport \"./UserSettings.css\";\nimport { List } from \"../base/\";\n\nfunction UserSettings() {\n  const fake = [\n    [<Form.Check />, \"Analisys I\"],\n    [<Form.Check />, \"Physics I\"],\n    [<Form.Check />, \"Geometry\"],\n  ];\n  const [courses, setCourses] = useState(fake);\n\n  return (\n    <Card body>\n      <Row lg={12} className=\"py-0 header\">\n        <Col xs={2}>\n          <Image src={process.env.PUBLIC_URL + \"/icons/PERSON.svg\"} />\n        </Col>\n        <Col>\n          <h3>Name Surname</h3>\n          <h4>@Nickname</h4>\n          <Form.Control placeholder=\"Change nickname\" />\n          <Form.Check label=\"Public profile\" />\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <List rows={courses} title={\"Enrolled in\"} scope={\"default\"} />\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Link to=\"/courses\">\n            <Button>Add new course</Button>\n          </Link>\n          <Button className=\"saveButton\">Save</Button>\n        </Col>\n      </Row>\n    </Card>\n  );\n}\n\nexport default UserSettings;\n","import { List } from \"../base\";\nimport { Card, Container, Pagination } from \"react-bootstrap\";\nimport { useLocation } from \"react-router-dom\";\nimport { useState } from \"react\";\n\nfunction PaginationRow() {\n  let [active, setActive] = useState(1);\n  let items = [];\n  for (let num = 1; num <= 5; num++) {\n    items.push(\n      <Pagination.Item\n        key={num}\n        active={num === active}\n        onClick={() => {\n          setActive((active = num));\n        }}\n      >\n        {num}\n      </Pagination.Item>\n    );\n  }\n\n  return (\n    <Pagination>\n      <Pagination.First />\n      {items}\n      <Pagination.Last />\n    </Pagination>\n  );\n}\n\nexport default function ListFullPage() {\n  const location = useLocation();\n  return (\n    <>\n      <Container>\n        <Card body>\n          <h2>{location.state.title}</h2>\n          <List\n            scope={location.state.scope}\n            title={\"\"}\n            rows={location.state.rows}\n          />\n          {location.state.title === \"My courses\" ? <></> : <PaginationRow />}\n        </Card>\n      </Container>\n    </>\n  );\n}\n","import { Card, Container, Pagination } from \"react-bootstrap\";\nimport { List, SearchBar } from \"../base\";\nimport { useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nfunction PaginationRow() {\n  let [active, setActive] = useState(1);\n  let items = [];\n  for (let num = 1; num <= 5; num++) {\n    items.push(\n      <Pagination.Item\n        key={num}\n        active={num === active}\n        onClick={() => {\n          setActive((active = num));\n        }}\n      >\n        {num}\n      </Pagination.Item>\n    );\n  }\n\n  return (\n    <Pagination>\n      <Pagination.First />\n      {items}\n      <Pagination.Last />\n    </Pagination>\n  );\n}\n\nexport default function Bookmarks() {\n  const location = useLocation();\n  return (\n    <>\n      <Container>\n        <Card body>\n          <h2>{location.state.title}</h2>\n          <SearchBar />\n          <List\n            scope={location.state.scope}\n            title={\"\"}\n            rows={location.state.rows}\n          />\n          <PaginationRow />\n        </Card>\n      </Container>\n    </>\n  );\n}\n","import {\n  Card,\n  Container,\n  Form,\n  Row,\n  Col,\n  Button,\n  Stack,\n  FloatingLabel,\n  InputGroup,\n  FormControl,\n  Alert,\n} from \"react-bootstrap\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport \"./StartSimulation.css\";\n\nexport default function StartSimulation() {\n  const simulationTypes = [\"Random\", \"Exam\"];\n\n  const [isMulti, setIsMulti] = useState(false);\n\n  const [numQuestions, setNumQuestions] = useState(10);\n  const [penaltyScore, setPenaltyScore] = useState(-0.5);\n  const [maxScore, setMaxScore] = useState(30);\n  const [duration, setDuration] = useState(60); /* unit: minute */\n  const [userInput, setUserInput] = useState(1);\n  const totNumOfQuestion = undefined;\n  const [maxNumOfQuestion, setMaxNumOfQuestion] = useState(\n    totNumOfQuestion ? totNumOfQuestion : 100\n  );\n\n  const locationState = useLocation().state;\n\n  return (\n    <>\n      <Container>\n        <Card className=\"simulation-card\">\n          <Card.Body>\n            <Stack gap={4}>\n              <h3>Simulation Set Up</h3>\n              <Col>\n                <Stack gap={2}>\n                  <Row>\n                    <div key=\"checkbox-ratio\" className=\"mb-3\">\n                      <Form.Switch\n                        className=\"multiquiz-toggle\"\n                        type=\"switch\"\n                        label=\"Multiple Choice Questions Only (With Grade)\"\n                        onChange={() => setIsMulti(!isMulti)}\n                      />\n                    </div>\n                  </Row>\n                  {userInput || userInput === 0 ? (\n                    maxNumOfQuestion > 100 ? (\n                      <Alert variant=\"danger\">\n                        Maximum Number of question: {maxNumOfQuestion}\n                      </Alert>\n                    ) : numQuestions <= 0 || maxScore <= 0 || duration <= 0 ? (\n                      <Alert variant=\"danger\">\n                        Number of Question, Maximum Score, and Duration Must Not\n                        Be Zero\n                      </Alert>\n                    ) : (\n                      <></>\n                    )\n                  ) : (\n                    <Alert variant=\"danger\">\n                      Only Number Inputs Are Allowed\n                    </Alert>\n                  )}\n                  <Stack gap={4}>\n                    {isMulti ? (\n                      <Row key={isMulti}>\n                        <Card>\n                          <Card.Body>\n                            <Stack gap={2}>\n                              <h6>\n                                ( Number of Question, Maximum Score, and\n                                Duration Must Not Be Zero )\n                              </h6>\n                              <InputGroup key={isMulti}>\n                                <InputGroup.Text>\n                                  Number of Questions\n                                </InputGroup.Text>\n                                <FormControl\n                                  aria-label={numQuestions}\n                                  placeholder={numQuestions}\n                                  onChange={(e) => {\n                                    setUserInput(Number(e.target.value));\n                                    setNumQuestions(Number(e.target.value));\n                                  }}\n                                />\n                              </InputGroup>\n                              <InputGroup>\n                                <InputGroup.Text>Penalty </InputGroup.Text>\n                                <FormControl\n                                  aria-label={penaltyScore}\n                                  placeholder={penaltyScore}\n                                  onChange={(e) => {\n                                    setUserInput(Number(e.target.value));\n                                    setPenaltyScore(Number(e.target.value));\n                                  }}\n                                />\n                              </InputGroup>\n                              <InputGroup>\n                                <InputGroup.Text>Maximum Score</InputGroup.Text>\n                                <FormControl\n                                  aria-label={maxScore}\n                                  placeholder={maxScore}\n                                  onChange={(e) => {\n                                    setUserInput(Number(e.target.value));\n                                    setMaxScore(Number(e.target.value));\n                                  }}\n                                />\n                              </InputGroup>\n                              <InputGroup>\n                                <InputGroup.Text>\n                                  Duration (Minutes)\n                                </InputGroup.Text>\n                                <FormControl\n                                  aria-label={duration}\n                                  placeholder={duration}\n                                  onChange={(e) => {\n                                    setUserInput(Number(e.target.value));\n                                    setDuration(Number(e.target.value));\n                                  }}\n                                />\n                              </InputGroup>\n                            </Stack>\n                          </Card.Body>\n                        </Card>\n                      </Row>\n                    ) : (\n                      <></>\n                    )}\n                    <Row className=\"bottom-group\">\n                      {numQuestions &&\n                      maxScore &&\n                      !isNaN(penaltyScore) &&\n                      duration &&\n                      numQuestions <= maxNumOfQuestion ? (\n                        simulationTypes.map((type, i) => {\n                          return (\n                            <Col key={i}>\n                              <Link\n                                key={i}\n                                to={{\n                                  pathname:\n                                    \"/simulation/\" + locationState.courseId,\n                                }}\n                                state={{\n                                  type: type,\n                                  title: locationState.title,\n                                  courseId: locationState.courseId,\n                                  num: numQuestions,\n                                  penalty: penaltyScore,\n                                  max: maxScore,\n                                  isMulti: isMulti,\n                                  duration: duration,\n                                }}\n                              >\n                                <Button\n                                  key={i}\n                                  className=\"btn-outline-success\"\n                                  variant=\"outline-success\"\n                                >\n                                  {type + \" Question\"}\n                                </Button>\n                              </Link>\n                            </Col>\n                          );\n                        })\n                      ) : (\n                        <Alert variant=\"danger\">Invalid Inputs</Alert>\n                      )}\n                    </Row>\n                  </Stack>\n                </Stack>\n              </Col>\n            </Stack>\n          </Card.Body>\n        </Card>\n      </Container>\n    </>\n  );\n}\n","import { Link, useLocation } from \"react-router-dom\";\nimport { useCallback, useEffect, useState, Component, useRef } from \"react\";\nimport {\n  Card,\n  Row,\n  Col,\n  Pagination,\n  Container,\n  Button,\n  Form,\n  Stack,\n  Modal,\n} from \"react-bootstrap\";\nimport \"./Simulation.css\";\nimport { List, ListEntry, TextInput } from \"../base\";\n\nconst Duration = (props) => {\n  const [timeIn, setTimeIn] = useState({\n    h: Math.floor(parseInt(props.duration) / 60),\n    m: parseInt(props.duration) % 60,\n    s: 0,\n  });\n\n  useEffect(() => {\n    const myInterval = setInterval(() => {\n      setTimeIn((time) => {\n        const updateTime = { ...time };\n        if (time.s > 0) {\n          updateTime.s--;\n        }\n        if (time.s === 0) {\n          if (time.h === 0 && time.m === 0) {\n            clearInterval(myInterval);\n          } else if (time.m > 0) {\n            updateTime.m--;\n            updateTime.s = 59;\n          } else if (time.h > 0) {\n            updateTime.h--;\n            updateTime.m = 59;\n            updateTime.s = 59;\n          }\n        }\n        return updateTime;\n      });\n    }, 1000);\n    return () => clearInterval(myInterval);\n  }, [timeIn]);\n\n  return (\n    <>\n      <h3 className=\"simulation-duration\">\n        {timeIn.h.toString().padStart(2, \"0\")}:\n        {timeIn.m.toString().padStart(2, \"0\")}:\n        {timeIn.s.toString().padStart(2, \"0\")}\n      </h3>\n    </>\n  );\n};\n\nconst FinishModal = (props) => {\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  const timeIn =\n    Math.floor(parseInt(props.duration) / 60)\n      .toString()\n      .padStart(2, \"0\") +\n    \":\" +\n    (parseInt(props.duration) % 60).toString().padStart(2, \"0\") +\n    \":\" +\n    (0).toString().padStart(2, \"0\");\n\n  const [timeRecord, setTimeRecord] = useState({\n    h: Math.floor(parseInt(props.duration) / 60),\n    m: parseInt(props.duration) % 60,\n    s: 0,\n  });\n\n  useEffect(() => {\n    const myInterval = setInterval(() => {\n      setTimeRecord((time) => {\n        const updateTime = { ...time };\n        if (time.s > 0) {\n          updateTime.s--;\n        }\n        if (time.s === 0) {\n          if (time.h === 0 && time.m === 0) {\n            clearInterval(myInterval);\n          } else if (time.m > 0) {\n            updateTime.m--;\n            updateTime.s = 59;\n          } else if (time.h > 0) {\n            updateTime.h--;\n            updateTime.m = 59;\n            updateTime.s = 59;\n          }\n        }\n        return updateTime;\n      });\n    }, 1000);\n    return () => clearInterval(myInterval);\n  }, [timeRecord]);\n\n  return (\n      (timeRecord.h === 0 && timeRecord.m === 0 && timeRecord.s === 0)?\n          <Modal show={true} className=\"simulation-modal\">\n            <Modal.Header>\n              <Modal.Title>Time Is Up!</Modal.Title>\n            </Modal.Header>\n            <Modal.Footer>\n              <Link\n                  className=\"outline-secondary\"\n                  to={{\n                    pathname: \"/simulationresult/\" + props.locationState.courseId,\n                  }}\n                  state={{\n                    courseId: props.locationState.courseId,\n                    title: props.locationState.title,\n                    num: props.locationState.num,\n                    penalty: props.locationState.penalty,\n                    max: props.locationState.max,\n                    isMulti: props.locationState.isMulti,\n                    pointPerCorrectAns:\n                        props.locationState.max / props.locationState.num,\n                    duration: timeIn,\n                    timeElapsed: `${timeRecord.h\n                        .toString()\n                        .padStart(2, \"0\")}:${timeRecord.m\n                        .toString()\n                        .padStart(2, \"0\")}:${timeRecord.s.toString().padStart(2, \"0\")}`,\n                  }}\n              >\n                <Button className=\"btn-outline-success\" variant=\"outline-success\">\n                  See Result\n                </Button>\n              </Link>\n            </Modal.Footer>\n          </Modal>\n          :\n          <>\n            <Button\n                className=\"btn-outline-success\"\n                variant=\"outline-success\"\n                onClick={handleShow}\n            >\n              Finish\n            </Button>\n            <Modal show={show} onHide={handleClose} className=\"simulation-modal\">\n              <Modal.Header closeButton>\n                <Modal.Title>Submit Before the Time Limit?</Modal.Title>\n              </Modal.Header>\n              <Modal.Body>Confirm your submission to see the result.</Modal.Body>\n              <Modal.Footer>\n                <Link\n                    className=\"outline-secondary\"\n                    to={{\n                      pathname: \"/simulationresult/\" + props.locationState.courseId,\n                    }}\n                    state={{\n                      courseId: props.locationState.courseId,\n                      title: props.locationState.title,\n                      num: props.locationState.num,\n                      penalty: props.locationState.penalty,\n                      max: props.locationState.max,\n                      isMulti: props.locationState.isMulti,\n                      pointPerCorrectAns:\n                          props.locationState.max / props.locationState.num,\n                      duration: timeIn,\n                      timeElapsed: `${timeRecord.h\n                          .toString()\n                          .padStart(2, \"0\")}:${timeRecord.m\n                          .toString()\n                          .padStart(2, \"0\")}:${timeRecord.s.toString().padStart(2, \"0\")}`,\n                    }}\n                >\n                  <Button className=\"btn-outline-success\" variant=\"outline-success\">\n                    Confirm\n                  </Button>\n                </Link>\n              </Modal.Footer>\n            </Modal>\n          </>\n  );\n};\n\nexport default function Simulation(props) {\n  const locationState = useLocation().state;\n\n  const simulationRandomQuizType = [\"open\", \"close\"];\n  const [pageNum, setPageNum] = useState(1);\n  const randomizer =\n    simulationRandomQuizType[\n      Math.floor(Math.random() * simulationRandomQuizType.length)\n    ];\n  const [quizType, setQuizType] = useState(randomizer);\n\n  const PaginationRow = (props) => {\n    let items = [];\n    for (let num = 1; num <= props.numPage; num++) {\n      items.push(\n        <Pagination.Item\n          key={num}\n          active={num === pageNum}\n          onClick={() => {\n            setPageNum(num);\n          }}\n        >\n          {num}\n        </Pagination.Item>\n      );\n    }\n\n    return (\n      <Pagination>\n        <Pagination.First />\n        {items}\n        <Pagination.Last />\n      </Pagination>\n    );\n  };\n\n  // mock question type\n  useEffect(() => {\n    locationState.isMulti ? setQuizType(\"close\") : setQuizType(randomizer);\n  }, [pageNum]);\n\n  return (\n    <Container className=\"simulation-container\">\n      <h3 className=\"simulation-title\">{locationState.type + \" Questions of \" + locationState.title}</h3>\n      <Duration duration={locationState.duration} />\n      <Row className=\"pagination-finish\">\n        <Col>\n          <PaginationRow numPage={locationState.num} />\n        </Col>\n        <Col>\n          <FinishModal\n            locationState={locationState}\n            duration={locationState.duration}\n          />\n        </Col>\n      </Row>\n      <Card className=\"simulation-question-card\">\n        <Stack gap={3}>\n          <Card className=\"simulation-question-text-card\">\n            <h3 className=\"simulation-question-title-number\">{\"Question \" + pageNum}</h3>\n            <Card.Text>\n              \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n              eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut\n              enim ad minim veniam, quis nostrud exercitation ullamco laboris\n              nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in\n              reprehenderit in voluptate velit esse cillum dolore eu fugiat\n              nulla pariatur. Excepteur sint occaecat cupidatat non proident,\n              sunt in culpa qui officia deserunt mollit anim id est laborum.\"\n            </Card.Text>\n          </Card>\n          <Card.Body className=\"simulation-question-answer\">\n            {quizType === \"open\" ? (\n              <TextInput />\n            ) : (\n              <Card className=\"simulation-question-answer-ratio-card\">\n                <Stack gap={1}>\n                  {[\"A\", \"B\", \"C\", \"D\"].map((e, i) => {\n                    return <Form.Check key={i} type=\"checkbox\" label={e} className=\"simulation-answer-checkbox\" />;\n                  })}\n                </Stack>\n              </Card>\n            )}\n          </Card.Body>\n        </Stack>\n      </Card>\n    </Container>\n  );\n}\n","import {Link, useLocation} from \"react-router-dom\";\nimport {Card, Container, Table, Stack, Button, Image, Row, Col} from \"react-bootstrap\";\nimport \"./SimulationResult.css\";\nimport { useState } from \"react\";\nimport { List } from \"../base\";\n\nconst timeUsedStr = (left, tot) => {\n  let h, m, s;\n  if (left.length !== tot.length) {\n    return \"\";\n  }\n  for (let i = 0; i < left.length; i++) {\n    if (i === 0) {\n      h = tot[0] - left[0];\n    }\n    if (i === 1) {\n      m = tot[1] - left[1];\n      if (m < 0) {\n        h -= 1;\n        m = m + 60;\n      }\n    }\n    if (i === 2) {\n      s = tot[2] - left[2];\n      if (s < 0) {\n        m -= 1;\n        s = s + 60;\n      }\n    }\n  }\n  return (\n    h.toString().padStart(2, \"0\") +\n    \":\" +\n    m.toString().padStart(2, \"0\") +\n    \":\" +\n    s.toString().padStart(2, \"0\")\n  );\n};\n\nexport default function SimulationResult() {\n  const locationState = useLocation().state;\n\n  const [numCorrect, setNumCorrect] = useState(locationState.num);\n  const [numPenalty, setNumPenalty] = useState(0);\n\n  const numNotGiven = locationState.num - numCorrect - numPenalty;\n  const numQuiz = locationState.num;\n  const maxScore = locationState.max;\n  const pointPerWrong = locationState.penalty;\n  const pointPerCorrect = locationState.pointPerCorrectAns;\n\n  const mockCorrectAns = [];\n  for (let i = 0; i < numQuiz; i++) {\n    mockCorrectAns.push({\n      id: locationState.courseId,\n      quizNum: i + 1,\n      ans: \"C\",\n      score: pointPerCorrect,\n      penalty: pointPerWrong,\n      isCorrect: false,\n    });\n  }\n\n  const mockUserAns = [];\n  for (let i = 0; i < numQuiz; i++) {\n    const randomAns = [\"A\", \"B\", \"C\", \"D\"];\n    const random = Math.floor(Math.random() * randomAns.length);\n    mockUserAns.push({\n      id: locationState.courseId,\n      quizNum: i + 1,\n      ans: randomAns[random],\n      score: pointPerCorrect,\n      penalty: pointPerWrong,\n      isCorrect: false,\n    });\n    mockUserAns[i].isCorrect = mockUserAns[i].ans === mockCorrectAns[i].ans;\n  }\n\n  const examDuration = locationState.duration.split(\":\").map((n) => {\n    return Number(n);\n  });\n  const timeElapsed = locationState.timeElapsed.split(\":\").map((n) => {\n    return Number(n);\n  });\n\n  const [useAns, setUserAns] = useState(mockUserAns);\n  const [correctAns, setCorrectAns] = useState(mockCorrectAns);\n  const [timeUsed, setTimeUsed] = useState(\n    timeUsedStr(timeElapsed, examDuration)\n  );\n\n  return (\n    <>\n      <Container className=\"simulation-result-container\">\n        <h2 className=\"simulation-result-title-text\">Simulation Result</h2>\n        <Row className=\"col-sm-8\">\n          <Col><h3 className=\"simulation-title\">{locationState.title}</h3></Col>\n          <Col>\n            <Link className=\"simulation-result-start-button\"\n                  to={{\n                    pathname:\n                        \"/startsimulation/\" + locationState.courseId,\n                  }}\n                  state={{\n                    courseId: locationState.courseId,\n                    title: locationState.title,\n                  }}\n            >\n              <Button className=\"start-button\">\n                <p>Start Another Simulation</p>\n              </Button>\n            </Link>\n          </Col>\n        </Row>\n        {/*<h3>*/}\n        {/*  Time Used: {timeUsed} / {locationState.duration}{\" \"}*/}\n        {/*</h3>*/}\n        <div className=\"simulation-result-score\">\n          <h2 className=\"simulation-result-user-score\">\n            {numCorrect * pointPerCorrect -\n            numPenalty * Math.abs(pointPerWrong)}\n          </h2>\n          <h2 className=\"simulation-result-max-score\">\n            /{maxScore}\n          </h2>\n        </div>\n        <Card className=\"result-table-card\">\n          <Table striped bordered hover size=\"lg\" className=\"simulation-result-table\">\n            <thead>\n              <tr>\n                <th>Result</th>\n                <th>Number</th>\n                <th>Points Each</th>\n                <th>Total</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                <td>Correct Answer</td>\n                <td>{numCorrect}</td>\n                <td>{pointPerCorrect}</td>\n                <td>{numCorrect * pointPerCorrect}</td>\n              </tr>\n              <tr>\n                <td>Not Given</td>\n                <td>{numNotGiven}</td>\n                <td>0</td>\n                <td>{numNotGiven * 0}</td>\n              </tr>\n              <tr>\n                <td>Wrong Answer</td>\n                <td>{numPenalty}</td>\n                <td>{pointPerWrong}</td>\n                <td>{numPenalty * pointPerWrong}</td>\n              </tr>\n            </tbody>\n          </Table>\n          <List scope={\"simulationResult\"} rows={useAns} />\n        </Card>\n      </Container>\n    </>\n  );\n}\n","import {useState} from \"react\";\nimport {Container, Card, Row, Col, Button, Image, Stack, ListGroup,Accordion, DropdownButton, Dropdown} from \"react-bootstrap\";\nimport {Link} from \"react-router-dom\";\nimport \"./SimulationAccess.css\";\n\n\nexport default function SimulationAccess() {\n\n    const fakeSimulationResult = [\n        {\n        id:\"A1234\",\n        course: \"Analysis I\",\n        score: 30,\n        date: \"20/05/21\",\n        maxScore: 30\n        },\n        {\n            id:\"B5678\",\n            course: \"Physics I\",\n            score: 18,\n            date: \"01/11/21\",\n            maxScore: 30\n        },\n        {\n            id:\"C1001\",\n            course: \"Geometry\",\n            score: 25,\n            date: \"20/04/22\",\n            maxScore: 30\n        },\n\n    ]\n\n    const fakeCourses = [\n        {   id: \"A0B1C2\",\n            course: \"Analysis I\",\n            cfu: 10,\n            professor: \"Mario Rossi\",\n            enrolled: true\n        },\n        {\n            code: \"D3E4F5\",\n            course: \"Physics I\",\n            cfu: 10,\n            professor: \"Stefano Bianchi\",\n            enrolled: true\n        },\n        {\n            code: \"G6H7I8\",\n            course: \"Geometry\",\n            cfu: 10,\n            professor: \"Giuseppe Verdi\",\n            enrolled: true\n        },\n    ];\n\n    const [coursesEnrolled, setCoursesEnrolled] = useState(fakeCourses);\n    const [simulationResult, setSimulationResult] = useState(fakeSimulationResult);\n    const [courseSelected, setCourseSelected] = useState({});\n    const [courseSelectedTitle, setCourseSelectedTitle] = useState(\"Select Course of Simulation\")\n    return(\n        <>\n            <Container className=\"\">\n                <h3>Simulation</h3>\n                <Card>\n                    <Card.Body>\n                        <Row className=\"col-xxl-12\">\n                            <Col>\n                                {\n                                    courseSelected.course? (\n                                        <Link\n                                            className=\"simulation-button\"\n                                            to={{\n                                                pathname:\n                                                    \"/startsimulation/\" + courseSelected.code,\n                                            }}\n                                            state={{\n                                                courseId: courseSelected.code,\n                                                title: courseSelected.course,\n                                            }}\n                                        >\n                                            <Button>\n                                                <Image\n                                                    className=\"add-icon\"\n                                                    src={\n                                                        process.env.PUBLIC_URL +\n                                                        \"/icons/SIMULATION RESULTS_WHITE.svg\"\n                                                    }\n                                                    width=\"13px\"\n                                                />\n                                                {\" Start Simulation\"}\n                                            </Button>\n                                        </Link>\n                                    ) : (\n                                        <>\n                                        </>\n                                    )\n                                }\n                                {/*<Link*/}\n                                {/*    to={{ pathname: \"/startsimulation/\" + e.id }}*/}\n                                {/*    state={{*/}\n                                {/*        courseId: e.id,*/}\n                                {/*        title: e.course,*/}\n                                {/*    }}*/}\n                                {/*>*/}\n                                {/*    <Button className=\"right-button\">*/}\n                                {/*        <Image*/}\n                                {/*            className=\"add-icon\"*/}\n                                {/*            src={process.env.PUBLIC_URL + \"/icons/SIMULATION RESULTS_WHITE.svg\"}*/}\n                                {/*            width=\"13px\"*/}\n                                {/*        />*/}\n                                {/*        {\" Start Simulation\"}*/}\n                                {/*    </Button>*/}\n                                {/*</Link>*/}\n                            </Col>\n                            <Col>\n                                <DropdownButton id=\"dropdown-basic-button\" title={courseSelectedTitle}>\n                                    {\n                                        coursesEnrolled.map((e,i) => {\n                                            if(e.enrolled) {\n                                                return (\n                                                    <>\n                                                        <Dropdown.Item key={i} as=\"button\" onClick={()=> {\n                                                            setCourseSelectedTitle(e.course);\n                                                            setCourseSelected(e);\n                                                        }}>{e.course}</Dropdown.Item>\n                                                    </>\n                                                )\n                                            }\n                                        })\n                                    }\n                                </DropdownButton>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <ListGroup className=\"simulation-access-result\">\n                                <h6>Simulation Results</h6>\n                                {simulationResult.map((e,i)=> {\n                                    return (\n                                        <>\n                                            <ListGroup.Item varient=\"flush\">\n                                                {\n                                                    <Row key={i}>\n                                                        <Col>{e.course}</Col>\n                                                        <Col>{e.score}</Col>\n                                                        <Col>{e.date}</Col>\n                                                    </Row>\n                                                }\n                                            </ListGroup.Item>\n                                        </>\n                                    )\n                                })}\n                            </ListGroup>\n                        </Row>\n                    </Card.Body>\n                </Card>\n            </Container>\n        </>\n    )\n}","import {\n  Row,\n  Col,\n  Container,\n  Image,\n  Card,\n  Accordion,\n  Button,\n} from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport MarkdownPreview from \"./MarkdownPreview\";\nimport remarkGfm from \"remark-gfm\";\nimport remarkMath from \"remark-math\";\nimport rehypeKatex from \"rehype-katex\";\nimport rehypeHighlight from \"rehype-highlight\";\n\nimport \"./ListEntry.css\";\nimport QuestionPreview from \"./QuestionPreview\";\nimport { useEffect, useState } from \"react\";\nimport { UserSettings } from \"../pages\";\n\nfunction ListEntryDefault(props) {\n  return (\n    <tr>\n      {props.row.map((cell, i) => (\n        <td key={i}>\n          {props.dotted && <span className=\"greenDot\">●</span>}\n          {cell}\n        </td>\n      ))}\n    </tr>\n  );\n}\n\nfunction ListEntryCourses(props) {\n  return (\n    <tr>\n      <td>{props.row.code}</td>\n      <td>\n        <Link\n          to={\"/course/\" + props.row.code}\n          state={{ courseId: props.row.code, title: props.row.course }}\n        >\n          {props.row.course}\n        </Link>\n      </td>\n      <td>{props.row.professor}</td>\n      <td>{props.row.cfu}</td>\n    </tr>\n  );\n}\n\nfunction ListEntryQuestions(props) {\n  return (\n    <div className=\"questionEntry\">\n      <Row>\n        <Col>\n          <Link to={\"/question/\" + props.row.id} className=\"question\">\n            {props.row.question}\n          </Link>\n        </Col>\n      </Row>\n      <Row>\n        <Col>from {props.row.author}</Col>\n        <Col>Created at: {props.row.createdat}</Col>\n      </Row>\n      <Row>\n        <Col>\n          {props.row.tags.map((t, i) => (\n            <Link key={i} to=\"\" className=\"tags\">\n              #{t}\n            </Link>\n          ))}\n        </Col>\n      </Row>\n      <Row>\n        <Col>{props.row.excerpt}</Col>\n      </Row>\n    </div>\n  );\n}\n\nfunction ListEntryAnswers(props) {\n  return (\n    <>\n      <tr>\n        <td colSpan=\"2\">\n          {props.row.author}, {props.row.createdat}\n          {props.row.replies > 0 && (\n            <span className=\"reply-link mx-3\">\n              {props.row.replies + \" \"}\n              <Image\n                src={process.env.PUBLIC_URL + \"/icons/DISCUSSION.svg\"}\n                width=\"28px\"\n              />\n            </span>\n          )}\n        </td>\n      </tr>\n      <tr>\n        <td className=\"answerEntry\">\n          <Link to=\"\">\n            <Image\n              src={process.env.PUBLIC_URL + \"/icons/UP ARROW.svg\"}\n              width=\"18px\"\n              onClick={() => {}}\n            />\n          </Link>\n        </td>\n        <MarkdownPreview rowspan=\"3\" markdown={props.row.answer} />\n      </tr>\n      <tr>\n        <td className=\"answerEntry\">\n          {props.row.like - props.row.dislike > 0 && \"+\"}\n          {props.row.like - props.row.dislike}\n        </td>\n      </tr>\n      <tr>\n        <td className=\"answerEntry\">\n          <Link to=\"\">\n            <Image\n              src={process.env.PUBLIC_URL + \"/icons/DOWN ARROW.svg\"}\n              width=\"18px\"\n              onClick={() => {}}\n            />\n          </Link>\n        </td>\n        <td>\n          <Link to=\"/discussion/1\">\n            <Button className=\"reply-link\">Reply</Button>\n          </Link>\n        </td>\n      </tr>\n    </>\n  );\n}\n\nfunction ListEntryReplies(props) {\n  return (\n    <div className=\"questionEntry\">\n      <Row>\n        <Col>{props.row.reply}</Col>\n      </Row>\n      <Row className=\"tags\">\n        <Col>from {props.row.author}</Col>\n        <Col>Created at: {props.row.createdat}</Col>\n      </Row>\n    </div>\n  );\n}\n\nfunction ListEntryTest(props) {\n  return (\n    <tr>\n      <td>{props.row.a}</td>\n      <td>{props.row.b}</td>\n      <td>{props.row.c}</td>\n    </tr>\n  );\n}\n\nfunction ListEntrySuggestion(props) {\n  return (\n    <Container>\n      <Col>\n        <Col>\n          <Link\n            to={\"/suggestion/\" + props.row.id}\n            className=\"suggestion-question\"\n          >\n            {props.row.question}\n          </Link>\n        </Col>\n        <Col>from {props.row.author}</Col>\n        <Col>Created at: {props.row.createdat}</Col>\n      </Col>\n    </Container>\n  );\n}\n\nfunction ListEntrySimulationResult(props) {\n  return (\n    <Accordion.Item eventKey={props.accordionKey} key={props.accordionKey}>\n      <Row>\n        <Col>\n          <Accordion.Header>\n            <Col className=\"col-md-2\">\n              {props.row.isCorrect ? (\n                <Image\n                  width={\"18px\"}\n                  src={process.env.PUBLIC_URL + \"/icons/CHECKMARK.svg\"}\n                />\n              ) : (\n                <Image\n                  width={\"18px\"}\n                  src={process.env.PUBLIC_URL + \"/icons/x.svg\"}\n                />\n              )}\n            </Col>\n            <Col>\n              <h6>Question {props.row.quizNum}</h6>\n            </Col>\n            <Col>\n              {props.row.isCorrect ? (\n                <h6>Score: {props.row.score}</h6>\n              ) : (\n                <h6>Score: {props.row.penalty}</h6>\n              )}\n            </Col>\n          </Accordion.Header>\n        </Col>\n      </Row>\n      <Accordion.Body>\n        <p>\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n          eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad\n          minim veniam, quis nostrud exercitation ullamco laboris nisi ut\n          aliquip ex ea commodo consequat. Duis aute irure dolor in\n          reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\n          pariatur. Excepteur sint occaecat cupidatat non proident, sunt in\n          culpa qui officia deserunt mollit anim id est laborum.\n        </p>\n        {\n          <Row>\n            <Col>\n              <h5>Your Answer: {props.row.ans}</h5>\n            </Col>\n            <Col>\n              <h5>Correct Answer: {\"C\"}</h5>\n              {/*props.row.correctAns*/}\n            </Col>\n          </Row>\n        }\n      </Accordion.Body>\n    </Accordion.Item>\n  );\n}\nfunction ListEntrySelection(props) {\n  return <option value={props.key + 1}>{props.row}</option>;\n}\n\nfunction ListEntry(props) {\n  return (\n    <>\n      {props.scope === \"default\" && (\n        <ListEntryDefault row={props.row} dotted={props.dotted} />\n      )}\n      {props.scope === \"courses\" && <ListEntryCourses row={props.row} />}\n      {props.scope === \"questions\" && <ListEntryQuestions row={props.row} />}\n      {props.scope === \"answers\" && <ListEntryAnswers row={props.row} />}\n      {props.scope === \"replies\" && <ListEntryReplies row={props.row} />}\n      {props.scope === \"test\" && <ListEntryTest row={props.row} />}\n      {props.scope === \"suggestion\" && <ListEntrySuggestion row={props.row} />}\n      {props.scope === \"simulationResult\" && (\n        <ListEntrySimulationResult\n          row={props.row}\n          accordionKey={props.accordionKey}\n        />\n      )}\n      {props.scope === \"selection\" && <ListEntrySelection row={props.row} />}\n    </>\n  );\n}\n\nexport default ListEntry;\n","import { Container, Row, Col } from \"react-bootstrap\";\nimport { List } from \"./\";\nimport \"./ListGroup.css\";\nimport { Link } from \"react-router-dom\";\n\nfunction ListGroup(props) {\n  return (\n    <Container>\n      {props.lists\n        .filter((useless, i) => i % props.cols === 0)\n        .map((useless, i) => (\n          <Row key={i}>\n            {props.lists\n              .slice(i * props.cols, (i + 1) * props.cols)\n              .map((l, j) => (\n                <Col key={j}>\n                  <Link\n                    className=\"list-attributes\"\n                    to={{\n                      pathname:\n                        \"/listfullpage/\" +\n                        l.title.replace(/\\s/g, \"\").toLowerCase(),\n                    }}\n                    state={{ scope: l.scope, title: l.title, rows: l.rows }}\n                  >\n                    <List\n                      key={i + l.scope + l.title + \"listComp\"}\n                      scope={l.scope}\n                      title={l.title}\n                      rows={l.rows}\n                      rounded={props.rounded}\n                      dotted={props.dotted}\n                    />\n                  </Link>\n                </Col>\n              ))}\n            {props.tiled &&\n              (i + 1) * props.cols > props.lists.length - 1 &&\n              props.lists.length % props.cols > 0 &&\n              [\n                ...Array(props.cols - (props.lists.length % props.cols)).keys(),\n              ].map((key) => <Col></Col>)}\n          </Row>\n        ))}\n    </Container>\n  );\n}\n\nexport default ListGroup;\n","import React from \"react\";\nimport { MarkdownUtil } from \"@sahircansurmeli/react-mde\";\n\nconst insertTex = {\n  name: \"insert-tex\",\n  icon: () => (\n    <img\n      src={process.env.PUBLIC_URL + \"/icons/TeX_logo.svg\"}\n      width=\"26\"\n      height=\"15\"\n      alt=\"Insert TeX\"\n    />\n  ),\n  buttonProps: {\n    \"aria-label\": \"Add TeX\",\n    title: \"Add TeX\",\n  },\n  execute: ({ textApi, initialState }) => {\n    const newSelectionRange = MarkdownUtil.selectWord({\n      text: initialState.text,\n      selection: initialState.selection,\n    });\n\n    const state1 = textApi.setSelectionRange(newSelectionRange);\n\n    const s1 = state1.selection;\n    const text = state1.text;\n    const selectedText = state1.selectedText;\n    let state2;\n\n    if (\n      selectedText.substring(0, 1) === \"$\" &&\n      selectedText.substring(selectedText.length - 1, selectedText.length) ===\n        \"$\"\n    ) {\n      state2 = textApi.replaceSelection(\n        selectedText.substring(1, selectedText.length - 1)\n      );\n      textApi.setSelectionRange({\n        start: s1.start,\n        end: s1.end - 1,\n      });\n    } else if (\n      s1.start >= 1 &&\n      text.substring(s1.start - 1, s1.start) === \"$\" &&\n      text.substring(s1.end, s1.end + 1) === \"$\"\n    ) {\n      textApi.setSelectionRange({\n        start: s1.start - 1,\n        end: s1.end + 1,\n      });\n      state2 = textApi.replaceSelection(state1.selectedText);\n      textApi.setSelectionRange({\n        start: state2.selection.start - state1.selectedText.length,\n        end: state2.selection.end,\n      });\n    } else {\n      // Replaces the current selection with the italic mark up\n      state2 = textApi.replaceSelection(`$${state1.selectedText}$`);\n      // Adjust the selection to not contain the *\n      textApi.setSelectionRange({\n        start: state2.selection.end - 1 - state1.selectedText.length,\n        end: state2.selection.end - 1,\n      });\n    }\n  },\n};\n\nexport default insertTex;\n","import { MarkdownUtil } from \"@sahircansurmeli/react-mde\";\n\nconst saveImage = {\n  execute: async ({ initialState, textApi, context, l18n }) => {\n    if (!context) {\n      throw new Error(\"wrong context\");\n    }\n\n    const {\n      event,\n      pasteOptions: { saveImage, multiple, accept },\n    } = context;\n\n    const items = isPasteEvent(context)\n      ? dataTransferToArray(event.clipboardData.items)\n      : isDragEvent(context)\n      ? dataTransferToArray(event.dataTransfer.items)\n      : fileListToArray(event.target.files);\n\n    const filteredItems = filterItems(items, { multiple, accept });\n\n    for (const index in filteredItems) {\n      const initialState = textApi.getState();\n      const breaksBeforeCount = MarkdownUtil.getBreaksNeededForEmptyLineBefore(\n        initialState.text,\n        initialState.selection.start\n      );\n\n      const breaksBefore = Array(breaksBeforeCount + 1).join(\"\\n\");\n      const placeHolder = `${breaksBefore}![${l18n.uploadingImage}]()`;\n\n      textApi.replaceSelection(placeHolder);\n\n      const blob = items[index];\n      const blobContents = await readFileAsync(blob);\n      const savingImage = saveImage(blobContents, blob);\n      const imageUrl = (await savingImage.next()).value;\n\n      const newState = textApi.getState();\n      const uploadingText = newState.text.slice(\n        initialState.selection.start,\n        initialState.selection.start + placeHolder.length\n      );\n\n      if (uploadingText === placeHolder) {\n        textApi.setSelectionRange({\n          start: initialState.selection.start,\n          end: initialState.selection.start + placeHolder.length,\n        });\n\n        const realImageMarkdown = imageUrl\n          ? `${breaksBefore}![image](${imageUrl})`\n          : \"\";\n\n        const selectionDelta = realImageMarkdown.length - placeHolder.length;\n\n        textApi.replaceSelection(realImageMarkdown);\n        textApi.setSelectionRange({\n          start: newState.selection.start + selectionDelta,\n          end: newState.selection.end + selectionDelta,\n        });\n      }\n    }\n  },\n};\n\nasync function readFileAsync(file) {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n\n    reader.onload = () => {\n      resolve(reader.result);\n    };\n\n    reader.onerror = reject;\n    reader.readAsDataURL(file);\n  });\n}\n\nfunction filterItems(items, { multiple, accept }) {\n  let filteredItems = items;\n\n  if (!multiple) {\n    filteredItems = filteredItems.slice(0, 1);\n  }\n\n  if (accept) {\n    const acceptedTypes = accept.split(\",\");\n    const fileExtensions = new Set(\n      acceptedTypes.filter((t) => /^\\.\\w+/.test(t)).map((t) => t.split(\".\")[1])\n    );\n    const mimeTypes = new Set(\n      acceptedTypes.filter((t) => /^[-\\w.]+\\/[-\\w.]+$/.test(t))\n    );\n    const anyTypes = new Set(\n      acceptedTypes\n        .filter((t) => /(audio|video|image)\\/\\*/.test(t))\n        .map((t) => t.split(\"/\")[0])\n    );\n\n    filteredItems = filteredItems.filter(\n      (f) =>\n        fileExtensions.has(f.name.split(\".\")[1]) ||\n        mimeTypes.has(f.type) ||\n        anyTypes.has(f.type.split(\"/\")[0])\n    );\n  }\n\n  return filteredItems;\n}\n\nfunction dataTransferToArray(items) {\n  const result = [];\n  for (const index in items) {\n    const item = items[index];\n    if (item.kind === \"file\") {\n      result.push(item.getAsFile());\n    }\n  }\n  return result;\n}\n\nfunction fileListToArray(list) {\n  const result = [];\n  for (let i = 0; i < list.length; i++) {\n    result.push(list[i]);\n  }\n  return result;\n}\n\nfunction isPasteEvent(context) {\n  return context.event.clipboardData !== undefined;\n}\n\nfunction isDragEvent(context) {\n  return context.event.dataTransfer !== undefined;\n}\n\nexport default saveImage;\n","import React, { useState } from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport ReactMde, {\n  getDefaultToolbarCommands,\n} from \"@sahircansurmeli/react-mde\";\nimport ReactMarkdown from \"react-markdown\";\nimport remarkGfm from \"remark-gfm\";\nimport remarkMath from \"remark-math\";\nimport rehypeKatex from \"rehype-katex\";\nimport rehypeHighlight from \"rehype-highlight\";\nimport { insertTex, saveImage } from \"./textInput/commands\";\n\nimport \"@sahircansurmeli/react-mde/lib/styles/css/react-mde-all.css\";\nimport \"./textInput/textInput.css\";\nimport \"katex/dist/katex.min.css\";\nimport \"highlight.js/styles/github.css\";\nimport \"./MarkdownPreview.css\";\n\nfunction TextInput({ value, onChange, selectedTab, onTabChange, childProps }) {\n  const [val, setVal] = useState(\"\");\n  const [selTab, setSelTab] = useState(\"write\");\n  const [base64Imgs, setBase64Imgs] = useState({});\n\n  const uploadImage = async function* (data, file) {\n    setBase64Imgs((prev) => {\n      return {\n        ...prev,\n        [file.name]: data,\n      };\n    });\n    yield file.name;\n  };\n\n  const generatePreviewMarkdown = async (markdown) => {\n    const filenamesToReplace = Object.keys(base64Imgs);\n\n    if (filenamesToReplace.length < 1) {\n      return markdown;\n    }\n\n    const re = new RegExp(\n      Object.keys(base64Imgs)\n        .map((fn) => `!\\\\[.*\\\\]\\\\(${fn}\\\\)`)\n        .join(\"|\"),\n      \"gi\"\n    );\n\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        resolve(\n          markdown.replaceAll(re, (match) => {\n            const alt = match.match(/!\\[.*\\]/);\n            const fn = match.match(/\\]\\(.*\\)/);\n            if (!alt || !fn) {\n              return match;\n            }\n            return `${alt[0]}(${base64Imgs[fn[0].slice(2, fn[0].length - 1)]})`;\n          })\n        );\n      });\n    });\n  };\n\n  return (\n    <Container>\n      <ReactMde\n        loadingPreview=\"Loading preview...\"\n        value={value || val}\n        onChange={onChange || setVal}\n        selectedTab={selectedTab || selTab}\n        onTabChange={onTabChange || setSelTab}\n        commands={{ \"insert-tex\": insertTex, \"upload-img\": saveImage }}\n        toolbarCommands={[...getDefaultToolbarCommands(), [\"insert-tex\"]]}\n        generateMarkdownPreview={async (markdown) => {\n          const previewMarkdown = await generatePreviewMarkdown(markdown);\n          return Promise.resolve(\n            <ReactMarkdown\n              remarkPlugins={[remarkGfm, remarkMath]}\n              rehypePlugins={[rehypeKatex, rehypeHighlight]}\n            >\n              {previewMarkdown}\n            </ReactMarkdown>\n          );\n        }}\n        childProps={childProps}\n        paste={{\n          saveImage: uploadImage,\n          command: \"upload-img\",\n          multiple: true,\n        }}\n      />\n    </Container>\n  );\n}\n\nexport default TextInput;\n","import React, { useState } from \"react\";\nimport { Collapse, Row, Col, Form, Pagination, Button } from \"react-bootstrap\";\n\nimport List from \"./List\";\n\nconst fakeAnswers = [\n  {\n    id: 1,\n    answer: \"$\\\\int_{a}^{b}{x^2 dx}$\",\n    author: \"Donato\",\n    createdat: \"15:20 12/01/2021\",\n    like: 5,\n    dislike: 2,\n    replies: 3,\n  },\n  {\n    id: 2,\n    answer: \"Morbi leo risus porta ac consectetur ac\",\n    author: \"Jim\",\n    createdat: \"17:30 13/02/2021\",\n    like: 5,\n    dislike: 7,\n    replies: 0,\n  },\n  {\n    id: 3,\n    answer: \"Vestibulum at eros\",\n    author: \"Derek\",\n    createdat: \"19:40 14/03/2021\",\n    like: 9,\n    dislike: 1,\n    replies: 1,\n  },\n];\n\nconst no_pages = 5;\n\nfunction Discussion(props) {\n  const [showDiscussion, setShowDiscussion] = useState(\n    props.showdiscussion || false\n  );\n  const [answers, setAnswers] = useState(fakeAnswers);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  return (\n    <>\n      <Row>\n        <Col lg=\"12\">\n          <Button\n            onClick={() => setShowDiscussion((value) => !value)}\n            aria-controls=\"example-collapse-text\"\n            aria-expanded={showDiscussion}\n            className={`w-100 ${\n              showDiscussion ? \"btn-warning\" : \"btn-success\"\n            }`}\n          >\n            {showDiscussion ? \"Hide discussion\" : \"Show discusssion\"}\n          </Button>\n        </Col>\n      </Row>\n\n      <Collapse className=\"collapse\" in={showDiscussion}>\n        <Row>\n          <Col lg=\"12\">\n            <Form.Group controlId=\"formGridState\">\n              <Form.Control placeholder=\"Search\" />\n            </Form.Group>\n          </Col>\n          <Col lg=\"12\">\n            <List scope=\"answers\" rows={answers} />\n          </Col>\n          <Col lg=\"12\" sm=\"12\" md=\"12\">\n            <Pagination>\n              {[...Array(no_pages)].map((_, idx) => (\n                <Pagination.Item\n                  key={idx + 1}\n                  active={currentPage === idx + 1}\n                  onClick={() => setCurrentPage(idx + 1)}\n                >\n                  {idx + 1}\n                </Pagination.Item>\n              ))}\n            </Pagination>\n          </Col>\n        </Row>\n      </Collapse>\n    </>\n  );\n}\n\nexport default Discussion;\n","import React, { useRef, useState } from \"react\";\nimport { InputGroup, Button } from \"react-bootstrap\";\nimport { AsyncTypeahead } from \"react-bootstrap-typeahead\";\n\nimport styles from \"./searchBar/searchBar.module.scss\";\nimport \"react-bootstrap-typeahead/css/Typeahead.css\";\nimport \"react-bootstrap-typeahead/css/Typeahead.bs5.css\";\n\nfunction SearchBar({ apiCall }) {\n  /* Mock search suggestions */\n  const fakeSuggestions = [\n    { label: \"duckduckgo\" },\n    { label: \"duckduck\" },\n    { label: \"duckduckgo browser\" },\n    { label: \"duckduckgo download\" },\n  ];\n\n  const [suggestions, setSuggestions] = useState([]);\n  const [value, setValue] = useState(\"\");\n\n  const onSearch = (inputText) => {\n    setValue(inputText);\n    if (inputText.length > 0) {\n      setSuggestions(fakeSuggestions);\n    } else {\n      setSuggestions([]);\n    }\n  };\n\n  const ref = useRef();\n\n  return (\n    <InputGroup>\n      <AsyncTypeahead\n        id=\"Search bar\"\n        placeholder=\"Search courses\"\n        isLoading={false}\n        searchText=\"\"\n        emptyLabel=\"\"\n        promptText=\"\"\n        options={suggestions}\n        filterBy={() => true}\n        renderMenuItemChildren={(option) => <span>{option.label}</span>}\n        ref={ref}\n        onInputChange={onSearch}\n        onSearch={() => {}}\n      />\n      {value.length > 0 && (\n        <Button\n          variant=\"link\"\n          onClick={() => {\n            ref.current.clear();\n            setValue(\"\");\n          }}\n          className={\n            \"btn-outline-primary border-left-0 border \" + styles.clearButton\n          }\n        >\n          <img\n            width=\"20\"\n            height=\"20\"\n            src={process.env.PUBLIC_URL + \"/icons/x.svg\"}\n            alt=\"Search\"\n          />\n        </Button>\n      )}\n      <Button\n        variant={value.length > 0 ? \"primary\" : \"link\"}\n        className=\"btn-outline-primary border-left-0 border\"\n      >\n        <img\n          width=\"20\"\n          height=\"20\"\n          src={process.env.PUBLIC_URL + \"/icons/SEARCH.svg\"}\n          alt=\"Search\"\n        />\n      </Button>\n    </InputGroup>\n  );\n}\n\nexport default SearchBar;\n","import { Alert, Button } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\n\nfunction DebugPaths() {\n  const style = { padding: \"5px\" };\n  return (\n    <Alert dismissible>\n      <b>Dev only: </b>\n      <Link style={style} to=\"/login\">\n        Login\n      </Link>\n      <Link style={style} to=\"/\">\n        Home\n      </Link>\n      <Link style={style} to=\"/profile\">\n        Profile\n      </Link>\n      <Link style={style} to=\"/courses\">\n        Courses\n      </Link>\n      <Link\n        style={style}\n        to=\"/course/ABCDEF\"\n        state={{ courseId: \"courseId\", title: \"Course Name\" }}\n      >\n        Course\n      </Link>\n      <Link style={style} to=\"/question/QUESTID\">\n        Question\n      </Link>\n      <Link style={style} to=\"/myquestions\">\n        MyQuestions\n      </Link>\n      <Link style={style} to=\"/discussion/QUESTID\">\n        Discussion\n      </Link>\n      <Link style={style} to=\"/startsimulation/\">\n        Simulation\n      </Link>\n      <Link style={style} to=\"/settings\">\n        UserSettings\n      </Link>\n      <Link style={style} to=\"/todel\">\n        Exam\n      </Link>\n    </Alert>\n  );\n}\n\nexport default DebugPaths;\n","import \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { useState, useEffect } from \"react\";\nimport { Container, Row, Col, Alert, Button } from \"react-bootstrap\";\nimport { Routes, Route, Navigate as Redirect, Link } from \"react-router-dom\";\nimport { NavigationBar, Footer, DebugPaths, TextInput } from \"./base/\";\nimport {\n  AddQuestion,\n  Answers,\n  CoursesList,\n  Exam,\n  Home,\n  LoginForm,\n  MyQuestions,\n  Profile,\n  Questions,\n  Replies,\n  UserSettings,\n  ListFullPage,\n  Bookmarks,\n  StartSimulation,\n  Simulation,\n  SimulationResult,\n  SimulationAccess\n} from \"./pages/\";\n// import parsedQuestions from \"./constants/parsed\";\n// import API from './api/API'\n\nfunction App() {\n  const [loggedIn, setLoggedIn] = useState(true); // TODO: reset to false, true used for debugging purposes\n  const [showHints, setShowHints] = useState(false);\n  const [showDiscussion, setShowDiscussion] = useState(false);\n  const [admin, setAdmin] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const [dark, setDark] = useState(false);\n\n  useEffect(() => {\n    if (!loggedIn) setMessage(\"\");\n  }, [loggedIn]);\n\n  // useEffect(() => {\n  // \tconst checkAuth = async () => {\n  // \t\ttry {\n  // \t\t\tconst user = await API.getUserInfo()\n  // \t\t\tsetLoggedIn(true)\n  // \t\t\tuser.admin ? setAdmin(true) : setAdmin(false)\n  // \t\t} catch (err) {\n  // \t\t\tconsole.error(err.error)\n  // \t\t}\n  // \t}\n  // \tcheckAuth()\n  // }, [])\n\n  // const doLogin = async credentials => {\n  // \ttry {\n  // \t\tconst username = await API.login(credentials)\n  // \t\tsetLoggedIn(true)\n  // \t\tsetMessage({ msg: `Welcome, ${username}!`, type: 'success' })\n  // \t\tconst user = await API.getUserInfo()\n  // \t\tuser.admin ? setAdmin(true) : setAdmin(false)\n  // \t} catch (err) {\n  // \t\tsetMessage({ msg: err, type: 'danger' })\n  // \t}\n  // }\n\n  const doLogout = async () => {\n    // await API.logout()\n    setLoggedIn(false);\n    setAdmin(false);\n  };\n\n  return (\n    <Container fluid>\n      <Row>\n        <Col className=\"px-0\">\n          <NavigationBar\n            dark={dark}\n            setdark={setDark}\n            logged={loggedIn}\n            setlogged={setLoggedIn}\n            showhints={showHints}\n            setshowhints={setShowHints}\n            showdiscussion={showDiscussion}\n            setshowdiscussion={setShowDiscussion}\n            logout={doLogout}\n          />\n        </Col>\n      </Row>\n      <Row className=\"my-4\">\n        <Col xs={6} className=\"mx-auto\">\n          {message && (\n            <Alert\n              variant={message.type}\n              onClose={() => setMessage(\"\")}\n              dismissible={!message.noclose}\n            >\n              {message.msg}\n            </Alert>\n          )}\n        </Col>\n      </Row>\n      <DebugPaths />\n      <Row className=\"my-4\">\n        <Col xs={10} md={8} className=\"mx-auto\">\n          {/*\n\t\t\t\t\t<Exam question={parsedQuestions.quiz.question} />\n\t\t\t\t\t*/}\n          {loggedIn ? (\n            <Routes>\n              <Route path=\"/*\" element={<Redirect to=\"/\" />} />\n              <Route path=\"/\" element={<Home />} />\n              <Route path=\"/profile\" element={<Profile />} />\n              <Route path=\"/settings\" element={<UserSettings />} />\n              <Route path=\"/courses\" element={<CoursesList />} />\n              <Route path=\"/course/:courseid\" element={<Questions />} />\n              <Route\n                path=\"/question/:questionid\"\n                element={\n                  <Answers\n                    showhints={showHints}\n                    setshowhints={setShowHints}\n                    showdiscussion={showDiscussion}\n                    setshowdiscussion={setShowDiscussion}\n                  />\n                }\n              />\n              <Route path=\"/discussion/:questionid\" element={<Replies />} />\n              <Route\n                path=\"/simulation/:simulationType\"\n                element={<Simulation />}\n              />\n              <Route path=\"/addquestion\" element={<AddQuestion />} />\n              <Route path=\"/todel\" element={<Exam />} />\n              <Route\n                path=\"/listfullpage/:listName\"\n                element={<ListFullPage />}\n              />\n              <Route path=\"/bookmarks\" element={<Bookmarks />} />\n              <Route\n                path=\"/startsimulation/:courseName\"\n                element={<StartSimulation />}\n              />\n              <Route\n                path=\"/simulationresult/:courseName\"\n                element={<SimulationResult />}\n              />\n              <Route\n                  path=\"/simulationview\"\n                  element={<SimulationAccess/>}\n              />\n            </Routes>\n          ) : (\n            <Routes>\n              <Route path=\"/*\" element={<Redirect to=\"/login\" />} />\n              <Route\n                path=\"/login\"\n                element={<LoginForm login={() => setLoggedIn(true)} />}\n              />\n            </Routes>\n          )}\n        </Col>\n      </Row>\n      <Row>\n        <Footer />\n      </Row>\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nlet basename = \"\";\nconst { PUBLIC_URL } = process.env;\n\nif (PUBLIC_URL) {\n  const splitArray = PUBLIC_URL.split(\"://\")[1].split(\"/\");\n  basename =\n    (splitArray.length > 1 && `/${splitArray[splitArray.length - 1]}`) || \"\";\n}\n\nReactDOM.render(\n  // <React.StrictMode>\n  <Router basename={basename}>\n    <App />\n  </Router>,\n  // </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}