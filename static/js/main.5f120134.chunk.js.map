{"version":3,"sources":["icons.js","base/NavigationBar.js","img/logoSkeeellLight.svg","img/logoSkeeelledLight.svg","img/logoSkeeelledDark.svg","img/logoWeeeOpen.svg","img/logoSkeeellDark.svg","img/logoSkeeelledLightFooter.svg","img/logoSkeeelledDarkFooter.svg","base/Footer.js","base/List.js","base/MarkdownPreview.js","base/QuestionPreview.js","pages/AddQuestion.js","pages/Answers.js","base/Suggestion.js","pages/CoursesList.js","pages/Exam.js","pages/Home.js","pages/LoginForm.js","pages/Profile.js","pages/Questions.js","pages/Replies.js","pages/UserSettings.js","pages/ListFullPage.js","pages/Bookmarks.js","pages/StartSimulation.js","pages/Simulation.js","pages/SimulationResult.js","pages/SimulationAccess.js","base/ListEntry.js","base/ListGroup.js","base/textInput/commands/insertTex.js","base/textInput/commands/saveImage.js","base/TextInput.js","base/Discussion.js","base/SearchBar.js","base/DebugPaths.js","App.js","reportWebVitals.js","index.js"],"names":["iconUser","xmlns","width","height","fill","className","viewBox","d","fillRule","iconLogout","stroke","strokeWidth","strokeLinecap","strokeLinejoin","iconAdmin","fakeQuestions","id","question","author","createdat","tags","excerpt","NavigationBar","props","useState","questions","Navbar","bg","dark","variant","to","Brand","Image","src","process","admin","Nav","Link","as","Collapse","NavDropdown","title","align","lg","Item","href","pathname","state","scope","rows","Divider","Form","Switch","label","defaultChecked","onChange","setdark","showhints","setshowhints","showdiscussion","setshowdiscussion","logged","onClick","logout","Footer","logoSkeeelledLightFooter","alt","logoWeeeOpen","logoSkeeellLight","HeaderColspan","ListDefault","rounded","toLowerCase","replace","colSpan","map","r","i","row","dotted","Table","striped","borderless","ListQuestions","ListAnswers","ListReplies","ListSuggestion","Container","Stack","gap","ListSimulationResult","areAllAccordionItemsOpen","setAreAllAccordionItemsOpen","activeKeys","setActiveKeys","useEffect","index","length","Row","Col","Button","value","Accordion","defaultActiveKey","activeKey","onSelect","eventKeys","alwaysOpen","accordionKey","ListSelection","FloatingLabel","Select","List","MarkdownPreview","React","memo","markdown","remarkPlugins","remarkGfm","remarkMath","rehypePlugins","rehypeKatex","rehypeHighlight","QuestionPreview","showAdvice","setShowAdvice","Card","Header","course_code","course_name","date","toLocaleDateString","year","month","day","Body","Title","text","advice","AddQuestion","courses","Label","size","Control","type","Check","fakeQuestion","Date","Answers","childProps","textArea","placeholder","Suggestion","fluid","PaginationRow","active","setActive","items","num","push","Pagination","First","Last","CoursesList","code","course","cfu","professor","Exam","body","Home","tests","lists","cols","tiled","LoginForm","username","setUsername","password","setPassword","errorMessage","setErrorMessage","Modal","Dialog","Alert","Group","controlId","ev","target","event","preventDefault","credentials","valid","checkPassword","login","Profile","xs","Questions","suggestions","suggestionType","isDesktop","query","matches","setMatches","media","window","matchMedia","listener","addEventListener","removeEventListener","useMediaQuery","locationState","useLocation","courseId","sm","md","Answer","ans","answer","Replies","reply","replies","UserSettings","fake","ListFullPage","location","Bookmarks","StartSimulation","isMulti","setIsMulti","numQuestions","setNumQuestions","penaltyScore","setPenaltyScore","maxScore","setMaxScore","duration","setDuration","userInput","setUserInput","maxNumOfQuestion","InputGroup","Text","FormControl","e","Number","isNaN","penalty","max","Duration","h","Math","floor","parseInt","m","s","timeIn","setTimeIn","myInterval","setInterval","time","updateTime","clearInterval","toString","padStart","FinishModal","show","setShow","timeRecord","setTimeRecord","pointPerCorrectAns","timeElapsed","onHide","closeButton","Simulation","simulationRandomQuizType","pageNum","setPageNum","randomizer","random","quizType","setQuizType","numPage","SimulationResult","numCorrect","numPenalty","numNotGiven","numQuiz","pointPerWrong","pointPerCorrect","mockCorrectAns","quizNum","score","isCorrect","mockUserAns","randomAns","examDuration","split","n","useAns","left","tot","timeUsedStr","abs","bordered","hover","SimulationAccess","enrolled","coursesEnrolled","simulationResult","courseSelected","setCourseSelected","courseSelectedTitle","setCourseSelectedTitle","DropdownButton","Dropdown","ListGroup","varient","ListEntryDefault","cell","ListEntryCourses","ListEntryQuestions","t","ListEntryAnswers","rowspan","like","dislike","ListEntryReplies","ListEntryTest","a","b","c","ListEntrySuggestion","ListEntrySimulationResult","eventKey","ListEntrySelection","key","ListEntry","filter","useless","slice","l","j","Array","keys","insertTex","name","icon","buttonProps","execute","state2","textApi","initialState","newSelectionRange","MarkdownUtil","selectWord","selection","state1","setSelectionRange","s1","selectedText","substring","replaceSelection","start","end","saveImage","context","l18n","Error","pasteOptions","multiple","accept","isPasteEvent","dataTransferToArray","clipboardData","isDragEvent","dataTransfer","fileListToArray","files","filteredItems","filterItems","blob","alert","getState","breaksBeforeCount","getBreaksNeededForEmptyLineBefore","breaksBefore","join","placeHolder","uploadingImage","readFileAsync","blobContents","savingImage","next","imageUrl","newState","realImageMarkdown","selectionDelta","file","Promise","resolve","reject","reader","FileReader","onload","result","onerror","readAsDataURL","acceptedTypes","fileExtensions","Set","test","mimeTypes","anyTypes","f","has","item","kind","getAsFile","list","undefined","entryFiles","fullName","shortName","originalContent","content","TextInput","selectedTab","onTabChange","pythonQuestion","val","setVal","selTab","setSelTab","base64Imgs","setBase64Imgs","editorHeight","setEditorHeight","uploadImage","data","filename","mime","b64","buffer","Buffer","Jimp","read","image","getWidth","getHeight","scaleToFit","getBufferAsync","pop","processedBuffer","processedData","prev","generatePreviewMarkdown","Object","re","RegExp","fn","setTimeout","replaceAll","match","loadingPreview","commands","toolbarCommands","getDefaultToolbarCommands","generateMarkdownPreview","previewMarkdown","paste","command","outputHeight","onCopy","newText","endsWith","exec","substr","lastIndex","console","log","projectFiles","backgroundColor","onFullScreen","fs","fakeAnswers","Discussion","showDiscussion","setShowDiscussion","answers","currentPage","setCurrentPage","in","_","idx","SearchBar","apiCall","fakeSuggestions","setSuggestions","setValue","ref","useRef","isLoading","searchText","emptyLabel","promptText","options","filterBy","renderMenuItemChildren","option","onInputChange","inputText","onSearch","current","clear","styles","clearButton","DebugPaths","style","padding","dismissible","App","loggedIn","setLoggedIn","showHints","setShowHints","setAdmin","message","setMessage","setDark","doLogout","setlogged","onClose","noclose","msg","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","basename","PUBLIC_URL","splitArray","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5f120134.chunk.js","sourcesContent":["const iconUser = (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"24\"\n    height=\"24\"\n    fill=\"currentColor\"\n    className=\"bi bi-person-circle\"\n    viewBox=\"0 0 16 16\"\n  >\n    <path d=\"M11 6a3 3 0 1 1-6 0 3 3 0 0 1 6 0z\" />\n    <path\n      fillRule=\"evenodd\"\n      d=\"M0 8a8 8 0 1 1 16 0A8 8 0 0 1 0 8zm8-7a7 7 0 0 0-5.468 11.37C3.242 11.226 4.805 10 8 10s4.757 1.225 5.468 2.37A7 7 0 0 0 8 1z\"\n    />\n  </svg>\n);\n\nconst iconLogo = (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"24\"\n    height=\"20\"\n    fill=\"currentColor\"\n    className=\"bi bi-book\"\n    viewBox=\"0 1 16 16\"\n  >\n    <path d=\"M1 2.828c.885-.37 2.154-.769 3.388-.893 1.33-.134 2.458.063 3.112.752v9.746c-.935-.53-2.12-.603-3.213-.493-1.18.12-2.37.461-3.287.811V2.828zm7.5-.141c.654-.689 1.782-.886 3.112-.752 1.234.124 2.503.523 3.388.893v9.923c-.918-.35-2.107-.692-3.287-.81-1.094-.111-2.278-.039-3.213.492V2.687zM8 1.783C7.015.936 5.587.81 4.287.94c-1.514.153-3.042.672-3.994 1.105A.5.5 0 0 0 0 2.5v11a.5.5 0 0 0 .707.455c.882-.4 2.303-.881 3.68-1.02 1.409-.142 2.59.087 3.223.877a.5.5 0 0 0 .78 0c.633-.79 1.814-1.019 3.222-.877 1.378.139 2.8.62 3.681 1.02A.5.5 0 0 0 16 13.5v-11a.5.5 0 0 0-.293-.455c-.952-.433-2.48-.952-3.994-1.105C10.413.809 8.985.936 8 1.783z\" />\n  </svg>\n);\n\nconst iconLogout = (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"24\"\n    height=\"24\"\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    stroke=\"currentColor\"\n    strokeWidth=\"2\"\n    strokeLinecap=\"round\"\n    strokeLinejoin=\"round\"\n  >\n    <path d=\"M10 3H6a2 2 0 0 0-2 2v14c0 1.1.9 2 2 2h4M16 17l5-5-5-5M19.8 12H9\" />\n  </svg>\n);\n\nconst iconAdmin = (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"16\"\n    height=\"24\"\n    fill=\"currentColor\"\n    className=\"bi bi-gear-fill\"\n    viewBox=\"0 2 16 16\"\n  >\n    <path d=\"M9.405 1.05c-.413-1.4-2.397-1.4-2.81 0l-.1.34a1.464 1.464 0 0 1-2.105.872l-.31-.17c-1.283-.698-2.686.705-1.987 1.987l.169.311c.446.82.023 1.841-.872 2.105l-.34.1c-1.4.413-1.4 2.397 0 2.81l.34.1a1.464 1.464 0 0 1 .872 2.105l-.17.31c-.698 1.283.705 2.686 1.987 1.987l.311-.169a1.464 1.464 0 0 1 2.105.872l.1.34c.413 1.4 2.397 1.4 2.81 0l.1-.34a1.464 1.464 0 0 1 2.105-.872l.31.17c1.283.698 2.686-.705 1.987-1.987l-.169-.311a1.464 1.464 0 0 1 .872-2.105l.34-.1c1.4-.413 1.4-2.397 0-2.81l-.34-.1a1.464 1.464 0 0 1-.872-2.105l.17-.31c.698-1.283-.705-2.686-1.987-1.987l-.311.169a1.464 1.464 0 0 1-2.105-.872l-.1-.34zM8 10.93a2.929 2.929 0 1 1 0-5.86 2.929 2.929 0 0 1 0 5.858z\" />\n  </svg>\n);\n\nconst iconMeeting = (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"16\"\n    height=\"16\"\n    viewBox=\"0 4 28 24\"\n    fill=\"none\"\n    stroke=\"#ffffff\"\n    strokeWidth=\"2\"\n    strokeLinecap=\"round\"\n    strokeLinejoin=\"round\"\n  >\n    <path d=\"M20 14.66V20a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h5.34\"></path>\n    <polygon points=\"18 2 22 6 12 16 8 16 8 12 18 2\"></polygon>\n  </svg>\n);\n\nconst iconAdd = (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"20\"\n    height=\"20\"\n    fill=\"currentColor\"\n    className=\"bi bi-plus-circle-fill\"\n    viewBox=\"0 0 16 18\"\n  >\n    <path d=\"M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zM8.5 4.5a.5.5 0 0 0-1 0v3h-3a.5.5 0 0 0 0 1h3v3a.5.5 0 0 0 1 0v-3h3a.5.5 0 0 0 0-1h-3v-3z\" />\n  </svg>\n);\n\nconst iconDelete = (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"24\"\n    height=\"24\"\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    stroke=\"#ffffff\"\n    strokeWidth=\"2\"\n    strokeLinecap=\"round\"\n    strokeLinejoin=\"round\"\n  >\n    <polyline points=\"3 6 5 6 21 6\"></polyline>\n    <path d=\"M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2\"></path>\n    <line x1=\"10\" y1=\"11\" x2=\"10\" y2=\"17\"></line>\n    <line x1=\"14\" y1=\"11\" x2=\"14\" y2=\"17\"></line>\n  </svg>\n);\n\nexport {\n  iconUser,\n  iconLogo,\n  iconLogout,\n  iconAdmin,\n  iconMeeting,\n  iconAdd,\n  iconDelete,\n};\n","import {\n  Navbar,\n  Nav,\n  NavDropdown,\n  Image,\n  Form,\n  OverlayTrigger,\n  Popover,\n} from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { iconUser, iconLogout, iconAdmin } from \"../icons.js\";\nimport \"./NavigationBar.css\";\nimport { useState } from \"react\";\n\nconst fakeQuestions = [\n  {\n    id: 1,\n    question: \"What is a vector?\",\n    author: \"Donato\",\n    createdat: \"15:20 12/01/2021\",\n    tags: [\"vectors\"],\n    excerpt: \"Cras justo odio...\",\n  },\n  {\n    id: 2,\n    question: \"Who is Maxwell?\",\n    author: \"Jim\",\n    createdat: \"17:30 13/02/2021\",\n    tags: [\"physics\"],\n    excerpt: \"Cras justo odio...\",\n  },\n  {\n    id: 3,\n    question: \"How many meters per second?\",\n    author: \"Derek\",\n    createdat: \"19:40 14/03/2021\",\n    tags: [\"physics\", \"kinematic\"],\n    excerpt: \"Cras justo odio...\",\n  },\n];\n\nfunction NavigationBar(props) {\n  const [questions, setQuestions] = useState(fakeQuestions /*[]*/);\n\n  return (\n    <Navbar\n      id={\"navbar\"}\n      bg={props.dark ? \"dark\" : \"light\"}\n      variant={props.dark ? \"dark\" : \"light\"}\n    >\n      <Link to={\"/\"}>\n        <Navbar.Brand>\n          <Image\n            id={\"navbar-logo-skeeelled\"}\n            src={\n              props.dark\n                ? process.env.PUBLIC_URL + \"/img/logoSkeeelledDark.svg\"\n                : process.env.PUBLIC_URL + \"/img/logoSkeeelledLight.svg\"\n            }\n            className=\"logo\"\n          />\n        </Navbar.Brand>\n      </Link>\n\n      {props.admin ? (\n        <Link to=\"/admin/list\">\n          <Navbar.Brand>{iconAdmin} Admin panel </Navbar.Brand>\n        </Link>\n      ) : null}\n\n      <Nav.Link\n        as={Link}\n        className={props.dark ? \"home-link-dark\" : \"home-link\"}\n        to=\"/\"\n      >\n        Home\n      </Nav.Link>\n\n      <Nav.Link\n        as={Link}\n        className={props.dark ? \"course-link-dark\" : \"course-link\"}\n        to=\"/courses\"\n      >\n        Courses\n      </Nav.Link>\n\n      <Nav.Link\n        as={Link}\n        className={props.dark ? \"simulation-link-dark\" : \"simulation-link\"}\n        to=\"/simulationview\"\n      >\n        Simulation\n      </Nav.Link>\n\n      <Nav.Link\n        as={Link}\n        className={props.dark ? \"add-question-link-dark\" : \"add-question-link\"}\n        to=\"/addquestion\"\n      >\n        Add question\n      </Nav.Link>\n\n      <Nav id={\"user-dropdown\"}>\n        <Navbar.Collapse className=\"mr-4 mt-0\">\n          <NavDropdown\n            id=\"dropdown-menu-align-responsive-2\"\n            title={iconUser}\n            align={{ lg: \"end\" }}\n          >\n            <Link to=\"/profile\" className=\"dropdown-link\">\n              <NavDropdown.Item href=\"#action/3.1\">Profile</NavDropdown.Item>\n            </Link>\n            <Link\n              className=\"dropdown-link\"\n              to={{ pathname: \"/bookmarks\" }}\n              state={{\n                scope: \"questions\",\n                title: \"Bookmarked Questions\",\n                rows: questions,\n              }}\n            >\n              <NavDropdown.Item href=\"#action/3.2\">Bookmarks</NavDropdown.Item>\n            </Link>\n            <Link to=\"/settings\" className=\"dropdown-link\">\n              <NavDropdown.Item href=\"#action/3.3\">Settings</NavDropdown.Item>\n            </Link>\n            <NavDropdown.Divider />\n            <div className=\"dropdown-item\">\n              <Form.Switch\n                label=\"Dark\"\n                id=\"custom-switch-dark\"\n                defaultChecked={props.dark}\n                onChange={() => props.setdark(!props.dark)}\n              />\n            </div>\n            <div className=\"dropdown-item\">\n              <Form.Switch\n                label=\"Show hints\"\n                id=\"custom-switch-hint\"\n                defaultChecked={props.showhints}\n                onChange={() => props.setshowhints(!props.showhints)}\n              />\n            </div>\n            <div className=\"dropdown-item\">\n              <Form.Switch\n                label=\"Show discussion\"\n                id=\"custom-switch-disc\"\n                defaultChecked={props.showdiscussion}\n                onChange={() => props.setshowdiscussion(!props.showdiscussion)}\n              />\n            </div>\n            {props.logged && (\n              <>\n                <NavDropdown.Divider />\n                <NavDropdown.Item onClick={props.logout}>\n                  Logout {iconLogout}\n                </NavDropdown.Item>\n              </>\n            )}\n          </NavDropdown>\n        </Navbar.Collapse>\n      </Nav>\n\n      {/* <Form.Switch label=\"Check this switch\" type=\"switch\" id=\"custom-switch\"/> */}\n\n      {/* <OverlayTrigger\n\t\t\t\ttrigger=\"click\"\n\t\t\t\tkey=\"bottom\"\n\t\t\t\tplacement=\"bottom\"\n\t\t\t\toverlay={\n\t\t\t\t\t<Popover id=\"popover-positioned-bottom\">\n\t\t\t\t\t<Popover.Header as=\"h3\">Popover bottom</Popover.Header>\n\t\t\t\t\t<Popover.Body>\n\t\t\t\t\t\t<strong>Holy guacamole!</strong> Check this info.\n\t\t\t\t\t</Popover.Body>\n\t\t\t\t\t</Popover>\n\t\t\t\t}\n\t\t\t\t>\n\t\t\t\t<Button variant=\"secondary\">Popover on bottom</Button>\n\t\t\t\t</OverlayTrigger>\n\t\t\t*/}\n    </Navbar>\n  );\n}\n\nexport default NavigationBar;\n","export default __webpack_public_path__ + \"static/media/logoSkeeellLight.196ac81d.svg\";","export default __webpack_public_path__ + \"static/media/logoSkeeelledLight.89a46839.svg\";","export default __webpack_public_path__ + \"static/media/logoSkeeelledDark.8ee41200.svg\";","export default __webpack_public_path__ + \"static/media/logoWeeeOpen.a7c8f3ee.svg\";","export default __webpack_public_path__ + \"static/media/logoSkeeellDark.aa3ae18b.svg\";","export default __webpack_public_path__ + \"static/media/logoSkeeelledLightFooter.79648b4a.svg\";","export default __webpack_public_path__ + \"static/media/logoSkeeelledDarkFooter.e5149d82.svg\";","import { Image } from \"react-bootstrap\";\nimport {\n  logoSkeeelledLight,\n  logoSkeeellLight,\n  logoSkeeelledDark,\n  logoSkeeellDark,\n  logoWeeeOpen,\n} from \"../img/\";\nimport {\n  logoSkeeelledLightFooter,\n  logoSkeeellLightFooter,\n  logoSkeeelledDarkFooter,\n  logoSkeeellDarkFooter,\n} from \"../img/\";\nimport \"./Footer.css\";\n\nfunction Footer() {\n  return (\n    <div id={\"footer\"} className=\"mx-auto\">\n      <h5 id={\"skeeelled\"} className=\"mx-auto\">\n        <a\n          id={\"skeeelled-logo-link\"}\n          href={\"https://github.com/weee-open/skeeelled\"}\n        >\n          <Image\n            id={\"skeeelled-logo\"}\n            src={logoSkeeelledLightFooter}\n            alt={\"skeeelled\"}\n          />\n        </a>\n        is a tool realized by\n        <a href={\"https://weeeopen.polito.it\"}>\n          <Image id={\"weee-open-logo\"} src={logoWeeeOpen} alt={\"WEEE Open\"} />\n        </a>\n      </h5>\n      <h5 id={\"skeeell\"} className=\"mx-auto\">\n        See more about\n        <a href={\"https://weeeopen.polito.it/skeeell\"}>\n          <Image id={\"skeeell-logo\"} src={logoSkeeellLight} alt={\"skeeell\"} />\n        </a>\n      </h5>\n    </div>\n  );\n}\n\nexport default Footer;\n","import {\n  Accordion,\n  Col,\n  Container,\n  Row,\n  Table,\n  Form,\n  FloatingLabel,\n  Button,\n  Image, Stack,\n} from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { ListEntry, SearchBar } from \"./\";\n// import \"./List.css\";\nimport \"./stylesheet/List.css\"; // scss file access\nimport { useEffect, useState } from \"react\";\n\nfunction HeaderColspan(scope) {\n  switch (scope) {\n    case \"courses\":\n      return \"4\";\n    case \"questions\":\n      return \"4\";\n    default:\n      return \"10\";\n  }\n}\n\nfunction ListDefault({ props }) {\n  return (\n    <>\n      {props.rounded ? (\n        <div\n          className={\n            \"default-table-\" + props.title.toLowerCase().replace(/\\s/g, \"-\")\n          }\n        >\n          <table className=\"list roundedList\">\n            <thead>\n              <tr>\n                <th className=\"listTitle\" colSpan={HeaderColspan(props.scope)}>\n                  {props.title}\n                </th>\n              </tr>\n            </thead>\n            <tbody className=\"list-body\">\n              {props.rows.map((r, i) => (\n                <ListEntry\n                  key={i}\n                  row={r}\n                  scope={props.scope}\n                  dotted={props.dotted}\n                />\n              ))}\n            </tbody>\n          </table>\n        </div>\n      ) : (\n        <div className={\"default-table-\" + props.title.toLowerCase()}>\n          <Table striped borderless className=\"list\">\n            <thead className=\"listTitle\">\n              <tr>\n                <th colSpan={HeaderColspan(props.scope)}>{props.title}</th>\n              </tr>\n            </thead>\n            <tbody>\n              {props.rows.map((r, i) => (\n                <ListEntry key={i} scope={props.scope} row={r} />\n              ))}\n            </tbody>\n          </Table>\n        </div>\n      )}\n    </>\n  );\n}\n\nfunction ListQuestions({ props }) {\n  return (\n    <>\n      <h3 className=\"listQuestionsTitle\">{props.title}</h3>\n      <SearchBar/>\n      {props.rows.map((r, i) => (\n        <ListEntry key={i} scope={props.scope} row={r} />\n      ))}\n    </>\n  );\n}\n\nfunction ListAnswers({ props }) {\n  return (\n    <Table borderless className=\"list listAnswers\">\n      <tbody>\n        {props.rows.map((r, i) => (\n          <ListEntry key={i} scope={props.scope} row={r} />\n        ))}\n      </tbody>\n    </Table>\n  );\n}\n\nfunction ListReplies({ props }) {\n  return (\n    <>\n      <h4>{props.title}</h4>\n      <hr />\n      {props.rows.map((r) => (\n        <ListEntry scope={props.scope} row={r} />\n      ))}\n    </>\n  );\n}\n\nfunction ListSuggestion({ props }) {\n  return (\n    <>\n      <Container>\n        <h3 className=\"list-suggestion-title\">{props.title}</h3>\n        <div className=\"listSuggestion-questions\">\n          <Stack gap={3}>\n            {props.rows.map((r, i) => (\n                <ListEntry key={i} scope={props.scope} row={r} />\n            ))}\n          </Stack>\n        </div>\n      </Container>\n    </>\n  );\n}\n\nfunction ListSimulationResult({ props }) {\n  const [areAllAccordionItemsOpen, setAreAllAccordionItemsOpen] =\n    useState(false);\n  const [activeKeys, setActiveKeys] = useState([]);\n\n  // when the boolean changes, either add all available activeKeys or remove them all\n  useEffect(() => {\n    if (areAllAccordionItemsOpen) {\n      setActiveKeys(props.rows.map((row, index) => index));\n    } else {\n      setActiveKeys([]);\n    }\n  }, [areAllAccordionItemsOpen, props.rows]);\n\n  // handle cases when user manually opens / closes all accordion items\n  useEffect(() => {\n    if (activeKeys.length === 0) {\n      setAreAllAccordionItemsOpen(false);\n    }\n    if (activeKeys.length === props.rows.length) {\n      setAreAllAccordionItemsOpen(true);\n    }\n  }, [activeKeys.length, props.rows.length]);\n\n  const updateActiveKeys = (eventKeys) => {\n    setActiveKeys(eventKeys);\n  };\n\n  return (\n    <>\n      <Container className=\"list-simulation-result\">\n        <Row>\n          <Col>\n            <h4 className=\"listSimulationResultTitle\">Your Answers</h4>\n          </Col>\n          <Col className=\"col-md-2\">\n            <Button\n              className=\"btn-outline-success-simulation-result\"\n              variant=\"outline-success\"\n              value=\"Show/Close\"\n              onClick={() => {\n                setAreAllAccordionItemsOpen(!areAllAccordionItemsOpen);\n              }}\n            >\n              {areAllAccordionItemsOpen ? \"Close All\" : \"Show All\"}\n            </Button>\n          </Col>\n        </Row>\n        <Row>\n          <Accordion\n            className=\"listSimulationResults\"\n            defaultActiveKey={[]}\n            activeKey={activeKeys}\n            onSelect={updateActiveKeys}\n            alwaysOpen\n          >\n            {props.rows.map((row, index) => (\n              <ListEntry\n                key={index}\n                scope={props.scope}\n                row={row}\n                accordionKey={index}\n              />\n            ))}\n          </Accordion>\n        </Row>\n      </Container>\n    </>\n  );\n}\n\nfunction ListSelection({ props }) {\n  return (\n    <FloatingLabel label={props.title}>\n      <Form.Select aria-label=\"Selection\" className=\"my-4\">\n        {props.rows.map((r, i) => (\n          <ListEntry scope={props.scope} row={r} key={i} />\n        ))}\n      </Form.Select>\n    </FloatingLabel>\n  );\n}\n\nfunction List(props) {\n  if (props.scope === \"questions\") return <ListQuestions props={props} />;\n  if (props.scope === \"answers\") return <ListAnswers props={props} />;\n  if (props.scope === \"replies\") return <ListReplies props={props} />;\n  if (props.scope === \"suggestion\") return <ListSuggestion props={props} />;\n  if (props.scope === \"simulationResult\")\n    return <ListSimulationResult props={props} />;\n  if (props.scope === \"selection\") return <ListSelection props={props} />;\n  return <ListDefault props={props} />;\n}\n\nexport default List;\n","import React from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport remarkGfm from \"remark-gfm\";\nimport remarkMath from \"remark-math\";\nimport rehypeKatex from \"rehype-katex\";\nimport rehypeHighlight from \"rehype-highlight\";\n\nimport \"./MarkdownPreview.css\";\n\nconst MarkdownPreview = React.memo(({ markdown }) => {\n  return (\n    <ReactMarkdown\n      remarkPlugins={[remarkGfm, remarkMath]}\n      rehypePlugins={[rehypeKatex, rehypeHighlight]}\n    >\n      {markdown}\n    </ReactMarkdown>\n  );\n});\n\nexport default MarkdownPreview;\n","import React, { useState } from \"react\";\nimport MarkdownPreview from \"./MarkdownPreview\";\nimport remarkGfm from \"remark-gfm\";\nimport remarkMath from \"remark-math\";\nimport rehypeKatex from \"rehype-katex\";\nimport rehypeHighlight from \"rehype-highlight\";\n\nimport { Card, Button } from \"react-bootstrap\";\n\nimport \"katex/dist/katex.min.css\";\nimport \"highlight.js/styles/github.css\";\n\nfunction QuestionPreview({ question }) {\n  const [showAdvice, setShowAdvice] = useState(false);\n\n  return (\n    <Card>\n      <Card.Header>\n        <div className=\"d-flex justify-content-between\">\n          <div className=\"p2\">{`${question.course_code} ${question.course_name}`}</div>\n          <div className=\"p2\">\n            <small>\n              Posted by {question.author} on&nbsp;\n              {question.date.toLocaleDateString(\"it-IT\", {\n                year: \"numeric\",\n                month: \"numeric\",\n                day: \"numeric\",\n              })}\n            </small>\n          </div>\n        </div>\n      </Card.Header>\n      <Card.Body>\n        <Card.Title>{question.title}</Card.Title>\n        <MarkdownPreview markdown={question.text} />\n        {question.advice && (\n          <Button\n            className=\"btn-sm mt-5\"\n            onClick={() => {\n              setShowAdvice(!showAdvice);\n            }}\n          >\n            {showAdvice ? \"Hide advice\" : \"Show advice\"}\n          </Button>\n        )}\n        {showAdvice && <h6 className=\"mt-3\">{question.advice}</h6>}\n      </Card.Body>\n    </Card>\n  );\n}\n\nexport default QuestionPreview;\n","import { useState } from \"react\";\nimport { Button, Form } from \"react-bootstrap\";\nimport { List, TextInput } from \"../base\";\nimport \"./AddQuestion.css\";\n\nfunction AddQuestion(props) {\n  const fakeCourses = [\"Analysis 1\", \"Physics 1\", \"Geometry\"];\n\n  const [courses, setCourses] = useState(fakeCourses /*[]*/);\n  return (\n    <>\n      <Form.Label size=\"lg\">Choose moodle XML file</Form.Label>\n      <Form.Control type=\"file\" size=\"lg\" />\n      <List scope=\"selection\" title=\"Select course\" rows={courses} />\n      <Form.Check type=\"checkbox\" label=\"This is an exam simulation\" />\n      {/* <TextInput/> */}\n      <Button type=\"submit\" className=\"submit-button my-4\" onClick={() => {}}>\n        Upload\n      </Button>\n    </>\n  );\n}\n\nexport default AddQuestion;\n","import { useState } from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { QuestionPreview, Discussion, TextInput } from \"../base\";\nimport \"./Answers.css\";\n\nconst fakeQuestion = {\n  course_code: \"01UROLM\",\n  course_name: \"Mathematical methods for Computer Science\",\n  title: \"Theory of distributions\",\n  author: \"Sahircan Sürmeli\",\n  tags: [\"distributions\", \"functionals\", \"test functions\"],\n  text: \"Find all distributions $T \\\\in D^\\\\prime$ such that $T^\\\\prime = \\\\delta_0 + \\\\delta_2 - 2\\\\delta^\\\\prime_1$.\",\n  date: new Date(\"April 23, 2022\"),\n  advice: \"You have to integrate something.\",\n};\n\nfunction Answers(props) {\n  const [question, setQuestion] = useState(fakeQuestion);\n\n  return (\n    <Container className=\"container\">\n      <Row lg={12} className=\"header\">\n        <Col>\n          <QuestionPreview question={question} />\n        </Col>\n      </Row>\n\n      <Row className=\"header\">\n        <Col>\n          <TextInput\n            childProps={{\n              textArea: {\n                placeholder: \"Leave a comment\",\n              },\n            }}\n          />\n        </Col>\n      </Row>\n\n      <Discussion showdiscussion={props.showdiscussion} />\n    </Container>\n  );\n}\n\nexport default Answers;\n","import List from \"./List\";\nimport { ListEntry } from \"./index\";\nimport { Card, Container, Row } from \"react-bootstrap\";\n// import \"./Suggestion.css\";\nimport \"./stylesheet/Suggestion.css\"\n\nfunction Suggestion(props) {\n  return (\n    <Container className=\"suggestion-container\" fluid>\n      <Card className=\"suggestion-card\">\n        <Card.Body>\n          <List scope={props.scope} title={props.title} rows={props.rows} />\n        </Card.Body>\n      </Card>\n    </Container>\n  );\n}\n\nexport default Suggestion;\n","import {\n  Row,\n  Col,\n  Card,\n  Pagination,\n  Form,\n  Button,\n  Stack,\n    Container\n} from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { useState /* , useEffect */ } from \"react\";\nimport { Recent, List, SearchBar } from \"../base/\";\nimport \"./stylesheet/CoursesList.css\"\nimport Suggestion from \"../base/Suggestion\";\n// import API from \"../api/API\";\n\nconst PaginationRow = () => {\n  let [active, setActive] = useState(1);\n  let items = [];\n  for (let num = 1; num <= 5; num++) {\n    items.push(\n      <Pagination.Item\n        key={num}\n        active={num === active}\n        onClick={() => {\n          setActive((active = num));\n        }}\n      >\n        {num}\n      </Pagination.Item>\n    );\n  }\n\n  return (\n    <Pagination>\n      <Pagination.First />\n      {items}\n      <Pagination.Last />\n    </Pagination>\n  );\n};\n\nfunction CoursesList() {\n  /** Mock courses and questions **/\n  const fakeCourses = [\n    { code: \"A0B1C2\", course: \"Analysis 1\", cfu: 10, professor: \"Mario Rossi\" },\n    {\n      code: \"D3E4F5\",\n      course: \"Physics 1\",\n      cfu: 10,\n      professor: \"Stefano Bianchi\",\n    },\n    {\n      code: \"G6H7I8\",\n      course: \"Geometry\",\n      cfu: 10,\n      professor: \"Giuseppe Verdi\",\n    },\n  ];\n\n  const fakeQuestions = [\n    {\n      id: 1,\n      question: \"What is a vector?\",\n      author: \"Donato\",\n      createdat: \"15:20 12/01/2021\",\n      tags: [\"vectors\"],\n      excerpt: \"Cras justo odio...\",\n    },\n    {\n      id: 2,\n      question: \"Who is Maxwell?\",\n      author: \"Jim\",\n      createdat: \"17:30 13/02/2021\",\n      tags: [\"physics\"],\n      excerpt: \"Cras justo odio...\",\n    },\n    {\n      id: 3,\n      question: \"How many meters per second?\",\n      author: \"Derek\",\n      createdat: \"19:40 14/03/2021\",\n      tags: [\"physics\", \"kinematic\"],\n      excerpt: \"Cras justo odio...\",\n    },\n  ];\n\n  const [courses, setCourses] = useState(fakeCourses /*[]*/);\n  const [myCourses, setMyCourses] = useState([]);\n  const [suggestions, setSuggestions] = useState(fakeQuestions /*[]*/);\n  const suggestionType = [\"Latest\", \"Hottest\"];\n  const coursesType = [\"My Courses\", \"All Courses\"];\n\n  /**Courses and questions related**/\n  /*\n\t// courses\n\tuseEffect(()=> {\n\t\tAPI.getCourses()\n\t\t\t.then(courses => setCourses(courses))\n\t\t\t.catch(err => console.log(err));\n\t}, []);\n\n\t// myCourses\n\tuseEffect(() => {\n\t\tAPI.getMyCourses()\n\t\t\t.then(myCourses => setMyCourses(myCourses))\n\t\t\t.catch(err => console.log(err));\n\t}, []);\n\t*/\n\n  // useEffect(() => {\n  //     const getCourses = async () => {\n  //         const courses = await API.getAllCourses();\n  //         setCourses(courses);\n  //     }\n  //     getCourses();\n  // },[]);\n\n  return (\n      <Container >\n        <Row lg={12} className=\"py-0 header\">\n          <h3 className=\"courses-title\">Courses</h3>\n        </Row>\n        <Row>\n          <SearchBar />\n        </Row>\n        <Row className=\"courses-body\">\n          {coursesType.map((type, i) => {\n            return (\n                <Link\n                    key={i}\n                    className=\"list-attributes\"\n                    to={{\n                      pathname:\n                          \"/listfullpage/\" + type.replace(/\\s/g, \"\").toLowerCase(),\n                    }}\n                    state={{ scope: \"courses\", title: type, rows: courses }}\n                >\n                  <List key={i} scope=\"courses\" title={type} rows={courses} rounded/>\n                </Link>\n            );\n          })}\n        </Row>\n        <PaginationRow />\n      </Container>\n  );\n}\n\nexport default CoursesList;\n","import parse from \"html-react-parser\";\nimport { Button, Container, Row, Col, Card, Form } from \"react-bootstrap\";\nimport \"./Exam.css\";\n\nconst MultipleChoice = ({ index, questiontext, answer, ...rest }) => {\n  console.log({ answer });\n  return (\n    <Form className=\"multipleChoice\">\n      <Form.Label>\n        {index})\n        {questiontext\n          ? questiontext[\"@format\"] === \"html\"\n            ? parse(questiontext.text)\n            : `${index}) ${questiontext.text}`\n          : null}\n      </Form.Label>\n      {answer &&\n        answer.map(\n          (ans, index) =>\n            ans && (\n              <div key={`inline-${ans}`} className=\"mb-3\">\n                <Form.Check\n                  inline\n                  label={ans[\"@format\"] === \"html\" ? parse(ans.text) : ans.text}\n                  name=\"group1\"\n                  type=\"checkbox\"\n                  id={`inline-${index}-1`}\n                />\n              </div>\n            )\n        )}\n    </Form>\n  );\n};\n\nconst Exam = ({ question }) => {\n  return (\n    <Container className=\"container\">\n      <Card body>\n        <Row lg={12} className=\"header\">\n          <Col>\n            <h3>Exam</h3>\n          </Col>\n        </Row>\n        {/* {question.map(\n\t\t\t\t\t(item, index) =>\n\t\t\t\t\t\t(item[\"@type\"] = \"multichoice\" && (\n\t\t\t\t\t\t\t<Row className='mt-10'>\n\t\t\t\t\t\t\t\t<Col lg='12'>\n\t\t\t\t\t\t\t\t\t<MultipleChoice {...{ index, ...item }} />\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t))\n\t\t\t\t)} */}\n      </Card>\n    </Container>\n  );\n};\n\nexport default Exam;\n","import { Row, Col, Card } from \"react-bootstrap\";\nimport { useState } from \"react\";\nimport \"./stylesheet/Home.css\";\nimport { ListGroup, SearchBar } from \"../base/\";\n\nfunction Home() {\n  const fake = [\n    {\n      scope: \"default\",\n      title: \"New questions in courses enrolled\",\n      rows: [\n        [\"Cras justo odio\"],\n        [\"Dapibus ac facilisis in\"],\n        [\"Morbi leo risus\"],\n        [\"Porta ac consectetur ac\"],\n        [\"Vestibulum at eros\"],\n      ],\n    },\n    {\n      scope: \"default\",\n      title: \"Replies\",\n      rows: [\n        [\"Cras justo odio\"],\n        [\"Dapibus ac facilisis in\"],\n        [\"Morbi leo risus\"],\n        [\"Porta ac consectetur ac\"],\n        [\"Vestibulum at eros\"],\n      ],\n    },\n    {\n      scope: \"default\",\n      title: \"My questions\",\n      rows: [\n        [\"Cras justo odio\"],\n        [\"Dapibus ac facilisis in\"],\n        [\"Morbi leo risus\"],\n        [\"Porta ac consectetur ac\"],\n        [\"Vestibulum at eros\"],\n      ],\n    },\n    {\n      scope: \"default\",\n      title: \"My answers\",\n      rows: [\n        [\"Cras justo odio\"],\n        [\"Dapibus ac facilisis in\"],\n        [\"Morbi leo risus\"],\n        [\"Porta ac consectetur ac\"],\n        [\"Vestibulum at eros\"],\n      ],\n    },\n  ];\n\n  const [tests, setTests] = useState(fake);\n\n  return (\n    <Card body>\n      <Row lg={12} className=\"py-0 header\">\n        <Col>\n          <h3>Hi, Name Surname!</h3>\n        </Col>\n      </Row>\n      <div className=\"home-page-table\">\n        <ListGroup lists={tests} cols={2} tiled rounded dotted />\n      </div>\n    </Card>\n  );\n}\n\nexport default Home;\n","import { useState } from \"react\";\nimport { Modal, Form, Button, Alert } from \"react-bootstrap\";\n\nfunction LoginForm(props) {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  function checkPassword(password) {\n    if (password.length >= 6) return true;\n    return false;\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    setErrorMessage(\"\");\n    const credentials = { username, password };\n    let valid = true;\n    if (username === \"\" || !checkPassword(password)) valid = false;\n    if (valid) {\n      props.login(credentials);\n    } else {\n      setErrorMessage(\"Errors in the form\");\n    }\n  };\n\n  return (\n    <Modal.Dialog>\n      <Modal.Header>\n        <Modal.Title>Login</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        {errorMessage ? <Alert variant=\"danger\">{errorMessage}</Alert> : null}\n        <Form.Group controlId=\"username\">\n          <Form.Label>Email</Form.Label>\n          <Form.Control\n            type=\"email\"\n            value={username}\n            onChange={(ev) => setUsername(ev.target.value)}\n          />\n        </Form.Group>\n        <Form.Group controlId=\"password\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            value={password}\n            onChange={(ev) => setPassword(ev.target.value)}\n          />\n        </Form.Group>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button onClick={handleSubmit}>Login</Button>\n      </Modal.Footer>\n    </Modal.Dialog>\n  );\n}\n\nexport default LoginForm;\n","import { Row, Col, Card, Image } from \"react-bootstrap\";\nimport { useState } from \"react\";\n// import \"./Profile.css\";\nimport \"./stylesheet/Profile.css\"; // scss file access\nimport { ListGroup, SearchBar } from \"../base/\";\n\nfunction Profile() {\n  const fake = [\n    {\n      scope: \"default\",\n      title: \"My questions\",\n      rows: [\n        [\"Cras justo odio\"],\n        [\"Dapibus ac facilisis in\"],\n        [\"Morbi leo risus\"],\n        [\"Porta ac consectetur ac\"],\n        [\"Vestibulum at eros\"],\n      ],\n    },\n    {\n      scope: \"default\",\n      title: \"My answers\",\n      rows: [\n        [\"Cras justo odio\"],\n        [\"Dapibus ac facilisis in\"],\n        [\"Morbi leo risus\"],\n        [\"Porta ac consectetur ac\"],\n        [\"Vestibulum at eros\"],\n      ],\n    },\n    {\n      scope: \"default\",\n      title: \"My simulation results\",\n      rows: [\n        [\"aaa\", \"bbb\", \"ccc\"],\n        [\"aaa\", \"bbb\", \"ccc\"],\n        [\"aaa\", \"bbb\", \"ccc\"],\n      ],\n    },\n  ];\n\n  const [tests, setTests] = useState(fake);\n\n  return (\n    <Card body>\n      <Row lg={12} className=\"py-0 header\">\n        <Col xs={2}>\n          <Image\n            src={process.env.PUBLIC_URL + \"/icons/PERSON.svg\"}\n            className=\"user-profile-image\"\n          />\n        </Col>\n        <Col className=\"user-name-nickname\">\n          <h3 className=\"user-name-surname\">Name Surname</h3>\n          <h4 className=\"user-nickname\">@nickname</h4>\n        </Col>\n      </Row>\n      <div className=\"user-profile\">\n        <ListGroup lists={tests} cols={2} rounded dotted />\n      </div>\n    </Card>\n  );\n}\n\nexport default Profile;\n","import {\n  Button,\n  Container,\n  Row,\n  Col,\n  Pagination,\n  Card,\n  Image,\n  Stack,\n} from \"react-bootstrap\";\n\nimport { useEffect, useState } from \"react\";\n// import \"./Questions.css\";\nimport \"./stylesheet/Questions.css\"\nimport { List, Recent, SearchBar, Suggestion } from \"../base/\";\nimport { Link, useLocation } from \"react-router-dom\";\n\nfunction PaginationRow(props) {\n  let [active, setActive] = useState(1);\n  let items = [];\n  for (let num = 1; num <= 5; num++) {\n    items.push(\n      <Pagination.Item\n        key={num}\n        active={num === active}\n        onClick={() => {\n          setActive((active = num));\n        }}\n      >\n        {num}\n      </Pagination.Item>\n    );\n  }\n\n  return (\n    <Pagination>\n      <Pagination.First />\n      {items}\n      <Pagination.Last />\n    </Pagination>\n  );\n}\n\nconst Questions = () => {\n  const fakeQuestions = [\n    {\n      id: 1,\n      question: \"What is a vector?\",\n      author: \"Donato\",\n      createdat: \"15:20 12/01/2021\",\n      tags: [\"vectors\"],\n      excerpt: \"Cras justo odio...\",\n    },\n    {\n      id: 2,\n      question: \"Who is Maxwell?\",\n      author: \"Jim\",\n      createdat: \"17:30 13/02/2021\",\n      tags: [\"physics\"],\n      excerpt: \"Cras justo odio...\",\n    },\n    {\n      id: 3,\n      question: \"How many meters per second?\",\n      author: \"Derek\",\n      createdat: \"19:40 14/03/2021\",\n      tags: [\"physics\", \"kinematic\"],\n      excerpt: \"Cras justo odio...\",\n    },\n  ];\n\n  const [questions, setQuestions] = useState(fakeQuestions /*[]*/);\n  const [suggestions, setSuggestions] = useState(fakeQuestions /*[]*/);\n  const suggestionType = [\"Latest\", \"Hottest\"];\n\n  // hook for responsive react\n  const useMediaQuery = (query) => {\n    const [matches, setMatches] = useState(false);\n\n    useEffect(() => {\n      const media = window.matchMedia(query);\n      if (media.matches !== matches) {\n        setMatches(media.matches);\n      }\n      const listener = () => {\n        setMatches(media.matches);\n      };\n      window.addEventListener(\"resize\", listener);\n      return () => window.removeEventListener(\"resize\", listener);\n    }, [matches, query]);\n\n    return matches;\n  };\n\n  // TODO: also take a look at Bootstrap class infixes to detect the current breakpoint\n  // to see which approach is better -- https://getbootstrap.com/docs/5.1/layout/breakpoints/\n  const isDesktop = useMediaQuery(\"(min-width: 960px)\");\n\n  const locationState = useLocation().state;\n\n  return (\n    <>\n      <Container>\n        <Stack gap={4}>\n          {isDesktop ? (\n            <Row key={isDesktop}>\n              <Col>\n                <Container className=\"container\">\n                    <Row lg={12} className=\"header\">\n                      <Col>\n                        <div className=\"right-button\">\n\n                          <Button className=\"add-question-button\" onClick={() => {}}>\n                            {/*<Image*/}\n                            {/*    className=\"add-icon\"*/}\n                            {/*    src={*/}\n                            {/*      process.env.PUBLIC_URL + \"/icons/ADD_WHITE.svg\"*/}\n                            {/*    }*/}\n                            {/*    width=\"13px\"*/}\n                            {/*/>*/}\n                            {\" Enroll in course\"}\n                          </Button>\n\n                          <Link\n                              to={{\n                                pathname:\n                                    \"/startsimulation/\" + locationState.courseId,\n                              }}\n                              state={{\n                                courseId: locationState.courseId,\n                                title: locationState.title,\n                              }}\n                          >\n                            <Button className=\"start-simulation-button\">\n                              {/*<Image*/}\n                              {/*    className=\"add-icon\"*/}\n                              {/*    src={*/}\n                              {/*      process.env.PUBLIC_URL +*/}\n                              {/*      \"/icons/SIMULATION RESULTS_WHITE.svg\"*/}\n                              {/*    }*/}\n                              {/*    width=\"13px\"*/}\n                              {/*/>*/}\n                              {\" Start Simulation\"}\n                            </Button>\n                          </Link>\n\n                        </div>\n\n                        <List\n                          scope=\"questions\"\n                          title={locationState.title}\n                          rows={questions}\n                        />\n                      </Col>\n\n                      <Col className=\"pagination\" lg=\"12\" sm=\"12\" md=\"12\">\n                        <PaginationRow />\n                      </Col>\n                    </Row>\n                </Container>\n              </Col>\n              <Col className=\"d-sm-inline-block col-md-4\">\n                <Stack gap={4}>\n                  {suggestionType.map((type, i) => {\n                    return (\n                      <Row key={i}>\n                        <Suggestion\n                          scope={\"suggestion\"}\n                          title={type + \" Questions\"}\n                          rows={suggestions}\n                        />\n                      </Row>\n                    );\n                  })}\n                </Stack>\n              </Col>\n            </Row>\n          ) : (\n              // mobile configuration\n            <>\n              <Row>\n                <Container className=\"container\">\n                    <Row lg={12} className=\"header\">\n                      <Col>\n                        <div className=\"right-button\">\n\n                          <Button className=\"add-question-button\" onClick={() => {}}>\n                            {/*<Image*/}\n                            {/*    className=\"add-icon\"*/}\n                            {/*    src={*/}\n                            {/*      process.env.PUBLIC_URL + \"/icons/ADD_WHITE.svg\"*/}\n                            {/*    }*/}\n                            {/*    width=\"13px\"*/}\n                            {/*/>*/}\n                            {\" Enroll in course\"}\n                          </Button>\n\n                          <Link\n                              to={{\n                                pathname:\n                                    \"/startsimulation/\" + locationState.courseId,\n                              }}\n                              state={{\n                                courseId: locationState.courseId,\n                                title: locationState.title,\n                              }}\n                          >\n                            <Button className=\"start-simulation-button\">\n                              {/*<Image*/}\n                              {/*    className=\"add-icon\"*/}\n                              {/*    src={*/}\n                              {/*      process.env.PUBLIC_URL +*/}\n                              {/*      \"/icons/SIMULATION RESULTS_WHITE.svg\"*/}\n                              {/*    }*/}\n                              {/*    width=\"13px\"*/}\n                              {/*/>*/}\n                              {\" Start Simulation\"}\n                            </Button>\n                          </Link>\n\n                        </div>\n                        <List\n                          scope=\"questions\"\n                          title={locationState.title}\n                          rows={questions}\n                        />\n                      </Col>\n\n                      <Col className=\"pagination\" lg=\"12\" sm=\"12\" md=\"12\">\n                        <PaginationRow />\n                      </Col>\n                    </Row>\n                </Container>\n              </Row>\n              <Row>\n                <Stack gap={4}>\n                  {suggestionType.map((type, i) => {\n                    return (\n                      <Col key={i}>\n                        <Suggestion\n                          scope={\"suggestion\"}\n                          title={type + \" Questions\"}\n                          rows={suggestions}\n                        />\n                      </Col>\n                    );\n                  })}\n                </Stack>\n              </Row>\n            </>\n          )}\n        </Stack>\n      </Container>\n    </>\n  );\n};\n\nexport default Questions;\n","import { Row, Col, Card, Button } from \"react-bootstrap\";\nimport { useEffect, useState } from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { List, ListEntry, Recent, SearchBar, TextInput } from \"../base\";\nimport \"./Replies.css\";\n\nfunction Answer(props) {\n  return (\n    <div className=\"questionEntry\">\n      <Row>\n        <Col>\n          <h4>{props.ans.answer}</h4>\n        </Col>\n      </Row>\n      <Row>\n        <Col>from {props.ans.author}</Col>\n        <Col>Created at: {props.ans.createdat}</Col>\n      </Row>\n    </div>\n  );\n}\n\nfunction Replies() {\n  const answer = {\n    answer: \"Lorem ipsum dolor sit amet\",\n    author: \"Jim\",\n    createdat: \"10/10/1010\",\n  };\n  const fakeReplies = [\n    {\n      id: 1,\n      reply: \"I think it's correct\",\n      author: \"Donato\",\n      createdat: \"15:20 12/01/2021\",\n    },\n    {\n      id: 2,\n      reply: \"Maybe is wrong\",\n      author: \"Jim\",\n      createdat: \"17:30 13/02/2021\",\n    },\n    {\n      id: 3,\n      reply: \"idk\",\n      author: \"Derek\",\n      createdat: \"19:40 14/03/2021\",\n    },\n  ];\n\n  const [replies, setReplies] = useState(fakeReplies);\n\n  return (\n    <>\n      <Answer ans={answer} />\n      <List scope=\"replies\" rows={replies} />\n      <TextInput />\n      <Button className=\"reply-button my-2\">Reply</Button>\n    </>\n  );\n}\n\nexport default Replies;\n","import { Row, Col, Card, Image, Form, Button } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport \"./UserSettings.css\";\nimport { List } from \"../base/\";\n\nfunction UserSettings() {\n  const fake = [\n    [<Form.Check />, \"Analisys I\"],\n    [<Form.Check />, \"Physics I\"],\n    [<Form.Check />, \"Geometry\"],\n  ];\n  const [courses, setCourses] = useState(fake);\n\n  return (\n    <Card body>\n      <Row lg={12} className=\"py-0 header\">\n        <Col xs={2}>\n          <Image src={process.env.PUBLIC_URL + \"/icons/PERSON.svg\"} />\n        </Col>\n        <Col>\n          <h3>Name Surname</h3>\n          <h4>@Nickname</h4>\n          <Form.Control placeholder=\"Change nickname\" />\n          <Form.Check label=\"Public profile\" />\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <List rows={courses} title={\"Enrolled in\"} scope={\"default\"} />\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Link to=\"/courses\">\n            <Button>Add new course</Button>\n          </Link>\n          <Button className=\"saveButton\">Save</Button>\n        </Col>\n      </Row>\n    </Card>\n  );\n}\n\nexport default UserSettings;\n","import { List } from \"../base\";\nimport { Card, Container, Pagination } from \"react-bootstrap\";\nimport { useLocation } from \"react-router-dom\";\nimport { useState } from \"react\";\n\nfunction PaginationRow() {\n  let [active, setActive] = useState(1);\n  let items = [];\n  for (let num = 1; num <= 5; num++) {\n    items.push(\n      <Pagination.Item\n        key={num}\n        active={num === active}\n        onClick={() => {\n          setActive((active = num));\n        }}\n      >\n        {num}\n      </Pagination.Item>\n    );\n  }\n\n  return (\n    <Pagination>\n      <Pagination.First />\n      {items}\n      <Pagination.Last />\n    </Pagination>\n  );\n}\n\nexport default function ListFullPage() {\n  const location = useLocation();\n  return (\n    <>\n      <Container>\n        <Card body>\n          <h2>{location.state.title}</h2>\n          <List\n            scope={location.state.scope}\n            title={\"\"}\n            rows={location.state.rows}\n          />\n          {location.state.title === \"My courses\" ? <></> : <PaginationRow />}\n        </Card>\n      </Container>\n    </>\n  );\n}\n","import { Card, Container, Pagination } from \"react-bootstrap\";\nimport { List, SearchBar } from \"../base\";\nimport { useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nfunction PaginationRow() {\n  let [active, setActive] = useState(1);\n  let items = [];\n  for (let num = 1; num <= 5; num++) {\n    items.push(\n      <Pagination.Item\n        key={num}\n        active={num === active}\n        onClick={() => {\n          setActive((active = num));\n        }}\n      >\n        {num}\n      </Pagination.Item>\n    );\n  }\n\n  return (\n    <Pagination>\n      <Pagination.First />\n      {items}\n      <Pagination.Last />\n    </Pagination>\n  );\n}\n\nexport default function Bookmarks() {\n  const location = useLocation();\n  return (\n    <>\n      <Container>\n        <Card body>\n          <h2>{location.state.title}</h2>\n          <SearchBar />\n          <List\n            scope={location.state.scope}\n            title={\"\"}\n            rows={location.state.rows}\n          />\n          <PaginationRow />\n        </Card>\n      </Container>\n    </>\n  );\n}\n","import {\n  Card,\n  Container,\n  Form,\n  Row,\n  Col,\n  Button,\n  Stack,\n  FloatingLabel,\n  InputGroup,\n  FormControl,\n  Alert,\n} from \"react-bootstrap\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport \"./StartSimulation.css\";\n\nexport default function StartSimulation() {\n  const simulationTypes = [\"Random\", \"Exam\"];\n\n  const [isMulti, setIsMulti] = useState(false);\n\n  const [numQuestions, setNumQuestions] = useState(10);\n  const [penaltyScore, setPenaltyScore] = useState(-0.5);\n  const [maxScore, setMaxScore] = useState(30);\n  const [duration, setDuration] = useState(60); /* unit: minute */\n  const [userInput, setUserInput] = useState(1);\n  const totNumOfQuestion = undefined;\n  const [maxNumOfQuestion, setMaxNumOfQuestion] = useState(\n    totNumOfQuestion ? totNumOfQuestion : 100\n  );\n\n  const locationState = useLocation().state;\n\n  return (\n    <>\n      <Container>\n        <Card className=\"simulation-card\">\n          <Card.Body>\n            <Stack gap={4}>\n              <h3>Simulation Set Up</h3>\n              <Col>\n                <Stack gap={2}>\n                  <Row>\n                    <div key=\"checkbox-ratio\" className=\"mb-3\">\n                      <Form.Switch\n                        className=\"multiquiz-toggle\"\n                        type=\"switch\"\n                        label=\"Multiple Choice Questions Only (With Grade)\"\n                        onChange={() => setIsMulti(!isMulti)}\n                      />\n                    </div>\n                  </Row>\n                  {userInput || userInput === 0 ? (\n                    maxNumOfQuestion > 100 ? (\n                      <Alert variant=\"danger\">\n                        Maximum Number of question: {maxNumOfQuestion}\n                      </Alert>\n                    ) : numQuestions <= 0 || maxScore <= 0 || duration <= 0 ? (\n                      <Alert variant=\"danger\">\n                        Number of Question, Maximum Score, and Duration Must Not\n                        Be Zero\n                      </Alert>\n                    ) : (\n                      <></>\n                    )\n                  ) : (\n                    <Alert variant=\"danger\">\n                      Only Number Inputs Are Allowed\n                    </Alert>\n                  )}\n                  <Stack gap={4}>\n                    {isMulti ? (\n                      <Row key={isMulti}>\n                        <Card>\n                          <Card.Body>\n                            <Stack gap={2}>\n                              <h6>\n                                ( Number of Question, Maximum Score, and\n                                Duration Must Not Be Zero )\n                              </h6>\n                              <InputGroup key={isMulti}>\n                                <InputGroup.Text>\n                                  Number of Questions\n                                </InputGroup.Text>\n                                <FormControl\n                                  aria-label={numQuestions}\n                                  placeholder={numQuestions}\n                                  onChange={(e) => {\n                                    setUserInput(Number(e.target.value));\n                                    setNumQuestions(Number(e.target.value));\n                                  }}\n                                />\n                              </InputGroup>\n                              <InputGroup>\n                                <InputGroup.Text>Penalty </InputGroup.Text>\n                                <FormControl\n                                  aria-label={penaltyScore}\n                                  placeholder={penaltyScore}\n                                  onChange={(e) => {\n                                    setUserInput(Number(e.target.value));\n                                    setPenaltyScore(Number(e.target.value));\n                                  }}\n                                />\n                              </InputGroup>\n                              <InputGroup>\n                                <InputGroup.Text>Maximum Score</InputGroup.Text>\n                                <FormControl\n                                  aria-label={maxScore}\n                                  placeholder={maxScore}\n                                  onChange={(e) => {\n                                    setUserInput(Number(e.target.value));\n                                    setMaxScore(Number(e.target.value));\n                                  }}\n                                />\n                              </InputGroup>\n                              <InputGroup>\n                                <InputGroup.Text>\n                                  Duration (Minutes)\n                                </InputGroup.Text>\n                                <FormControl\n                                  aria-label={duration}\n                                  placeholder={duration}\n                                  onChange={(e) => {\n                                    setUserInput(Number(e.target.value));\n                                    setDuration(Number(e.target.value));\n                                  }}\n                                />\n                              </InputGroup>\n                            </Stack>\n                          </Card.Body>\n                        </Card>\n                      </Row>\n                    ) : (\n                      <></>\n                    )}\n                    <Row className=\"bottom-group\">\n                      {numQuestions &&\n                      maxScore &&\n                      !isNaN(penaltyScore) &&\n                      duration &&\n                      numQuestions <= maxNumOfQuestion ? (\n                        simulationTypes.map((type, i) => {\n                          return (\n                            <Col key={i}>\n                              <Link\n                                key={i}\n                                to={{\n                                  pathname:\n                                    \"/simulation/\" + locationState.courseId,\n                                }}\n                                state={{\n                                  type: type,\n                                  title: locationState.title,\n                                  courseId: locationState.courseId,\n                                  num: numQuestions,\n                                  penalty: penaltyScore,\n                                  max: maxScore,\n                                  isMulti: isMulti,\n                                  duration: duration,\n                                }}\n                              >\n                                <Button\n                                  key={i}\n                                  className=\"btn-outline-success\"\n                                  variant=\"outline-success\"\n                                >\n                                  {type + \" Question\"}\n                                </Button>\n                              </Link>\n                            </Col>\n                          );\n                        })\n                      ) : (\n                        <Alert variant=\"danger\">Invalid Inputs</Alert>\n                      )}\n                    </Row>\n                  </Stack>\n                </Stack>\n              </Col>\n            </Stack>\n          </Card.Body>\n        </Card>\n      </Container>\n    </>\n  );\n}\n","import { Link, useLocation } from \"react-router-dom\";\nimport { useCallback, useEffect, useState, Component, useRef } from \"react\";\nimport {\n  Card,\n  Row,\n  Col,\n  Pagination,\n  Container,\n  Button,\n  Form,\n  Stack,\n  Modal,\n} from \"react-bootstrap\";\n// import \"./Simulation.css\";\nimport \"./stylesheet/Simulation.css\"; // scss file access\nimport { List, ListEntry, TextInput } from \"../base\";\n\nconst Duration = (props) => {\n  const [timeIn, setTimeIn] = useState({\n    h: Math.floor(parseInt(props.duration) / 60),\n    m: parseInt(props.duration) % 60,\n    s: 0,\n  });\n\n  useEffect(() => {\n    const myInterval = setInterval(() => {\n      setTimeIn((time) => {\n        const updateTime = { ...time };\n        if (time.s > 0) {\n          updateTime.s--;\n        }\n        if (time.s === 0) {\n          if (time.h === 0 && time.m === 0) {\n            clearInterval(myInterval);\n          } else if (time.m > 0) {\n            updateTime.m--;\n            updateTime.s = 59;\n          } else if (time.h > 0) {\n            updateTime.h--;\n            updateTime.m = 59;\n            updateTime.s = 59;\n          }\n        }\n        return updateTime;\n      });\n    }, 1000);\n    return () => clearInterval(myInterval);\n  }, [timeIn]);\n\n  return (\n    <>\n      <h3 className=\"simulation-duration\">\n        {timeIn.h.toString().padStart(2, \"0\")}:\n        {timeIn.m.toString().padStart(2, \"0\")}:\n        {timeIn.s.toString().padStart(2, \"0\")}\n      </h3>\n    </>\n  );\n};\n\nconst FinishModal = (props) => {\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  const timeIn =\n    Math.floor(parseInt(props.duration) / 60)\n      .toString()\n      .padStart(2, \"0\") +\n    \":\" +\n    (parseInt(props.duration) % 60).toString().padStart(2, \"0\") +\n    \":\" +\n    (0).toString().padStart(2, \"0\");\n\n  const [timeRecord, setTimeRecord] = useState({\n    h: Math.floor(parseInt(props.duration) / 60),\n    m: parseInt(props.duration) % 60,\n    s: 0,\n  });\n\n  useEffect(() => {\n    const myInterval = setInterval(() => {\n      setTimeRecord((time) => {\n        const updateTime = { ...time };\n        if (time.s > 0) {\n          updateTime.s--;\n        }\n        if (time.s === 0) {\n          if (time.h === 0 && time.m === 0) {\n            clearInterval(myInterval);\n          } else if (time.m > 0) {\n            updateTime.m--;\n            updateTime.s = 59;\n          } else if (time.h > 0) {\n            updateTime.h--;\n            updateTime.m = 59;\n            updateTime.s = 59;\n          }\n        }\n        return updateTime;\n      });\n    }, 1000);\n    return () => clearInterval(myInterval);\n  }, [timeRecord]);\n\n  return timeRecord.h === 0 && timeRecord.m === 0 && timeRecord.s === 0 ? (\n    <Modal show={true} className=\"simulation-modal\">\n      <Modal.Header>\n        <Modal.Title>Time Is Up!</Modal.Title>\n      </Modal.Header>\n      <Modal.Footer>\n        <Link\n          className=\"outline-secondary\"\n          to={{\n            pathname: \"/simulationresult/\" + props.locationState.courseId,\n          }}\n          state={{\n            courseId: props.locationState.courseId,\n            title: props.locationState.title,\n            num: props.locationState.num,\n            penalty: props.locationState.penalty,\n            max: props.locationState.max,\n            isMulti: props.locationState.isMulti,\n            pointPerCorrectAns:\n              props.locationState.max / props.locationState.num,\n            duration: timeIn,\n            timeElapsed: `${timeRecord.h\n              .toString()\n              .padStart(2, \"0\")}:${timeRecord.m\n              .toString()\n              .padStart(2, \"0\")}:${timeRecord.s.toString().padStart(2, \"0\")}`,\n          }}\n        >\n          <Button className=\"btn-outline-success\" variant=\"outline-success\">\n            See Result\n          </Button>\n        </Link>\n      </Modal.Footer>\n    </Modal>\n  ) : (\n    <>\n      <Button\n        className=\"btn-outline-success\"\n        variant=\"outline-success\"\n        onClick={handleShow}\n      >\n        Finish\n      </Button>\n      <Modal show={show} onHide={handleClose} className=\"simulation-modal\">\n        <Modal.Header closeButton>\n          <Modal.Title>Submit Before the Time Limit?</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>Confirm your submission to see the result.</Modal.Body>\n        <Modal.Footer>\n          <Link\n            className=\"outline-secondary\"\n            to={{\n              pathname: \"/simulationresult/\" + props.locationState.courseId,\n            }}\n            state={{\n              courseId: props.locationState.courseId,\n              title: props.locationState.title,\n              num: props.locationState.num,\n              penalty: props.locationState.penalty,\n              max: props.locationState.max,\n              isMulti: props.locationState.isMulti,\n              pointPerCorrectAns:\n                props.locationState.max / props.locationState.num,\n              duration: timeIn,\n              timeElapsed: `${timeRecord.h\n                .toString()\n                .padStart(2, \"0\")}:${timeRecord.m\n                .toString()\n                .padStart(2, \"0\")}:${timeRecord.s.toString().padStart(2, \"0\")}`,\n            }}\n          >\n            <Button className=\"btn-outline-success\" variant=\"outline-success\">\n              Confirm\n            </Button>\n          </Link>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n};\n\nexport default function Simulation(props) {\n  const locationState = useLocation().state;\n\n  const simulationRandomQuizType = [\"open\", \"close\"];\n  const [pageNum, setPageNum] = useState(1);\n  const randomizer =\n    simulationRandomQuizType[\n      Math.floor(Math.random() * simulationRandomQuizType.length)\n    ];\n  const [quizType, setQuizType] = useState(randomizer);\n\n  const PaginationRow = (props) => {\n    let items = [];\n    for (let num = 1; num <= props.numPage; num++) {\n      items.push(\n        <Pagination.Item\n          key={num}\n          active={num === pageNum}\n          onClick={() => {\n            setPageNum(num);\n          }}\n        >\n          {num}\n        </Pagination.Item>\n      );\n    }\n\n    return (\n      <Pagination>\n        <Pagination.First />\n        {items}\n        <Pagination.Last />\n      </Pagination>\n    );\n  };\n\n  // mock question type\n  useEffect(() => {\n    locationState.isMulti ? setQuizType(\"close\") : setQuizType(randomizer);\n  }, [pageNum]);\n\n  return (\n    <Container className=\"simulation-container\">\n      <h3 className=\"simulation-title\">\n        {locationState.type + \" Questions of \" + locationState.title}\n      </h3>\n      <Duration duration={locationState.duration} />\n      <Row className=\"pagination-finish\">\n        <Col>\n          <PaginationRow numPage={locationState.num} />\n        </Col>\n        <Col>\n          <FinishModal\n            locationState={locationState}\n            duration={locationState.duration}\n          />\n        </Col>\n      </Row>\n      <div className=\"simulation-question\">\n        <Stack gap={3}>\n          <Card className=\"simulation-question-text-card\">\n            <h3 className=\"simulation-question-title-number\">\n              {\"Question \" + pageNum}\n            </h3>\n            <Card.Text>\n              \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n              eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut\n              enim ad minim veniam, quis nostrud exercitation ullamco laboris\n              nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in\n              reprehenderit in voluptate velit esse cillum dolore eu fugiat\n              nulla pariatur. Excepteur sint occaecat cupidatat non proident,\n              sunt in culpa qui officia deserunt mollit anim id est laborum.\"\n            </Card.Text>\n          </Card>\n          <Card.Body className=\"simulation-question-answer\">\n            {quizType === \"open\" ? (\n              <TextInput />\n            ) : (\n              <Card className=\"simulation-question-answer-ratio-card\">\n                <Stack gap={1}>\n                  {[\"A\", \"B\", \"C\", \"D\"].map((e, i) => {\n                    return (\n                      <Form.Check\n                        key={i}\n                        type=\"checkbox\"\n                        label={e}\n                        className=\"simulation-answer-checkbox\"\n                      />\n                    );\n                  })}\n                </Stack>\n              </Card>\n            )}\n          </Card.Body>\n        </Stack>\n      </div>\n    </Container>\n  );\n}\n","import { Link, useLocation } from \"react-router-dom\";\nimport {\n  Card,\n  Container,\n  Table,\n  Stack,\n  Button,\n  Image,\n  Row,\n  Col,\n} from \"react-bootstrap\";\nimport \"./stylesheet/SimulationResult.css\"; // scss file access\n//import \"./SimulationResult.css\";\nimport { useState } from \"react\";\nimport { List } from \"../base\";\n\nconst timeUsedStr = (left, tot) => {\n  let h, m, s;\n  if (left.length !== tot.length) {\n    return \"\";\n  }\n  for (let i = 0; i < left.length; i++) {\n    if (i === 0) {\n      h = tot[0] - left[0];\n    }\n    if (i === 1) {\n      m = tot[1] - left[1];\n      if (m < 0) {\n        h -= 1;\n        m = m + 60;\n      }\n    }\n    if (i === 2) {\n      s = tot[2] - left[2];\n      if (s < 0) {\n        m -= 1;\n        s = s + 60;\n      }\n    }\n  }\n  return (\n    h.toString().padStart(2, \"0\") +\n    \":\" +\n    m.toString().padStart(2, \"0\") +\n    \":\" +\n    s.toString().padStart(2, \"0\")\n  );\n};\n\nexport default function SimulationResult() {\n  const locationState = useLocation().state;\n\n  const [numCorrect, setNumCorrect] = useState(locationState.num);\n  const [numPenalty, setNumPenalty] = useState(0);\n\n  const numNotGiven = locationState.num - numCorrect - numPenalty;\n  const numQuiz = locationState.num;\n  const maxScore = locationState.max;\n  const pointPerWrong = locationState.penalty;\n  const pointPerCorrect = locationState.pointPerCorrectAns;\n\n  const mockCorrectAns = [];\n  for (let i = 0; i < numQuiz; i++) {\n    mockCorrectAns.push({\n      id: locationState.courseId,\n      quizNum: i + 1,\n      ans: \"C\",\n      score: pointPerCorrect,\n      penalty: pointPerWrong,\n      isCorrect: false,\n    });\n  }\n\n  const mockUserAns = [];\n  for (let i = 0; i < numQuiz; i++) {\n    const randomAns = [\"A\", \"B\", \"C\", \"D\"];\n    const random = Math.floor(Math.random() * randomAns.length);\n    mockUserAns.push({\n      id: locationState.courseId,\n      quizNum: i + 1,\n      ans: randomAns[random],\n      score: pointPerCorrect,\n      penalty: pointPerWrong,\n      isCorrect: false,\n    });\n    mockUserAns[i].isCorrect = mockUserAns[i].ans === mockCorrectAns[i].ans;\n  }\n\n  const examDuration = locationState.duration.split(\":\").map((n) => {\n    return Number(n);\n  });\n  const timeElapsed = locationState.timeElapsed.split(\":\").map((n) => {\n    return Number(n);\n  });\n\n  const [useAns, setUserAns] = useState(mockUserAns);\n  const [correctAns, setCorrectAns] = useState(mockCorrectAns);\n  const [timeUsed, setTimeUsed] = useState(\n    timeUsedStr(timeElapsed, examDuration)\n  );\n\n  return (\n    <>\n      <Container className=\"simulation-result-container\">\n        <Row className=\"simulation-result-title\">\n          <h2 className=\"simulation-result-title-text\">Simulation Result</h2>\n        </Row>\n        <Row className=\"col-sm-8\">\n          <Col>\n            <h3 className=\"simulation-title\">{locationState.title}</h3>\n          </Col>\n          <Col>\n            <Link\n              className=\"simulation-result-start-button\"\n              to={{\n                pathname: \"/startsimulation/\" + locationState.courseId,\n              }}\n              state={{\n                courseId: locationState.courseId,\n                title: locationState.title,\n              }}\n            >\n              <Button className=\"start-button\">\n                <p>Start New Simulation</p>\n              </Button>\n            </Link>\n          </Col>\n        </Row>\n        {/*<h3>*/}\n        {/*  Time Used: {timeUsed} / {locationState.duration}{\" \"}*/}\n        {/*</h3>*/}\n        <Row>\n          <div className=\"simulation-result-score\">\n            <h2 className=\"simulation-result-user-score\">\n              {numCorrect * pointPerCorrect -\n                numPenalty * Math.abs(pointPerWrong)}\n            </h2>\n            <h2 className=\"simulation-result-max-score\">/{maxScore}</h2>\n          </div>\n        </Row>\n        {/*<Card className=\"result-table-card\">*/}\n\n          <Table striped bordered hover className=\"simulation-result-table\">\n            <thead>\n              <tr>\n                <th>Result</th>\n                <th>Number</th>\n                <th>Points Each</th>\n                <th>Total</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                <td>Correct Answer</td>\n                <td>{numCorrect}</td>\n                <td>{pointPerCorrect}</td>\n                <td>{numCorrect * pointPerCorrect}</td>\n              </tr>\n              <tr>\n                <td>Not Given</td>\n                <td>{numNotGiven}</td>\n                <td>0</td>\n                <td>{numNotGiven * 0}</td>\n              </tr>\n              <tr>\n                <td>Wrong Answer</td>\n                <td>{numPenalty}</td>\n                <td>{pointPerWrong}</td>\n                <td>{numPenalty * pointPerWrong}</td>\n              </tr>\n            </tbody>\n          </Table>\n        <List scope={\"simulationResult\"} rows={useAns} />\n      </Container>\n    </>\n  );\n}\n","import { useState } from \"react\";\nimport {\n  Container,\n  Card,\n  Row,\n  Col,\n  Button,\n  Image,\n  Stack,\n  ListGroup,\n  Accordion,\n  DropdownButton,\n  Dropdown,\n} from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport \"./SimulationAccess.css\";\n\nexport default function SimulationAccess() {\n  const fakeSimulationResult = [\n    {\n      id: \"A1234\",\n      course: \"Analysis I\",\n      score: 30,\n      date: \"20/05/21\",\n      maxScore: 30,\n    },\n    {\n      id: \"B5678\",\n      course: \"Physics I\",\n      score: 18,\n      date: \"01/11/21\",\n      maxScore: 30,\n    },\n    {\n      id: \"C1001\",\n      course: \"Geometry\",\n      score: 25,\n      date: \"20/04/22\",\n      maxScore: 30,\n    },\n  ];\n\n  const fakeCourses = [\n    {\n      id: \"A0B1C2\",\n      course: \"Analysis I\",\n      cfu: 10,\n      professor: \"Mario Rossi\",\n      enrolled: true,\n    },\n    {\n      code: \"D3E4F5\",\n      course: \"Physics I\",\n      cfu: 10,\n      professor: \"Stefano Bianchi\",\n      enrolled: true,\n    },\n    {\n      code: \"G6H7I8\",\n      course: \"Geometry\",\n      cfu: 10,\n      professor: \"Giuseppe Verdi\",\n      enrolled: true,\n    },\n  ];\n\n  const [coursesEnrolled, setCoursesEnrolled] = useState(fakeCourses);\n  const [simulationResult, setSimulationResult] =\n    useState(fakeSimulationResult);\n  const [courseSelected, setCourseSelected] = useState({});\n  const [courseSelectedTitle, setCourseSelectedTitle] = useState(\n    \"Select Course of Simulation\"\n  );\n  return (\n    <>\n      <Container className=\"\">\n        <h3>Simulation</h3>\n        <Card>\n          <Card.Body>\n            <Row className=\"col-xxl-12\">\n              <Col>\n                {courseSelected.course ? (\n                  <Link\n                    className=\"simulation-button\"\n                    to={{\n                      pathname: \"/startsimulation/\" + courseSelected.code,\n                    }}\n                    state={{\n                      courseId: courseSelected.code,\n                      title: courseSelected.course,\n                    }}\n                  >\n                    <Button>\n                      <Image\n                        className=\"add-icon\"\n                        src={\n                          process.env.PUBLIC_URL +\n                          \"/icons/SIMULATION RESULTS_WHITE.svg\"\n                        }\n                        width=\"13px\"\n                      />\n                      {\" Start Simulation\"}\n                    </Button>\n                  </Link>\n                ) : (\n                  <></>\n                )}\n                {/*<Link*/}\n                {/*    to={{ pathname: \"/startsimulation/\" + e.id }}*/}\n                {/*    state={{*/}\n                {/*        courseId: e.id,*/}\n                {/*        title: e.course,*/}\n                {/*    }}*/}\n                {/*>*/}\n                {/*    <Button className=\"right-button\">*/}\n                {/*        <Image*/}\n                {/*            className=\"add-icon\"*/}\n                {/*            src={process.env.PUBLIC_URL + \"/icons/SIMULATION RESULTS_WHITE.svg\"}*/}\n                {/*            width=\"13px\"*/}\n                {/*        />*/}\n                {/*        {\" Start Simulation\"}*/}\n                {/*    </Button>*/}\n                {/*</Link>*/}\n              </Col>\n              <Col>\n                <DropdownButton\n                  id=\"dropdown-basic-button\"\n                  title={courseSelectedTitle}\n                >\n                  {coursesEnrolled.map((e, i) => {\n                    if (e.enrolled) {\n                      return (\n                        <>\n                          <Dropdown.Item\n                            key={i}\n                            as=\"button\"\n                            onClick={() => {\n                              setCourseSelectedTitle(e.course);\n                              setCourseSelected(e);\n                            }}\n                          >\n                            {e.course}\n                          </Dropdown.Item>\n                        </>\n                      );\n                    }\n                  })}\n                </DropdownButton>\n              </Col>\n            </Row>\n            <Row>\n              <ListGroup className=\"simulation-access-result\">\n                <h6>Simulation Results</h6>\n                {simulationResult.map((e, i) => {\n                  return (\n                    <>\n                      <ListGroup.Item varient=\"flush\">\n                        {\n                          <Row key={i}>\n                            <Col>{e.course}</Col>\n                            <Col>{e.score}</Col>\n                            <Col>{e.date}</Col>\n                          </Row>\n                        }\n                      </ListGroup.Item>\n                    </>\n                  );\n                })}\n              </ListGroup>\n            </Row>\n          </Card.Body>\n        </Card>\n      </Container>\n    </>\n  );\n}\n","import {\n  Row,\n  Col,\n  Container,\n  Image,\n  Card,\n  Accordion,\n  Button,\n} from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport MarkdownPreview from \"./MarkdownPreview\";\nimport remarkGfm from \"remark-gfm\";\nimport remarkMath from \"remark-math\";\nimport rehypeKatex from \"rehype-katex\";\nimport rehypeHighlight from \"rehype-highlight\";\n\n// import \"./ListEntry.css\";\nimport \"./stylesheet/ListEntry.css\"\nimport QuestionPreview from \"./QuestionPreview\";\nimport { useEffect, useState } from \"react\";\nimport { UserSettings } from \"../pages\";\n\nfunction ListEntryDefault(props) {\n  return (\n    <tr>\n      {props.row.map((cell, i) => (\n        <td key={i}>\n          {props.dotted && <span className=\"table-dot\">●</span>}\n          {cell}\n        </td>\n      ))}\n    </tr>\n  );\n}\n\nfunction ListEntryCourses(props) {\n  return (\n    <tr>\n      <td>{props.row.code}</td>\n      <td>\n        <Link\n          to={\"/course/\" + props.row.code}\n          state={{ courseId: props.row.code, title: props.row.course }}\n          className=\"course-entry\"\n        >\n          {props.row.course}\n        </Link>\n      </td>\n      <td>{props.row.professor}</td>\n      <td>{props.row.cfu}</td>\n    </tr>\n  );\n}\n\nfunction ListEntryQuestions(props) {\n  return (\n    <div className=\"questionEntry\">\n      <Row>\n        <Col>\n            <Row>\n                <Link to={\"/question/\" + props.row.id} className=\"question\">\n                    {props.row.question}\n                </Link>\n            </Row>\n            <Row>\n                <Col>\n                    {props.row.tags.map((t, i) => (\n                        <Link key={i} to=\"\" className=\"tags\">\n                            #{t}\n                        </Link>\n                    ))}\n                </Col>\n            </Row>\n        </Col>\n          <Col>\n              <Row className=\"created-at\">Created at: {props.row.createdat}</Row>\n              <Row className=\"created-from\">from {props.row.author}</Row>\n          </Col>\n      </Row>\n      <Row>\n        <Col>{props.row.excerpt}</Col>\n      </Row>\n    </div>\n  );\n}\n\nfunction ListEntryAnswers(props) {\n  return (\n    <>\n      <tr>\n        <td colSpan=\"2\">\n          {props.row.author}, {props.row.createdat}\n          {props.row.replies > 0 && (\n            <span className=\"reply-link mx-3\">\n              {props.row.replies + \" \"}\n              <Image\n                src={process.env.PUBLIC_URL + \"/icons/DISCUSSION.svg\"}\n                width=\"28px\"\n              />\n            </span>\n          )}\n        </td>\n      </tr>\n      <tr>\n        <td className=\"answerEntry\">\n          <Link to=\"\">\n            <Image\n              src={process.env.PUBLIC_URL + \"/icons/UP ARROW.svg\"}\n              width=\"18px\"\n              onClick={() => {}}\n            />\n          </Link>\n        </td>\n        <MarkdownPreview rowspan=\"3\" markdown={props.row.answer} />\n      </tr>\n      <tr>\n        <td className=\"answerEntry\">\n          {props.row.like - props.row.dislike > 0 && \"+\"}\n          {props.row.like - props.row.dislike}\n        </td>\n      </tr>\n      <tr>\n        <td className=\"answerEntry\">\n          <Link to=\"\">\n            <Image\n              src={process.env.PUBLIC_URL + \"/icons/DOWN ARROW.svg\"}\n              width=\"18px\"\n              onClick={() => {}}\n            />\n          </Link>\n        </td>\n        <td>\n          <Link to=\"/discussion/1\">\n            <Button className=\"reply-link\">Reply</Button>\n          </Link>\n        </td>\n      </tr>\n    </>\n  );\n}\n\nfunction ListEntryReplies(props) {\n  return (\n    <div className=\"questionEntry\">\n      <Row>\n        <Col>{props.row.reply}</Col>\n      </Row>\n      <Row className=\"tags\">\n        <Col>from {props.row.author}</Col>\n        <Col>Created at: {props.row.createdat}</Col>\n      </Row>\n    </div>\n  );\n}\n\nfunction ListEntryTest(props) {\n  return (\n    <tr>\n      <td>{props.row.a}</td>\n      <td>{props.row.b}</td>\n      <td>{props.row.c}</td>\n    </tr>\n  );\n}\n\nfunction ListEntrySuggestion(props) {\n  return (\n    <Container>\n      <Col>\n        <Col>\n          <Link\n            to={\"/suggestion/\" + props.row.id}\n            className=\"suggestion-question\"\n          >\n            {props.row.question}\n          </Link>\n        </Col>\n        <Col className=\"suggestion-created-by\">from {props.row.author}</Col>\n        <Col className=\"suggestion-created-at\">Created at: {props.row.createdat}</Col>\n      </Col>\n    </Container>\n  );\n}\n\nfunction ListEntrySimulationResult(props) {\n  return (\n    <Accordion.Item eventKey={props.accordionKey} key={props.accordionKey}>\n      <Row>\n        <Col>\n          <Accordion.Header>\n            <Col className=\"col-md-2\">\n              {props.row.isCorrect ? (\n                <Image\n                  width={\"18px\"}\n                  src={process.env.PUBLIC_URL + \"/icons/CHECKMARK.svg\"}\n                />\n              ) : (\n                <Image\n                  width={\"18px\"}\n                  src={process.env.PUBLIC_URL + \"/icons/x.svg\"}\n                />\n              )}\n            </Col>\n            <Col>\n              <h6>Question {props.row.quizNum}</h6>\n            </Col>\n            <Col>\n              {props.row.isCorrect ? (\n                <h6>Score: {props.row.score}</h6>\n              ) : (\n                <h6>Score: {props.row.penalty}</h6>\n              )}\n            </Col>\n          </Accordion.Header>\n        </Col>\n      </Row>\n      <Accordion.Body>\n        <p>\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n          eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad\n          minim veniam, quis nostrud exercitation ullamco laboris nisi ut\n          aliquip ex ea commodo consequat. Duis aute irure dolor in\n          reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\n          pariatur. Excepteur sint occaecat cupidatat non proident, sunt in\n          culpa qui officia deserunt mollit anim id est laborum.\n        </p>\n        {\n          <Row>\n            <Col>\n              <h5>Your Answer: {props.row.ans}</h5>\n            </Col>\n            <Col>\n              <h5>Correct Answer: {\"C\"}</h5>\n              {/*props.row.correctAns*/}\n            </Col>\n          </Row>\n        }\n      </Accordion.Body>\n    </Accordion.Item>\n  );\n}\nfunction ListEntrySelection(props) {\n  return <option value={props.key + 1}>{props.row}</option>;\n}\n\nfunction ListEntry(props) {\n  return (\n    <>\n      {props.scope === \"default\" && (\n        <ListEntryDefault row={props.row} dotted={props.dotted} />\n      )}\n      {props.scope === \"courses\" && <ListEntryCourses row={props.row} />}\n      {props.scope === \"questions\" && <ListEntryQuestions row={props.row} />}\n      {props.scope === \"answers\" && <ListEntryAnswers row={props.row} />}\n      {props.scope === \"replies\" && <ListEntryReplies row={props.row} />}\n      {props.scope === \"test\" && <ListEntryTest row={props.row} />}\n      {props.scope === \"suggestion\" && <ListEntrySuggestion row={props.row} />}\n      {props.scope === \"simulationResult\" && (\n        <ListEntrySimulationResult\n          row={props.row}\n          accordionKey={props.accordionKey}\n        />\n      )}\n      {props.scope === \"selection\" && <ListEntrySelection row={props.row} />}\n    </>\n  );\n}\n\nexport default ListEntry;\n","import { Container, Row, Col } from \"react-bootstrap\";\nimport { List } from \"./\";\nimport \"./ListGroup.css\";\nimport { Link } from \"react-router-dom\";\n\nfunction ListGroup(props) {\n  return (\n    <Container>\n      {props.lists\n        .filter((useless, i) => i % props.cols === 0)\n        .map((useless, i) => (\n          <Row key={i}>\n            {props.lists\n              .slice(i * props.cols, (i + 1) * props.cols)\n              .map((l, j) => (\n                <Col key={j}>\n                  <Link\n                    className=\"list-attributes\"\n                    to={{\n                      pathname:\n                        \"/listfullpage/\" +\n                        l.title.replace(/\\s/g, \"\").toLowerCase(),\n                    }}\n                    state={{ scope: l.scope, title: l.title, rows: l.rows }}\n                  >\n                    <List\n                      key={i + l.scope + l.title + \"listComp\"}\n                      scope={l.scope}\n                      title={l.title}\n                      rows={l.rows}\n                      rounded={props.rounded}\n                      dotted={props.dotted}\n                    />\n                  </Link>\n                </Col>\n              ))}\n            {props.tiled &&\n              (i + 1) * props.cols > props.lists.length - 1 &&\n              props.lists.length % props.cols > 0 &&\n              [\n                ...Array(props.cols - (props.lists.length % props.cols)).keys(),\n              ].map((key) => <Col></Col>)}\n          </Row>\n        ))}\n    </Container>\n  );\n}\n\nexport default ListGroup;\n","import React from \"react\";\nimport { MarkdownUtil } from \"@sahircansurmeli/react-mde\";\n\nconst insertTex = {\n  name: \"insert-tex\",\n  icon: () => (\n    <img\n      src={process.env.PUBLIC_URL + \"/icons/TeX_logo.svg\"}\n      width=\"26\"\n      height=\"15\"\n      alt=\"Insert TeX\"\n    />\n  ),\n  buttonProps: {\n    \"aria-label\": \"Add TeX\",\n    title: \"Add TeX\",\n  },\n  execute: ({ textApi, initialState }) => {\n    const newSelectionRange = MarkdownUtil.selectWord({\n      text: initialState.text,\n      selection: initialState.selection,\n    });\n\n    const state1 = textApi.setSelectionRange(newSelectionRange);\n\n    const s1 = state1.selection;\n    const text = state1.text;\n    const selectedText = state1.selectedText;\n    let state2;\n\n    if (\n      selectedText.substring(0, 1) === \"$\" &&\n      selectedText.substring(selectedText.length - 1, selectedText.length) ===\n        \"$\"\n    ) {\n      state2 = textApi.replaceSelection(\n        selectedText.substring(1, selectedText.length - 1)\n      );\n      textApi.setSelectionRange({\n        start: s1.start,\n        end: s1.end - 1,\n      });\n    } else if (\n      s1.start >= 1 &&\n      text.substring(s1.start - 1, s1.start) === \"$\" &&\n      text.substring(s1.end, s1.end + 1) === \"$\"\n    ) {\n      textApi.setSelectionRange({\n        start: s1.start - 1,\n        end: s1.end + 1,\n      });\n      state2 = textApi.replaceSelection(state1.selectedText);\n      textApi.setSelectionRange({\n        start: state2.selection.start - state1.selectedText.length,\n        end: state2.selection.end,\n      });\n    } else {\n      // Replaces the current selection with the italic mark up\n      state2 = textApi.replaceSelection(`$${state1.selectedText}$`);\n      // Adjust the selection to not contain the *\n      textApi.setSelectionRange({\n        start: state2.selection.end - 1 - state1.selectedText.length,\n        end: state2.selection.end - 1,\n      });\n    }\n  },\n};\n\nexport default insertTex;\n","import { MarkdownUtil } from \"@sahircansurmeli/react-mde\";\n\nconst saveImage = {\n  execute: async ({ initialState, textApi, context, l18n }) => {\n    if (!context) {\n      throw new Error(\"wrong context\");\n    }\n\n    const {\n      event,\n      pasteOptions: { saveImage, multiple, accept },\n    } = context;\n\n    const items = isPasteEvent(context)\n      ? dataTransferToArray(event.clipboardData.items)\n      : isDragEvent(context)\n      ? dataTransferToArray(event.dataTransfer.items)\n      : fileListToArray(event.target.files);\n\n    const filteredItems = filterItems(items, { multiple, accept });\n\n    for (const index in filteredItems) {\n      const blob = items[index];\n\n      if (blob.size >= 9437184) {\n        window.alert(\n          `Error uploading ${blob.name}\\nFile size cannot exceed 9 MB`\n        );\n        continue;\n      }\n\n      const initialState = textApi.getState();\n      const breaksBeforeCount = MarkdownUtil.getBreaksNeededForEmptyLineBefore(\n        initialState.text,\n        initialState.selection.start\n      );\n\n      const breaksBefore = Array(breaksBeforeCount + 1).join(\"\\n\");\n      const placeHolder = `${breaksBefore}![${l18n.uploadingImage}]()`;\n\n      textApi.replaceSelection(placeHolder);\n\n      const blobContents = await readFileAsync(blob);\n      const savingImage = saveImage(blobContents, blob);\n      const imageUrl = (await savingImage.next()).value;\n\n      const newState = textApi.getState();\n      const uploadingText = newState.text.slice(\n        initialState.selection.start,\n        initialState.selection.start + placeHolder.length\n      );\n\n      if (uploadingText === placeHolder) {\n        textApi.setSelectionRange({\n          start: initialState.selection.start,\n          end: initialState.selection.start + placeHolder.length,\n        });\n\n        const realImageMarkdown = imageUrl\n          ? `${breaksBefore}![image](${imageUrl})`\n          : \"\";\n\n        const selectionDelta = realImageMarkdown.length - placeHolder.length;\n\n        textApi.replaceSelection(realImageMarkdown);\n        textApi.setSelectionRange({\n          start: newState.selection.start + selectionDelta,\n          end: newState.selection.end + selectionDelta,\n        });\n      }\n    }\n  },\n};\n\nasync function readFileAsync(file) {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n\n    reader.onload = () => {\n      resolve(reader.result);\n    };\n\n    reader.onerror = reject;\n    reader.readAsDataURL(file);\n  });\n}\n\nfunction filterItems(items, { multiple, accept }) {\n  let filteredItems = items;\n\n  if (!multiple) {\n    filteredItems = filteredItems.slice(0, 1);\n  }\n\n  if (accept) {\n    const acceptedTypes = accept.split(\",\");\n    const fileExtensions = new Set(\n      acceptedTypes.filter((t) => /^\\.\\w+/.test(t)).map((t) => t.split(\".\")[1])\n    );\n    const mimeTypes = new Set(\n      acceptedTypes.filter((t) => /^[-\\w.]+\\/[-\\w.]+$/.test(t))\n    );\n    const anyTypes = new Set(\n      acceptedTypes\n        .filter((t) => /(audio|video|image)\\/\\*/.test(t))\n        .map((t) => t.split(\"/\")[0])\n    );\n\n    filteredItems = filteredItems.filter(\n      (f) =>\n        fileExtensions.has(f.name.split(\".\")[1]) ||\n        mimeTypes.has(f.type) ||\n        anyTypes.has(f.type.split(\"/\")[0])\n    );\n  }\n\n  return filteredItems;\n}\n\nfunction dataTransferToArray(items) {\n  const result = [];\n  for (const index in items) {\n    const item = items[index];\n    if (item.kind === \"file\") {\n      result.push(item.getAsFile());\n    }\n  }\n  return result;\n}\n\nfunction fileListToArray(list) {\n  const result = [];\n  for (let i = 0; i < list.length; i++) {\n    result.push(list[i]);\n  }\n  return result;\n}\n\nfunction isPasteEvent(context) {\n  return context.event.clipboardData !== undefined;\n}\n\nfunction isDragEvent(context) {\n  return context.event.dataTransfer !== undefined;\n}\n\nexport default saveImage;\n","import React, { useState } from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport ReactMde, {\n  getDefaultToolbarCommands,\n} from \"@sahircansurmeli/react-mde\";\nimport ReactMarkdown from \"react-markdown\";\nimport remarkGfm from \"remark-gfm\";\nimport remarkMath from \"remark-math\";\nimport rehypeKatex from \"rehype-katex\";\nimport rehypeHighlight from \"rehype-highlight\";\nimport { insertTex, saveImage } from \"./textInput/commands\";\nimport PythonEditor from \"react-python-editor\";\nimport { Buffer } from \"buffer\";\nimport Jimp from \"jimp\";\n\nimport \"@sahircansurmeli/react-mde/lib/styles/css/react-mde-all.css\";\nimport \"./textInput/textInput.css\";\nimport \"katex/dist/katex.min.css\";\nimport \"highlight.js/styles/github.css\";\nimport \"./MarkdownPreview.css\";\n\nconst entryFiles = [\n  {\n    fullName: \"main.py\",\n    shortName: \"main.py\",\n    originalContent: `import micropip\n\n# to install other libraries, simply copy the next line and replace numpy with the name of the library you want to install\nawait micropip.install(\"numpy\")\n\n# set up your imports here, below the libraries installation steps\nimport numpy as np\n\n# at this point, you can run any standard Python code and the code from the libraries you have installed\nprint(\"Hello World\")`,\n    content: `import micropip\n\n# to install other libraries, simply copy the next line and replace numpy with the name of the library you want to install\nawait micropip.install(\"numpy\")\n\n# set up your imports here, below the libraries installation steps\nimport numpy as np\n\n# at this point, you can run any standard Python code and the code from the libraries you have installed\nprint(\"Hello World\")`,\n  },\n];\n\nfunction TextInput({\n  value,\n  onChange,\n  selectedTab,\n  onTabChange,\n  childProps,\n  pythonQuestion,\n  dark,\n}) {\n  const [val, setVal] = useState(\"\");\n  const [selTab, setSelTab] = useState(\"write\");\n  const [base64Imgs, setBase64Imgs] = useState({});\n  const [editorHeight, setEditorHeight] = useState(\"100px\");\n\n  const uploadImage = async function* (data, file) {\n    const filename = file.name.replace(/\\[|\\]|\\(|\\)/g, \"\");\n    const [mime, b64] = data.split(\";base64,\");\n    const buffer = Buffer(b64, \"base64\");\n\n    const image = await Jimp.read(buffer);\n\n    const processedBuffer =\n      image.getWidth() > 1024 || image.getHeight() > 1024\n        ? await image\n            .scaleToFit(1024, 1024)\n            .getBufferAsync(mime.split(\"data:\").pop())\n        : b64;\n\n    const processedData =\n      mime + \";base64,\" + processedBuffer.toString(\"base64\");\n\n    setBase64Imgs((prev) => {\n      return {\n        ...prev,\n        [filename]: processedData,\n      };\n    });\n    yield filename;\n  };\n\n  const generatePreviewMarkdown = async (markdown) => {\n    const filenamesToReplace = Object.keys(base64Imgs);\n\n    if (filenamesToReplace.length < 1) {\n      return markdown;\n    }\n\n    const re = new RegExp(\n      Object.keys(base64Imgs)\n        .map(\n          (fn) => `!\\\\[.*\\\\]\\\\(${fn.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\")}\\\\)`\n        )\n        .join(\"|\"),\n      \"gi\"\n    );\n\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        resolve(\n          markdown.replaceAll(re, (match) => {\n            const alt = match.match(/!\\[.*\\]/);\n            const fn = match.match(/\\]\\(.*\\)/);\n            if (!alt || !fn) {\n              return match;\n            }\n            return `${alt[0]}(${base64Imgs[fn[0].slice(2, fn[0].length - 1)]})`;\n          })\n        );\n      });\n    });\n  };\n\n  const handleCopy = (file) => {\n    const re = new RegExp(\"\\n?```py\\n# \" + file.shortName + \".*```\\n?\", \"gs\");\n    const prev = value || val;\n    let newText;\n\n    // DO NOT MODIFY\n    const code = file.shortName.endsWith(\".py\")\n      ? `\n\\`\\`\\`py\n# ${file.shortName}\n\n${file.content}\n\\`\\`\\`\n`\n      : `\n\\`\\`\\`\n${file.content}\n\\`\\`\\`\n`;\n\n    const match = re.exec(prev);\n\n    if (match) {\n      newText =\n        prev.substr(0, match.index) +\n        code +\n        prev.substr(re.lastIndex, prev.length);\n      console.log(match.index, re.lastIndex);\n    } else {\n      newText = prev + code;\n    }\n\n    if (onChange) {\n      onChange(newText);\n    } else {\n      setVal(newText);\n    }\n  };\n\n  return (\n    <Container>\n      <ReactMde\n        loadingPreview=\"Loading preview...\"\n        value={value || val}\n        onChange={onChange || setVal}\n        selectedTab={selectedTab || selTab}\n        onTabChange={onTabChange || setSelTab}\n        commands={{ \"insert-tex\": insertTex, \"upload-img\": saveImage }}\n        toolbarCommands={[...getDefaultToolbarCommands(), [\"insert-tex\"]]}\n        generateMarkdownPreview={async (markdown) => {\n          const previewMarkdown = await generatePreviewMarkdown(markdown);\n          return Promise.resolve(\n            <ReactMarkdown\n              remarkPlugins={[remarkGfm, remarkMath]}\n              rehypePlugins={[rehypeKatex, rehypeHighlight]}\n            >\n              {previewMarkdown}\n            </ReactMarkdown>\n          );\n        }}\n        childProps={childProps}\n        paste={{\n          saveImage: uploadImage,\n          command: \"upload-img\",\n          multiple: true,\n        }}\n      />\n      {pythonQuestion && (\n        <PythonEditor\n          editorHeight={editorHeight}\n          outputHeight=\"100px\"\n          dark={dark}\n          onCopy={handleCopy}\n          projectFiles={entryFiles}\n          backgroundColor={dark ? \"#212529\" : \"#ffffff\"}\n          onFullScreen={(fs) => {\n            if (fs) {\n              setEditorHeight(\"500px\");\n            } else {\n              setEditorHeight(\"100px\");\n            }\n          }}\n        />\n      )}\n    </Container>\n  );\n}\n\nexport default TextInput;\n","import React, { useState } from \"react\";\nimport { Collapse, Row, Col, Form, Pagination, Button } from \"react-bootstrap\";\n\nimport List from \"./List\";\n\nconst fakeAnswers = [\n  {\n    id: 1,\n    answer: \"$\\\\int_{a}^{b}{x^2 dx}$\",\n    author: \"Donato\",\n    createdat: \"15:20 12/01/2021\",\n    like: 5,\n    dislike: 2,\n    replies: 3,\n  },\n  {\n    id: 2,\n    answer: \"Morbi leo risus porta ac consectetur ac\",\n    author: \"Jim\",\n    createdat: \"17:30 13/02/2021\",\n    like: 5,\n    dislike: 7,\n    replies: 0,\n  },\n  {\n    id: 3,\n    answer: \"Vestibulum at eros\",\n    author: \"Derek\",\n    createdat: \"19:40 14/03/2021\",\n    like: 9,\n    dislike: 1,\n    replies: 1,\n  },\n];\n\nconst no_pages = 5;\n\nfunction Discussion(props) {\n  const [showDiscussion, setShowDiscussion] = useState(\n    props.showdiscussion || false\n  );\n  const [answers, setAnswers] = useState(fakeAnswers);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  return (\n    <>\n      <Row>\n        <Col lg=\"12\">\n          <Button\n            onClick={() => setShowDiscussion((value) => !value)}\n            aria-controls=\"example-collapse-text\"\n            aria-expanded={showDiscussion}\n            className={`w-100 ${\n              showDiscussion ? \"btn-warning\" : \"btn-success\"\n            }`}\n          >\n            {showDiscussion ? \"Hide discussion\" : \"Show discusssion\"}\n          </Button>\n        </Col>\n      </Row>\n\n      <Collapse className=\"collapse\" in={showDiscussion}>\n        <Row>\n          <Col lg=\"12\">\n            <Form.Group controlId=\"formGridState\">\n              <Form.Control placeholder=\"Search\" />\n            </Form.Group>\n          </Col>\n          <Col lg=\"12\">\n            <List scope=\"answers\" rows={answers} />\n          </Col>\n          <Col lg=\"12\" sm=\"12\" md=\"12\">\n            <Pagination>\n              {[...Array(no_pages)].map((_, idx) => (\n                <Pagination.Item\n                  key={idx + 1}\n                  active={currentPage === idx + 1}\n                  onClick={() => setCurrentPage(idx + 1)}\n                >\n                  {idx + 1}\n                </Pagination.Item>\n              ))}\n            </Pagination>\n          </Col>\n        </Row>\n      </Collapse>\n    </>\n  );\n}\n\nexport default Discussion;\n","import React, { useRef, useState } from \"react\";\nimport { InputGroup, Button } from \"react-bootstrap\";\nimport { AsyncTypeahead } from \"react-bootstrap-typeahead\";\n\n// import styles from \"./searchBar/searchBar.module.scss\";\nimport styles from \"./stylesheet/SearchBar.scss\"\nimport \"./stylesheet/SearchBar.css\"\nimport \"react-bootstrap-typeahead/css/Typeahead.css\";\nimport \"react-bootstrap-typeahead/css/Typeahead.bs5.css\";\n\nfunction SearchBar({ apiCall }) {\n  /* Mock search suggestions */\n  const fakeSuggestions = [\n    { label: \"duckduckgo\" },\n    { label: \"duckduck\" },\n    { label: \"duckduckgo browser\" },\n    { label: \"duckduckgo download\" },\n  ];\n\n  const [suggestions, setSuggestions] = useState([]);\n  const [value, setValue] = useState(\"\");\n\n  const onSearch = (inputText) => {\n    setValue(inputText);\n    if (inputText.length > 0) {\n      setSuggestions(fakeSuggestions);\n    } else {\n      setSuggestions([]);\n    }\n  };\n\n  const ref = useRef();\n\n  return (\n    <InputGroup>\n      <AsyncTypeahead\n        id=\"Search bar\"\n        placeholder=\"Search a course\"\n        isLoading={false}\n        searchText=\"\"\n        emptyLabel=\"\"\n        promptText=\"\"\n        options={suggestions}\n        filterBy={() => true}\n        renderMenuItemChildren={(option) => <span>{option.label}</span>}\n        ref={ref}\n        onInputChange={onSearch}\n        onSearch={() => {}}\n        className=\"async-type-head\"\n      />\n      {value.length > 0 && (\n        <Button\n          variant=\"link\"\n          onClick={() => {\n            ref.current.clear();\n            setValue(\"\");\n          }}\n          className={\n            \"btn-outline-primary border-left-0 border \" + styles.clearButton\n          }\n        >\n          <img\n            width=\"20\"\n            height=\"20\"\n            src={process.env.PUBLIC_URL + \"/icons/x.svg\"}\n            alt=\"Search\"\n          />\n        </Button>\n      )}\n      <Button\n        variant={value.length > 0 ? \"primary\" : \"link\"}\n        className=\"btn-outline-primary border-left-0 border\"\n      >\n        <img\n          width=\"20\"\n          height=\"20\"\n          src={process.env.PUBLIC_URL + \"/icons/SEARCH.svg\"}\n          alt=\"Search\"\n        />\n      </Button>\n    </InputGroup>\n  );\n}\n\nexport default SearchBar;\n","import { Alert, Button } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\n\nfunction DebugPaths() {\n  const style = { padding: \"5px\" };\n  return (\n    <Alert dismissible>\n      <b>Dev only: </b>\n      <Link style={style} to=\"/login\">\n        Login\n      </Link>\n      <Link style={style} to=\"/\">\n        Home\n      </Link>\n      <Link style={style} to=\"/profile\">\n        Profile\n      </Link>\n      <Link style={style} to=\"/courses\">\n        Courses\n      </Link>\n      <Link\n        style={style}\n        to=\"/course/ABCDEF\"\n        state={{ courseId: \"courseId\", title: \"Course Name\" }}\n      >\n        Course\n      </Link>\n      <Link style={style} to=\"/question/QUESTID\">\n        Question\n      </Link>\n      <Link style={style} to=\"/myquestions\">\n        MyQuestions\n      </Link>\n      <Link style={style} to=\"/discussion/QUESTID\">\n        Discussion\n      </Link>\n      <Link style={style} to=\"/startsimulation/\">\n        Simulation\n      </Link>\n      <Link style={style} to=\"/settings\">\n        UserSettings\n      </Link>\n      <Link style={style} to=\"/todel\">\n        Exam\n      </Link>\n      <Link style={style} to=\"/python-editor\">\n        Python Editor\n      </Link>\n    </Alert>\n  );\n}\n\nexport default DebugPaths;\n","import \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { useState, useEffect } from \"react\";\nimport { Container, Row, Col, Alert, Button } from \"react-bootstrap\";\nimport { Routes, Route, Navigate as Redirect, Link } from \"react-router-dom\";\nimport { NavigationBar, Footer, DebugPaths, TextInput } from \"./base/\";\nimport {\n  AddQuestion,\n  Answers,\n  CoursesList,\n  Exam,\n  Home,\n  LoginForm,\n  MyQuestions,\n  Profile,\n  Questions,\n  Replies,\n  UserSettings,\n  ListFullPage,\n  Bookmarks,\n  StartSimulation,\n  Simulation,\n  SimulationResult,\n  SimulationAccess,\n} from \"./pages/\";\n// import parsedQuestions from \"./constants/parsed\";\n// import API from './api/API'\n\nfunction App() {\n  const [loggedIn, setLoggedIn] = useState(true); // TODO: reset to false, true used for debugging purposes\n  const [showHints, setShowHints] = useState(false);\n  const [showDiscussion, setShowDiscussion] = useState(false);\n  const [admin, setAdmin] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const [dark, setDark] = useState(false);\n\n  useEffect(() => {\n    if (!loggedIn) setMessage(\"\");\n  }, [loggedIn]);\n\n  // useEffect(() => {\n  // \tconst checkAuth = async () => {\n  // \t\ttry {\n  // \t\t\tconst user = await API.getUserInfo()\n  // \t\t\tsetLoggedIn(true)\n  // \t\t\tuser.admin ? setAdmin(true) : setAdmin(false)\n  // \t\t} catch (err) {\n  // \t\t\tconsole.error(err.error)\n  // \t\t}\n  // \t}\n  // \tcheckAuth()\n  // }, [])\n\n  // const doLogin = async credentials => {\n  // \ttry {\n  // \t\tconst username = await API.login(credentials)\n  // \t\tsetLoggedIn(true)\n  // \t\tsetMessage({ msg: `Welcome, ${username}!`, type: 'success' })\n  // \t\tconst user = await API.getUserInfo()\n  // \t\tuser.admin ? setAdmin(true) : setAdmin(false)\n  // \t} catch (err) {\n  // \t\tsetMessage({ msg: err, type: 'danger' })\n  // \t}\n  // }\n\n  const doLogout = async () => {\n    // await API.logout()\n    setLoggedIn(false);\n    setAdmin(false);\n  };\n\n  return (\n    <Container fluid>\n      <Row>\n        <Col className=\"px-0\">\n          <NavigationBar\n            dark={dark}\n            setdark={setDark}\n            logged={loggedIn}\n            setlogged={setLoggedIn}\n            showhints={showHints}\n            setshowhints={setShowHints}\n            showdiscussion={showDiscussion}\n            setshowdiscussion={setShowDiscussion}\n            logout={doLogout}\n          />\n        </Col>\n      </Row>\n      <Row className=\"my-4\">\n        <Col xs={6} className=\"mx-auto\">\n          {message && (\n            <Alert\n              variant={message.type}\n              onClose={() => setMessage(\"\")}\n              dismissible={!message.noclose}\n            >\n              {message.msg}\n            </Alert>\n          )}\n        </Col>\n      </Row>\n      <DebugPaths />\n      <Row className=\"my-4\">\n        <Col xs={10} md={8} className=\"mx-auto\">\n          {/*\n\t\t\t\t\t<Exam question={parsedQuestions.quiz.question} />\n\t\t\t\t\t*/}\n          {loggedIn ? (\n            <Routes>\n              <Route path=\"/*\" element={<Redirect to=\"/\" />} />\n              <Route path=\"/\" element={<Home />} />\n              <Route path=\"/profile\" element={<Profile />} />\n              <Route path=\"/settings\" element={<UserSettings />} />\n              <Route path=\"/courses\" element={<CoursesList />} />\n              <Route path=\"/course/:courseid\" element={<Questions />} />\n              <Route\n                path=\"/question/:questionid\"\n                element={\n                  <Answers\n                    showhints={showHints}\n                    setshowhints={setShowHints}\n                    showdiscussion={showDiscussion}\n                    setshowdiscussion={setShowDiscussion}\n                  />\n                }\n              />\n              <Route path=\"/discussion/:questionid\" element={<Replies />} />\n              <Route\n                path=\"/simulation/:simulationType\"\n                element={<Simulation />}\n              />\n              <Route path=\"/addquestion\" element={<AddQuestion />} />\n              <Route path=\"/todel\" element={<Exam />} />\n              <Route\n                path=\"/listfullpage/:listName\"\n                element={<ListFullPage />}\n              />\n              <Route path=\"/bookmarks\" element={<Bookmarks />} />\n              <Route\n                path=\"/startsimulation/:courseName\"\n                element={<StartSimulation />}\n              />\n              <Route\n                path=\"/simulationresult/:courseName\"\n                element={<SimulationResult />}\n              />\n              <Route path=\"/simulationview\" element={<SimulationAccess />} />\n              <Route\n                path=\"/python-editor\"\n                element={<TextInput dark={dark} pythonQuestion />}\n              />{\" \"}\n              {/* For debugging purposes */}\n            </Routes>\n          ) : (\n            <Routes>\n              <Route path=\"/*\" element={<Redirect to=\"/login\" />} />\n              <Route\n                path=\"/login\"\n                element={<LoginForm login={() => setLoggedIn(true)} />}\n              />\n            </Routes>\n          )}\n        </Col>\n      </Row>\n      <Row>\n        <Footer />\n      </Row>\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nlet basename = \"\";\nconst { PUBLIC_URL } = process.env;\n\nif (PUBLIC_URL) {\n  const splitArray = PUBLIC_URL.split(\"://\")[1].split(\"/\");\n  basename =\n    (splitArray.length > 1 && `/${splitArray[splitArray.length - 1]}`) || \"\";\n}\n\nReactDOM.render(\n  // <React.StrictMode>\n  <Router basename={basename}>\n    <App />\n  </Router>,\n  // </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}